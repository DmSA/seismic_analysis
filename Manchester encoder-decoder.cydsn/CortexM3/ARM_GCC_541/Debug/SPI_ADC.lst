ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI_ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_ADC_EnableTxInt,"ax",%progbits
  20              		.align	2
  21              		.global	SPI_ADC_EnableTxInt
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPI_ADC_EnableTxInt, %function
  25              	SPI_ADC_EnableTxInt:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC5\\SPI_ADC.c"
   1:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI_ADC.c **** * File Name: SPI_ADC.c
   3:Generated_Source\PSoC5/SPI_ADC.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI_ADC.c **** *
   5:Generated_Source\PSoC5/SPI_ADC.c **** * Description:
   6:Generated_Source\PSoC5/SPI_ADC.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPI_ADC.c **** *
   8:Generated_Source\PSoC5/SPI_ADC.c **** * Note:
   9:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
  10:Generated_Source\PSoC5/SPI_ADC.c **** *
  11:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPI_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPI_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPI_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPI_ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPI_ADC.c **** 
  18:Generated_Source\PSoC5/SPI_ADC.c **** #include "SPI_ADC_PVT.h"
  19:Generated_Source\PSoC5/SPI_ADC.c **** 
  20:Generated_Source\PSoC5/SPI_ADC.c **** #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_txBuffer[SPI_ADC_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_txBufferFull;
  23:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_txBufferRead;
  24:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_txBufferWrite;
  25:Generated_Source\PSoC5/SPI_ADC.c **** #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPI_ADC.c **** 
  27:Generated_Source\PSoC5/SPI_ADC.c **** #if(SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_rxBuffer[SPI_ADC_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_rxBufferFull;
  30:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_rxBufferRead;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 2


  31:Generated_Source\PSoC5/SPI_ADC.c ****     volatile uint8 SPI_ADC_rxBufferWrite;
  32:Generated_Source\PSoC5/SPI_ADC.c **** #endif /* (SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPI_ADC.c **** 
  34:Generated_Source\PSoC5/SPI_ADC.c **** uint8 SPI_ADC_initVar = 0u;
  35:Generated_Source\PSoC5/SPI_ADC.c **** 
  36:Generated_Source\PSoC5/SPI_ADC.c **** volatile uint8 SPI_ADC_swStatusTx;
  37:Generated_Source\PSoC5/SPI_ADC.c **** volatile uint8 SPI_ADC_swStatusRx;
  38:Generated_Source\PSoC5/SPI_ADC.c **** 
  39:Generated_Source\PSoC5/SPI_ADC.c **** 
  40:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_Init
  42:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPI_ADC.c **** *
  44:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
  45:Generated_Source\PSoC5/SPI_ADC.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPI_ADC.c **** *
  47:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
  48:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
  49:Generated_Source\PSoC5/SPI_ADC.c **** *
  50:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
  51:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
  52:Generated_Source\PSoC5/SPI_ADC.c **** *
  53:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPI_ADC.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPI_ADC.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPI_ADC.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPI_ADC.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPI_ADC.c **** *
  59:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
  61:Generated_Source\PSoC5/SPI_ADC.c **** *
  62:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_Init(void) 
  64:Generated_Source\PSoC5/SPI_ADC.c **** {
  65:Generated_Source\PSoC5/SPI_ADC.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_COUNTER_PERIOD_REG = SPI_ADC_BITCTR_INIT;
  67:Generated_Source\PSoC5/SPI_ADC.c **** 
  68:Generated_Source\PSoC5/SPI_ADC.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntDisable         (SPI_ADC_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntSetPriority     (SPI_ADC_TX_ISR_NUMBER,  SPI_ADC_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPI_ADC.c ****         (void) CyIntSetVector(SPI_ADC_TX_ISR_NUMBER, &SPI_ADC_TX_ISR);
  73:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPI_ADC.c **** 
  75:Generated_Source\PSoC5/SPI_ADC.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntDisable         (SPI_ADC_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntSetPriority     (SPI_ADC_RX_ISR_NUMBER,  SPI_ADC_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPI_ADC.c ****         (void) CyIntSetVector(SPI_ADC_RX_ISR_NUMBER, &SPI_ADC_RX_ISR);
  80:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPI_ADC.c **** 
  82:Generated_Source\PSoC5/SPI_ADC.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_ClearFIFO();
  84:Generated_Source\PSoC5/SPI_ADC.c **** 
  85:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferRead  = 0u;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 3


  88:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPI_ADC.c **** 
  91:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPI_ADC.c **** 
  97:Generated_Source\PSoC5/SPI_ADC.c ****     (void) SPI_ADC_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC5/SPI_ADC.c ****     (void) SPI_ADC_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC5/SPI_ADC.c **** 
 100:Generated_Source\PSoC5/SPI_ADC.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_MASK_REG = SPI_ADC_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_MASK_REG = SPI_ADC_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC5/SPI_ADC.c **** }
 104:Generated_Source\PSoC5/SPI_ADC.c **** 
 105:Generated_Source\PSoC5/SPI_ADC.c **** 
 106:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_Enable
 108:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPI_ADC.c **** *
 110:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 111:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPI_ADC.c **** *
 113:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 114:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 115:Generated_Source\PSoC5/SPI_ADC.c **** *
 116:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 117:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 118:Generated_Source\PSoC5/SPI_ADC.c **** *
 119:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_Enable(void) 
 121:Generated_Source\PSoC5/SPI_ADC.c **** {
 122:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPI_ADC.c **** 
 124:Generated_Source\PSoC5/SPI_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 125:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_COUNTER_CONTROL_REG |= SPI_ADC_CNTR_ENABLE;
 126:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_ACTL_REG  |= SPI_ADC_INT_ENABLE;
 127:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_ACTL_REG  |= SPI_ADC_INT_ENABLE;
 128:Generated_Source\PSoC5/SPI_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 129:Generated_Source\PSoC5/SPI_ADC.c **** 
 130:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_IntClock_Enable();
 132:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPI_ADC.c **** 
 134:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_EnableTxInt();
 135:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_EnableRxInt();
 136:Generated_Source\PSoC5/SPI_ADC.c **** }
 137:Generated_Source\PSoC5/SPI_ADC.c **** 
 138:Generated_Source\PSoC5/SPI_ADC.c **** 
 139:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_Start
 141:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPI_ADC.c **** *
 143:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 144:Generated_Source\PSoC5/SPI_ADC.c **** *  Initialize and Enable the SPI Master component.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 4


 145:Generated_Source\PSoC5/SPI_ADC.c **** *
 146:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 147:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 148:Generated_Source\PSoC5/SPI_ADC.c **** *
 149:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 150:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 151:Generated_Source\PSoC5/SPI_ADC.c **** *
 152:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 153:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPI_ADC.c **** *  first function call.
 155:Generated_Source\PSoC5/SPI_ADC.c **** *
 156:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 157:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPI_ADC.c **** *
 159:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 161:Generated_Source\PSoC5/SPI_ADC.c **** *
 162:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_Start(void) 
 164:Generated_Source\PSoC5/SPI_ADC.c **** {
 165:Generated_Source\PSoC5/SPI_ADC.c ****     if(0u == SPI_ADC_initVar)
 166:Generated_Source\PSoC5/SPI_ADC.c ****     {
 167:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_Init();
 168:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_initVar = 1u;
 169:Generated_Source\PSoC5/SPI_ADC.c ****     }
 170:Generated_Source\PSoC5/SPI_ADC.c **** 
 171:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_Enable();
 172:Generated_Source\PSoC5/SPI_ADC.c **** }
 173:Generated_Source\PSoC5/SPI_ADC.c **** 
 174:Generated_Source\PSoC5/SPI_ADC.c **** 
 175:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_Stop
 177:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPI_ADC.c **** *
 179:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 180:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPI_ADC.c **** *
 182:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 183:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 184:Generated_Source\PSoC5/SPI_ADC.c **** *
 185:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 186:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 187:Generated_Source\PSoC5/SPI_ADC.c **** *
 188:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 189:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPI_ADC.c **** *
 191:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_Stop(void) 
 193:Generated_Source\PSoC5/SPI_ADC.c **** {
 194:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPI_ADC.c **** 
 196:Generated_Source\PSoC5/SPI_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 197:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_ADC_INT_ENABLE);
 198:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_ADC_INT_ENABLE);
 199:Generated_Source\PSoC5/SPI_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 200:Generated_Source\PSoC5/SPI_ADC.c **** 
 201:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_CLOCK)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 5


 202:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_IntClock_Disable();
 203:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPI_ADC.c **** 
 205:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_DisableTxInt();
 206:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_DisableRxInt();
 207:Generated_Source\PSoC5/SPI_ADC.c **** }
 208:Generated_Source\PSoC5/SPI_ADC.c **** 
 209:Generated_Source\PSoC5/SPI_ADC.c **** 
 210:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_EnableTxInt
 212:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPI_ADC.c **** *
 214:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 215:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPI_ADC.c **** *
 217:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 218:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 219:Generated_Source\PSoC5/SPI_ADC.c **** *
 220:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 221:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 222:Generated_Source\PSoC5/SPI_ADC.c **** *
 223:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 224:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPI_ADC.c **** *
 226:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPI_ADC.c **** {
  28              		.loc 1 228 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 229:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntEnable(SPI_ADC_TX_ISR_NUMBER);
  33              		.loc 1 230 0
  34 0000 0822     		movs	r2, #8
  35 0002 014B     		ldr	r3, .L2
  36 0004 1A60     		str	r2, [r3]
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00E100E0 		.word	-536813312
  42              		.cfi_endproc
  43              	.LFE4:
  44              		.size	SPI_ADC_EnableTxInt, .-SPI_ADC_EnableTxInt
  45              		.section	.text.SPI_ADC_EnableRxInt,"ax",%progbits
  46              		.align	2
  47              		.global	SPI_ADC_EnableRxInt
  48              		.thumb
  49              		.thumb_func
  50              		.type	SPI_ADC_EnableRxInt, %function
  51              	SPI_ADC_EnableRxInt:
  52              	.LFB5:
 231:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPI_ADC.c **** }
 233:Generated_Source\PSoC5/SPI_ADC.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 6


 234:Generated_Source\PSoC5/SPI_ADC.c **** 
 235:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_EnableRxInt
 237:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPI_ADC.c **** *
 239:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 240:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPI_ADC.c **** *
 242:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 243:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 244:Generated_Source\PSoC5/SPI_ADC.c **** *
 245:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 246:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 247:Generated_Source\PSoC5/SPI_ADC.c **** *
 248:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 249:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPI_ADC.c **** *
 251:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPI_ADC.c **** {
  53              		.loc 1 253 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 254:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntEnable(SPI_ADC_RX_ISR_NUMBER);
  58              		.loc 1 255 0
  59 0000 0422     		movs	r2, #4
  60 0002 014B     		ldr	r3, .L5
  61 0004 1A60     		str	r2, [r3]
  62 0006 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 0008 00E100E0 		.word	-536813312
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	SPI_ADC_EnableRxInt, .-SPI_ADC_EnableRxInt
  70              		.section	.text.SPI_ADC_Enable,"ax",%progbits
  71              		.align	2
  72              		.global	SPI_ADC_Enable
  73              		.thumb
  74              		.thumb_func
  75              		.type	SPI_ADC_Enable, %function
  76              	SPI_ADC_Enable:
  77              	.LFB1:
 121:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 enableInterrupts;
  78              		.loc 1 121 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 124:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_COUNTER_CONTROL_REG |= SPI_ADC_CNTR_ENABLE;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 7


  86              		.loc 1 124 0
  87 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  88              	.LVL0:
 125:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_ACTL_REG  |= SPI_ADC_INT_ENABLE;
  89              		.loc 1 125 0
  90 0006 0C4A     		ldr	r2, .L9
  91 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  92 000a 43F02003 		orr	r3, r3, #32
  93 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_ACTL_REG  |= SPI_ADC_INT_ENABLE;
  94              		.loc 1 126 0
  95 0010 013A     		subs	r2, r2, #1
  96 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  97 0014 43F01003 		orr	r3, r3, #16
  98 0018 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPI_ADC.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 127 0
 100 001a 02F58072 		add	r2, r2, #256
 101 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 102 0020 43F01003 		orr	r3, r3, #16
 103 0024 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPI_ADC.c **** 
 104              		.loc 1 128 0
 105 0026 FFF7FEFF 		bl	CyExitCriticalSection
 106              	.LVL1:
 131:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_CLOCK) */
 107              		.loc 1 131 0
 108 002a FFF7FEFF 		bl	SPI_ADC_IntClock_Start
 109              	.LVL2:
 134:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_EnableRxInt();
 110              		.loc 1 134 0
 111 002e FFF7FEFF 		bl	SPI_ADC_EnableTxInt
 112              	.LVL3:
 135:Generated_Source\PSoC5/SPI_ADC.c **** }
 113              		.loc 1 135 0
 114 0032 FFF7FEFF 		bl	SPI_ADC_EnableRxInt
 115              	.LVL4:
 116 0036 08BD     		pop	{r3, pc}
 117              	.L10:
 118              		.align	2
 119              	.L9:
 120 0038 9A640040 		.word	1073767578
 121              		.cfi_endproc
 122              	.LFE1:
 123              		.size	SPI_ADC_Enable, .-SPI_ADC_Enable
 124              		.section	.text.SPI_ADC_DisableTxInt,"ax",%progbits
 125              		.align	2
 126              		.global	SPI_ADC_DisableTxInt
 127              		.thumb
 128              		.thumb_func
 129              		.type	SPI_ADC_DisableTxInt, %function
 130              	SPI_ADC_DisableTxInt:
 131              	.LFB6:
 256:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPI_ADC.c **** }
 258:Generated_Source\PSoC5/SPI_ADC.c **** 
 259:Generated_Source\PSoC5/SPI_ADC.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 8


 260:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_DisableTxInt
 262:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPI_ADC.c **** *
 264:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 265:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPI_ADC.c **** *
 267:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 268:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 269:Generated_Source\PSoC5/SPI_ADC.c **** *
 270:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 271:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 272:Generated_Source\PSoC5/SPI_ADC.c **** *
 273:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 274:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPI_ADC.c **** *
 276:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPI_ADC.c **** {
 132              		.loc 1 278 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 279:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntDisable(SPI_ADC_TX_ISR_NUMBER);
 137              		.loc 1 280 0
 138 0000 0822     		movs	r2, #8
 139 0002 014B     		ldr	r3, .L12
 140 0004 1A60     		str	r2, [r3]
 141 0006 7047     		bx	lr
 142              	.L13:
 143              		.align	2
 144              	.L12:
 145 0008 80E100E0 		.word	-536813184
 146              		.cfi_endproc
 147              	.LFE6:
 148              		.size	SPI_ADC_DisableTxInt, .-SPI_ADC_DisableTxInt
 149              		.section	.text.SPI_ADC_DisableRxInt,"ax",%progbits
 150              		.align	2
 151              		.global	SPI_ADC_DisableRxInt
 152              		.thumb
 153              		.thumb_func
 154              		.type	SPI_ADC_DisableRxInt, %function
 155              	SPI_ADC_DisableRxInt:
 156              	.LFB7:
 281:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPI_ADC.c **** }
 283:Generated_Source\PSoC5/SPI_ADC.c **** 
 284:Generated_Source\PSoC5/SPI_ADC.c **** 
 285:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_DisableRxInt
 287:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPI_ADC.c **** *
 289:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 290:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPI_ADC.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 9


 292:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 293:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 294:Generated_Source\PSoC5/SPI_ADC.c **** *
 295:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 296:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 297:Generated_Source\PSoC5/SPI_ADC.c **** *
 298:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 299:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPI_ADC.c **** *
 301:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPI_ADC.c **** {
 157              		.loc 1 303 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 304:Generated_Source\PSoC5/SPI_ADC.c ****     #if(0u != SPI_ADC_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntDisable(SPI_ADC_RX_ISR_NUMBER);
 162              		.loc 1 305 0
 163 0000 0422     		movs	r2, #4
 164 0002 014B     		ldr	r3, .L15
 165 0004 1A60     		str	r2, [r3]
 166 0006 7047     		bx	lr
 167              	.L16:
 168              		.align	2
 169              	.L15:
 170 0008 80E100E0 		.word	-536813184
 171              		.cfi_endproc
 172              	.LFE7:
 173              		.size	SPI_ADC_DisableRxInt, .-SPI_ADC_DisableRxInt
 174              		.section	.text.SPI_ADC_Stop,"ax",%progbits
 175              		.align	2
 176              		.global	SPI_ADC_Stop
 177              		.thumb
 178              		.thumb_func
 179              		.type	SPI_ADC_Stop, %function
 180              	SPI_ADC_Stop:
 181              	.LFB3:
 193:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 enableInterrupts;
 182              		.loc 1 193 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 08B5     		push	{r3, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 3, -8
 189              		.cfi_offset 14, -4
 196:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_ADC_INT_ENABLE);
 190              		.loc 1 196 0
 191 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 192              	.LVL5:
 197:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_ADC_INT_ENABLE);
 193              		.loc 1 197 0
 194 0006 0A4A     		ldr	r2, .L19
 195 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 000a 03F0EF03 		and	r3, r3, #239
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 10


 197 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPI_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 198              		.loc 1 198 0
 199 0010 02F58072 		add	r2, r2, #256
 200 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 201 0016 03F0EF03 		and	r3, r3, #239
 202 001a 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPI_ADC.c **** 
 203              		.loc 1 199 0
 204 001c FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL6:
 202:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_CLOCK) */
 206              		.loc 1 202 0
 207 0020 FFF7FEFF 		bl	SPI_ADC_IntClock_Stop
 208              	.LVL7:
 205:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_DisableRxInt();
 209              		.loc 1 205 0
 210 0024 FFF7FEFF 		bl	SPI_ADC_DisableTxInt
 211              	.LVL8:
 206:Generated_Source\PSoC5/SPI_ADC.c **** }
 212              		.loc 1 206 0
 213 0028 FFF7FEFF 		bl	SPI_ADC_DisableRxInt
 214              	.LVL9:
 215 002c 08BD     		pop	{r3, pc}
 216              	.L20:
 217 002e 00BF     		.align	2
 218              	.L19:
 219 0030 99640040 		.word	1073767577
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	SPI_ADC_Stop, .-SPI_ADC_Stop
 223              		.section	.text.SPI_ADC_SetTxInterruptMode,"ax",%progbits
 224              		.align	2
 225              		.global	SPI_ADC_SetTxInterruptMode
 226              		.thumb
 227              		.thumb_func
 228              		.type	SPI_ADC_SetTxInterruptMode, %function
 229              	SPI_ADC_SetTxInterruptMode:
 230              	.LFB8:
 306:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPI_ADC.c **** }
 308:Generated_Source\PSoC5/SPI_ADC.c **** 
 309:Generated_Source\PSoC5/SPI_ADC.c **** 
 310:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPI_ADC.c **** *
 314:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 315:Generated_Source\PSoC5/SPI_ADC.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPI_ADC.c **** *
 317:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 318:Generated_Source\PSoC5/SPI_ADC.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPI_ADC.c **** *  header file).
 320:Generated_Source\PSoC5/SPI_ADC.c **** *
 321:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 322:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 323:Generated_Source\PSoC5/SPI_ADC.c **** *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 11


 324:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 325:Generated_Source\PSoC5/SPI_ADC.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPI_ADC.c **** *
 327:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPI_ADC.c **** {
 231              		.loc 1 329 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL10:
 330:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_MASK_REG = intSrc;
 237              		.loc 1 330 0
 238 0000 014B     		ldr	r3, .L22
 239 0002 1870     		strb	r0, [r3]
 240 0004 7047     		bx	lr
 241              	.L23:
 242 0006 00BF     		.align	2
 243              	.L22:
 244 0008 89640040 		.word	1073767561
 245              		.cfi_endproc
 246              	.LFE8:
 247              		.size	SPI_ADC_SetTxInterruptMode, .-SPI_ADC_SetTxInterruptMode
 248              		.section	.text.SPI_ADC_SetRxInterruptMode,"ax",%progbits
 249              		.align	2
 250              		.global	SPI_ADC_SetRxInterruptMode
 251              		.thumb
 252              		.thumb_func
 253              		.type	SPI_ADC_SetRxInterruptMode, %function
 254              	SPI_ADC_SetRxInterruptMode:
 255              	.LFB9:
 331:Generated_Source\PSoC5/SPI_ADC.c **** }
 332:Generated_Source\PSoC5/SPI_ADC.c **** 
 333:Generated_Source\PSoC5/SPI_ADC.c **** 
 334:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPI_ADC.c **** *
 338:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 339:Generated_Source\PSoC5/SPI_ADC.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPI_ADC.c **** *
 341:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 342:Generated_Source\PSoC5/SPI_ADC.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPI_ADC.c **** *  header file).
 344:Generated_Source\PSoC5/SPI_ADC.c **** *
 345:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 346:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 347:Generated_Source\PSoC5/SPI_ADC.c **** *
 348:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 349:Generated_Source\PSoC5/SPI_ADC.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPI_ADC.c **** *
 351:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPI_ADC.c **** {
 256              		.loc 1 353 0
 257              		.cfi_startproc
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 12


 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL11:
 354:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_MASK_REG  = intSrc;
 262              		.loc 1 354 0
 263 0000 014B     		ldr	r3, .L25
 264 0002 1870     		strb	r0, [r3]
 265 0004 7047     		bx	lr
 266              	.L26:
 267 0006 00BF     		.align	2
 268              	.L25:
 269 0008 89650040 		.word	1073767817
 270              		.cfi_endproc
 271              	.LFE9:
 272              		.size	SPI_ADC_SetRxInterruptMode, .-SPI_ADC_SetRxInterruptMode
 273              		.section	.text.SPI_ADC_ReadTxStatus,"ax",%progbits
 274              		.align	2
 275              		.global	SPI_ADC_ReadTxStatus
 276              		.thumb
 277              		.thumb_func
 278              		.type	SPI_ADC_ReadTxStatus, %function
 279              	SPI_ADC_ReadTxStatus:
 280              	.LFB10:
 355:Generated_Source\PSoC5/SPI_ADC.c **** }
 356:Generated_Source\PSoC5/SPI_ADC.c **** 
 357:Generated_Source\PSoC5/SPI_ADC.c **** 
 358:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ReadTxStatus
 360:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPI_ADC.c **** *
 362:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 363:Generated_Source\PSoC5/SPI_ADC.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPI_ADC.c **** *
 365:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 366:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 367:Generated_Source\PSoC5/SPI_ADC.c **** *
 368:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 369:Generated_Source\PSoC5/SPI_ADC.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPI_ADC.c **** *
 371:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 372:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPI_ADC.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPI_ADC.c **** *
 375:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 376:Generated_Source\PSoC5/SPI_ADC.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPI_ADC.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPI_ADC.c **** *
 379:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPI_ADC.c **** *
 382:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 384:Generated_Source\PSoC5/SPI_ADC.c **** *
 385:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPI_ADC.c **** uint8 SPI_ADC_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPI_ADC.c **** {
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 13


 281              		.loc 1 387 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 388:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPI_ADC.c **** 
 390:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableTxInt();
 289              		.loc 1 392 0
 290 0002 FFF7FEFF 		bl	SPI_ADC_DisableTxInt
 291              	.LVL12:
 393:Generated_Source\PSoC5/SPI_ADC.c **** 
 394:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus = SPI_ADC_GET_STATUS_TX(SPI_ADC_swStatusTx);
 292              		.loc 1 394 0
 293 0006 064B     		ldr	r3, .L29
 294 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 295 000a 064A     		ldr	r2, .L29+4
 296 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 297 000e 03F00903 		and	r3, r3, #9
 298 0012 1C43     		orrs	r4, r4, r3
 299              	.LVL13:
 395:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_swStatusTx = 0u;
 300              		.loc 1 395 0
 301 0014 0023     		movs	r3, #0
 302 0016 1370     		strb	r3, [r2]
 396:Generated_Source\PSoC5/SPI_ADC.c **** 
 397:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableTxInt();
 303              		.loc 1 397 0
 304 0018 FFF7FEFF 		bl	SPI_ADC_EnableTxInt
 305              	.LVL14:
 398:Generated_Source\PSoC5/SPI_ADC.c **** 
 399:Generated_Source\PSoC5/SPI_ADC.c ****     #else
 400:Generated_Source\PSoC5/SPI_ADC.c **** 
 401:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus = SPI_ADC_TX_STATUS_REG;
 402:Generated_Source\PSoC5/SPI_ADC.c **** 
 403:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPI_ADC.c **** 
 405:Generated_Source\PSoC5/SPI_ADC.c ****     return(tmpStatus);
 406:Generated_Source\PSoC5/SPI_ADC.c **** }
 306              		.loc 1 406 0
 307 001c 2046     		mov	r0, r4
 308 001e 10BD     		pop	{r4, pc}
 309              	.LVL15:
 310              	.L30:
 311              		.align	2
 312              	.L29:
 313 0020 69640040 		.word	1073767529
 314 0024 00000000 		.word	SPI_ADC_swStatusTx
 315              		.cfi_endproc
 316              	.LFE10:
 317              		.size	SPI_ADC_ReadTxStatus, .-SPI_ADC_ReadTxStatus
 318              		.section	.text.SPI_ADC_ReadRxStatus,"ax",%progbits
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 14


 319              		.align	2
 320              		.global	SPI_ADC_ReadRxStatus
 321              		.thumb
 322              		.thumb_func
 323              		.type	SPI_ADC_ReadRxStatus, %function
 324              	SPI_ADC_ReadRxStatus:
 325              	.LFB11:
 407:Generated_Source\PSoC5/SPI_ADC.c **** 
 408:Generated_Source\PSoC5/SPI_ADC.c **** 
 409:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ReadRxStatus
 411:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPI_ADC.c **** *
 413:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 414:Generated_Source\PSoC5/SPI_ADC.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPI_ADC.c **** *
 416:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 417:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 418:Generated_Source\PSoC5/SPI_ADC.c **** *
 419:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 420:Generated_Source\PSoC5/SPI_ADC.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPI_ADC.c **** *
 422:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 423:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPI_ADC.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPI_ADC.c **** *
 426:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 427:Generated_Source\PSoC5/SPI_ADC.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPI_ADC.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPI_ADC.c **** *
 430:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPI_ADC.c **** *
 433:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 435:Generated_Source\PSoC5/SPI_ADC.c **** *
 436:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPI_ADC.c **** uint8 SPI_ADC_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPI_ADC.c **** {
 326              		.loc 1 438 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 10B5     		push	{r4, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 439:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPI_ADC.c **** 
 441:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableRxInt();
 334              		.loc 1 443 0
 335 0002 FFF7FEFF 		bl	SPI_ADC_DisableRxInt
 336              	.LVL16:
 444:Generated_Source\PSoC5/SPI_ADC.c **** 
 445:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus = SPI_ADC_GET_STATUS_RX(SPI_ADC_swStatusRx);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 15


 337              		.loc 1 445 0
 338 0006 064B     		ldr	r3, .L33
 339 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340 000a 064A     		ldr	r2, .L33+4
 341 000c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 342 000e 04F04004 		and	r4, r4, #64
 343 0012 1C43     		orrs	r4, r4, r3
 344              	.LVL17:
 446:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_swStatusRx = 0u;
 345              		.loc 1 446 0
 346 0014 0023     		movs	r3, #0
 347 0016 1370     		strb	r3, [r2]
 447:Generated_Source\PSoC5/SPI_ADC.c **** 
 448:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableRxInt();
 348              		.loc 1 448 0
 349 0018 FFF7FEFF 		bl	SPI_ADC_EnableRxInt
 350              	.LVL18:
 449:Generated_Source\PSoC5/SPI_ADC.c **** 
 450:Generated_Source\PSoC5/SPI_ADC.c ****     #else
 451:Generated_Source\PSoC5/SPI_ADC.c **** 
 452:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus = SPI_ADC_RX_STATUS_REG;
 453:Generated_Source\PSoC5/SPI_ADC.c **** 
 454:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPI_ADC.c **** 
 456:Generated_Source\PSoC5/SPI_ADC.c ****     return(tmpStatus);
 457:Generated_Source\PSoC5/SPI_ADC.c **** }
 351              		.loc 1 457 0
 352 001c 2046     		mov	r0, r4
 353 001e 10BD     		pop	{r4, pc}
 354              	.LVL19:
 355              	.L34:
 356              		.align	2
 357              	.L33:
 358 0020 69650040 		.word	1073767785
 359 0024 00000000 		.word	SPI_ADC_swStatusRx
 360              		.cfi_endproc
 361              	.LFE11:
 362              		.size	SPI_ADC_ReadRxStatus, .-SPI_ADC_ReadRxStatus
 363              		.section	.text.SPI_ADC_WriteTxData,"ax",%progbits
 364              		.align	2
 365              		.global	SPI_ADC_WriteTxData
 366              		.thumb
 367              		.thumb_func
 368              		.type	SPI_ADC_WriteTxData, %function
 369              	SPI_ADC_WriteTxData:
 370              	.LFB12:
 458:Generated_Source\PSoC5/SPI_ADC.c **** 
 459:Generated_Source\PSoC5/SPI_ADC.c **** 
 460:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_WriteTxData
 462:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPI_ADC.c **** *
 464:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 465:Generated_Source\PSoC5/SPI_ADC.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPI_ADC.c **** *
 467:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 468:Generated_Source\PSoC5/SPI_ADC.c **** *  txDataByte: The data value to send across the SPI.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 16


 469:Generated_Source\PSoC5/SPI_ADC.c **** *
 470:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 471:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 472:Generated_Source\PSoC5/SPI_ADC.c **** *
 473:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 474:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPI_ADC.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPI_ADC.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPI_ADC.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBuffer[SPI_ADC_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPI_ADC.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPI_ADC.c **** *
 482:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 483:Generated_Source\PSoC5/SPI_ADC.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPI_ADC.c **** *
 485:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPI_ADC.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPI_ADC.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPI_ADC.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPI_ADC.c **** *
 490:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 492:Generated_Source\PSoC5/SPI_ADC.c **** *
 493:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPI_ADC.c **** {
 371              		.loc 1 495 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LVL20:
 376 0000 10B5     		push	{r4, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 4, -8
 379              		.cfi_offset 14, -4
 380 0002 0446     		mov	r4, r0
 381              	.L37:
 496:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPI_ADC.c **** 
 498:Generated_Source\PSoC5/SPI_ADC.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPI_ADC.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPI_ADC.c **** 
 501:Generated_Source\PSoC5/SPI_ADC.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPI_ADC.c ****         do
 503:Generated_Source\PSoC5/SPI_ADC.c ****         {
 504:Generated_Source\PSoC5/SPI_ADC.c ****             tmpTxBufferRead = SPI_ADC_txBufferRead;
 382              		.loc 1 504 0
 383 0004 2B4B     		ldr	r3, .L45
 384 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 385              	.LVL21:
 505:Generated_Source\PSoC5/SPI_ADC.c ****             if(0u == tmpTxBufferRead)
 386              		.loc 1 505 0
 387 0008 02F0FF03 		and	r3, r2, #255
 388 000c 12B1     		cbz	r2, .L43
 506:Generated_Source\PSoC5/SPI_ADC.c ****             {
 507:Generated_Source\PSoC5/SPI_ADC.c ****                 tmpTxBufferRead = (SPI_ADC_TX_BUFFER_SIZE - 1u);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 17


 508:Generated_Source\PSoC5/SPI_ADC.c ****             }
 509:Generated_Source\PSoC5/SPI_ADC.c ****             else
 510:Generated_Source\PSoC5/SPI_ADC.c ****             {
 511:Generated_Source\PSoC5/SPI_ADC.c ****                 tmpTxBufferRead--;
 389              		.loc 1 511 0
 390 000e 013B     		subs	r3, r3, #1
 391 0010 DBB2     		uxtb	r3, r3
 392              	.LVL22:
 393 0012 00E0     		b	.L36
 394              	.LVL23:
 395              	.L43:
 507:Generated_Source\PSoC5/SPI_ADC.c ****             }
 396              		.loc 1 507 0
 397 0014 1A23     		movs	r3, #26
 398              	.LVL24:
 399              	.L36:
 512:Generated_Source\PSoC5/SPI_ADC.c ****             }
 513:Generated_Source\PSoC5/SPI_ADC.c **** 
 514:Generated_Source\PSoC5/SPI_ADC.c ****         }while(tmpTxBufferRead == SPI_ADC_txBufferWrite);
 400              		.loc 1 514 0
 401 0016 284A     		ldr	r2, .L45+4
 402 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 403 001a D2B2     		uxtb	r2, r2
 404 001c 9342     		cmp	r3, r2
 405 001e F1D0     		beq	.L37
 515:Generated_Source\PSoC5/SPI_ADC.c **** 
 516:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableTxInt();
 406              		.loc 1 517 0
 407 0020 FFF7FEFF 		bl	SPI_ADC_DisableTxInt
 408              	.LVL25:
 518:Generated_Source\PSoC5/SPI_ADC.c **** 
 519:Generated_Source\PSoC5/SPI_ADC.c ****         tempStatus = SPI_ADC_GET_STATUS_TX(SPI_ADC_swStatusTx);
 409              		.loc 1 519 0
 410 0024 254B     		ldr	r3, .L45+8
 411 0026 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 412 0028 254A     		ldr	r2, .L45+12
 413 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 414 002c 03F00903 		and	r3, r3, #9
 415 0030 0B43     		orrs	r3, r3, r1
 416              	.LVL26:
 520:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_swStatusTx = tempStatus;
 417              		.loc 1 520 0
 418 0032 1370     		strb	r3, [r2]
 521:Generated_Source\PSoC5/SPI_ADC.c **** 
 522:Generated_Source\PSoC5/SPI_ADC.c **** 
 523:Generated_Source\PSoC5/SPI_ADC.c ****         if((SPI_ADC_txBufferRead == SPI_ADC_txBufferWrite) &&
 419              		.loc 1 523 0
 420 0034 1F4B     		ldr	r3, .L45
 421              	.LVL27:
 422 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 423 0038 D2B2     		uxtb	r2, r2
 424 003a 1F4B     		ldr	r3, .L45+4
 425 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 003e DBB2     		uxtb	r3, r3
 427 0040 9A42     		cmp	r2, r3
 428 0042 07D1     		bne	.L38
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 18


 524:Generated_Source\PSoC5/SPI_ADC.c ****            (0u != (SPI_ADC_swStatusTx & SPI_ADC_STS_TX_FIFO_NOT_FULL)))
 429              		.loc 1 524 0 discriminator 1
 430 0044 1E4B     		ldr	r3, .L45+12
 431 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523:Generated_Source\PSoC5/SPI_ADC.c ****            (0u != (SPI_ADC_swStatusTx & SPI_ADC_STS_TX_FIFO_NOT_FULL)))
 432              		.loc 1 523 0 discriminator 1
 433 0048 13F0040F 		tst	r3, #4
 434 004c 02D0     		beq	.L38
 525:Generated_Source\PSoC5/SPI_ADC.c ****         {
 526:Generated_Source\PSoC5/SPI_ADC.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPI_ADC.c ****             CY_SET_REG8(SPI_ADC_TXDATA_PTR, txData);
 435              		.loc 1 527 0
 436 004e 1D4B     		ldr	r3, .L45+16
 437 0050 1C70     		strb	r4, [r3]
 438              	.LVL28:
 439 0052 2CE0     		b	.L39
 440              	.LVL29:
 441              	.L38:
 528:Generated_Source\PSoC5/SPI_ADC.c ****         }
 529:Generated_Source\PSoC5/SPI_ADC.c ****         else
 530:Generated_Source\PSoC5/SPI_ADC.c ****         {
 531:Generated_Source\PSoC5/SPI_ADC.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPI_ADC.c ****             SPI_ADC_txBufferWrite++;
 442              		.loc 1 532 0
 443 0054 184A     		ldr	r2, .L45+4
 444 0056 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 445 0058 0133     		adds	r3, r3, #1
 446 005a DBB2     		uxtb	r3, r3
 447 005c 1370     		strb	r3, [r2]
 448              	.LVL30:
 533:Generated_Source\PSoC5/SPI_ADC.c ****             if(SPI_ADC_txBufferWrite >= SPI_ADC_TX_BUFFER_SIZE)
 449              		.loc 1 533 0
 450 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 451 0060 DBB2     		uxtb	r3, r3
 452 0062 1A2B     		cmp	r3, #26
 453 0064 02D9     		bls	.L40
 534:Generated_Source\PSoC5/SPI_ADC.c ****             {
 535:Generated_Source\PSoC5/SPI_ADC.c ****                 SPI_ADC_txBufferWrite = 0u;
 454              		.loc 1 535 0
 455 0066 0022     		movs	r2, #0
 456 0068 134B     		ldr	r3, .L45+4
 457 006a 1A70     		strb	r2, [r3]
 458              	.L40:
 536:Generated_Source\PSoC5/SPI_ADC.c ****             }
 537:Generated_Source\PSoC5/SPI_ADC.c **** 
 538:Generated_Source\PSoC5/SPI_ADC.c ****             if(SPI_ADC_txBufferWrite == SPI_ADC_txBufferRead)
 459              		.loc 1 538 0
 460 006c 124B     		ldr	r3, .L45+4
 461 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 462 0070 D2B2     		uxtb	r2, r2
 463 0072 104B     		ldr	r3, .L45
 464 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 465 0076 DBB2     		uxtb	r3, r3
 466 0078 9A42     		cmp	r2, r3
 467 007a 0ED1     		bne	.L41
 539:Generated_Source\PSoC5/SPI_ADC.c ****             {
 540:Generated_Source\PSoC5/SPI_ADC.c ****                 SPI_ADC_txBufferRead++;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 19


 468              		.loc 1 540 0
 469 007c 0D4A     		ldr	r2, .L45
 470 007e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 471 0080 0133     		adds	r3, r3, #1
 472 0082 DBB2     		uxtb	r3, r3
 473 0084 1370     		strb	r3, [r2]
 541:Generated_Source\PSoC5/SPI_ADC.c ****                 if(SPI_ADC_txBufferRead >= SPI_ADC_TX_BUFFER_SIZE)
 474              		.loc 1 541 0
 475 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 476 0088 DBB2     		uxtb	r3, r3
 477 008a 1A2B     		cmp	r3, #26
 478 008c 02D9     		bls	.L42
 542:Generated_Source\PSoC5/SPI_ADC.c ****                 {
 543:Generated_Source\PSoC5/SPI_ADC.c ****                     SPI_ADC_txBufferRead = 0u;
 479              		.loc 1 543 0
 480 008e 0022     		movs	r2, #0
 481 0090 084B     		ldr	r3, .L45
 482 0092 1A70     		strb	r2, [r3]
 483              	.L42:
 544:Generated_Source\PSoC5/SPI_ADC.c ****                 }
 545:Generated_Source\PSoC5/SPI_ADC.c ****                 SPI_ADC_txBufferFull = 1u;
 484              		.loc 1 545 0
 485 0094 0122     		movs	r2, #1
 486 0096 0C4B     		ldr	r3, .L45+20
 487 0098 1A70     		strb	r2, [r3]
 488              	.L41:
 546:Generated_Source\PSoC5/SPI_ADC.c ****             }
 547:Generated_Source\PSoC5/SPI_ADC.c **** 
 548:Generated_Source\PSoC5/SPI_ADC.c ****             SPI_ADC_txBuffer[SPI_ADC_txBufferWrite] = txData;
 489              		.loc 1 548 0
 490 009a 074B     		ldr	r3, .L45+4
 491 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492 009e DBB2     		uxtb	r3, r3
 493 00a0 0A4A     		ldr	r2, .L45+24
 494 00a2 D454     		strb	r4, [r2, r3]
 549:Generated_Source\PSoC5/SPI_ADC.c **** 
 550:Generated_Source\PSoC5/SPI_ADC.c ****             SPI_ADC_TX_STATUS_MASK_REG |= SPI_ADC_STS_TX_FIFO_NOT_FULL;
 495              		.loc 1 550 0
 496 00a4 0A4A     		ldr	r2, .L45+28
 497 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 498 00a8 43F00403 		orr	r3, r3, #4
 499 00ac 1370     		strb	r3, [r2]
 500              	.L39:
 551:Generated_Source\PSoC5/SPI_ADC.c ****         }
 552:Generated_Source\PSoC5/SPI_ADC.c **** 
 553:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableTxInt();
 501              		.loc 1 553 0
 502 00ae FFF7FEFF 		bl	SPI_ADC_EnableTxInt
 503              	.LVL31:
 504 00b2 10BD     		pop	{r4, pc}
 505              	.L46:
 506              		.align	2
 507              	.L45:
 508 00b4 00000000 		.word	SPI_ADC_txBufferRead
 509 00b8 00000000 		.word	SPI_ADC_txBufferWrite
 510 00bc 69640040 		.word	1073767529
 511 00c0 00000000 		.word	SPI_ADC_swStatusTx
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 20


 512 00c4 49650040 		.word	1073767753
 513 00c8 00000000 		.word	SPI_ADC_txBufferFull
 514 00cc 00000000 		.word	SPI_ADC_txBuffer
 515 00d0 89640040 		.word	1073767561
 516              		.cfi_endproc
 517              	.LFE12:
 518              		.size	SPI_ADC_WriteTxData, .-SPI_ADC_WriteTxData
 519              		.section	.text.SPI_ADC_ReadRxData,"ax",%progbits
 520              		.align	2
 521              		.global	SPI_ADC_ReadRxData
 522              		.thumb
 523              		.thumb_func
 524              		.type	SPI_ADC_ReadRxData, %function
 525              	SPI_ADC_ReadRxData:
 526              	.LFB13:
 554:Generated_Source\PSoC5/SPI_ADC.c **** 
 555:Generated_Source\PSoC5/SPI_ADC.c ****     #else
 556:Generated_Source\PSoC5/SPI_ADC.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPI_ADC.c ****         while(0u == (SPI_ADC_TX_STATUS_REG & SPI_ADC_STS_TX_FIFO_NOT_FULL))
 558:Generated_Source\PSoC5/SPI_ADC.c ****         {
 559:Generated_Source\PSoC5/SPI_ADC.c ****         }
 560:Generated_Source\PSoC5/SPI_ADC.c **** 
 561:Generated_Source\PSoC5/SPI_ADC.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPI_ADC.c ****         CY_SET_REG8(SPI_ADC_TXDATA_PTR, txData);
 563:Generated_Source\PSoC5/SPI_ADC.c **** 
 564:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPI_ADC.c **** }
 566:Generated_Source\PSoC5/SPI_ADC.c **** 
 567:Generated_Source\PSoC5/SPI_ADC.c **** 
 568:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ReadRxData
 570:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPI_ADC.c **** *
 572:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 573:Generated_Source\PSoC5/SPI_ADC.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPI_ADC.c **** *
 575:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 576:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 577:Generated_Source\PSoC5/SPI_ADC.c **** *
 578:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 579:Generated_Source\PSoC5/SPI_ADC.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPI_ADC.c **** *
 581:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 582:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPI_ADC.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPI_ADC.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPI_ADC.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBuffer[SPI_ADC_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPI_ADC.c **** *  received data.
 589:Generated_Source\PSoC5/SPI_ADC.c **** *
 590:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 591:Generated_Source\PSoC5/SPI_ADC.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPI_ADC.c **** *
 593:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPI_ADC.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPI_ADC.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 21


 596:Generated_Source\PSoC5/SPI_ADC.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPI_ADC.c **** *
 598:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 600:Generated_Source\PSoC5/SPI_ADC.c **** *
 601:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPI_ADC.c **** uint8 SPI_ADC_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPI_ADC.c **** {
 527              		.loc 1 603 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531 0000 10B5     		push	{r4, lr}
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 4, -8
 534              		.cfi_offset 14, -4
 604:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPI_ADC.c **** 
 606:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPI_ADC.c **** 
 608:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableRxInt();
 535              		.loc 1 609 0
 536 0002 FFF7FEFF 		bl	SPI_ADC_DisableRxInt
 537              	.LVL32:
 610:Generated_Source\PSoC5/SPI_ADC.c **** 
 611:Generated_Source\PSoC5/SPI_ADC.c ****         if(SPI_ADC_rxBufferRead != SPI_ADC_rxBufferWrite)
 538              		.loc 1 611 0
 539 0006 134B     		ldr	r3, .L51
 540 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 541 000a D2B2     		uxtb	r2, r2
 542 000c 124B     		ldr	r3, .L51+4
 543 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 544 0010 DBB2     		uxtb	r3, r3
 545 0012 9A42     		cmp	r2, r3
 546 0014 14D0     		beq	.L48
 612:Generated_Source\PSoC5/SPI_ADC.c ****         {
 613:Generated_Source\PSoC5/SPI_ADC.c ****             if(0u == SPI_ADC_rxBufferFull)
 547              		.loc 1 613 0
 548 0016 114B     		ldr	r3, .L51+8
 549 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 001a 13F0FF0F 		tst	r3, #255
 551 001e 0CD1     		bne	.L49
 614:Generated_Source\PSoC5/SPI_ADC.c ****             {
 615:Generated_Source\PSoC5/SPI_ADC.c ****                 SPI_ADC_rxBufferRead++;
 552              		.loc 1 615 0
 553 0020 0C4A     		ldr	r2, .L51
 554 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 555 0024 0133     		adds	r3, r3, #1
 556 0026 DBB2     		uxtb	r3, r3
 557 0028 1370     		strb	r3, [r2]
 616:Generated_Source\PSoC5/SPI_ADC.c ****                 if(SPI_ADC_rxBufferRead >= SPI_ADC_RX_BUFFER_SIZE)
 558              		.loc 1 616 0
 559 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 560 002c DBB2     		uxtb	r3, r3
 561 002e 1A2B     		cmp	r3, #26
 562 0030 06D9     		bls	.L48
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 22


 617:Generated_Source\PSoC5/SPI_ADC.c ****                 {
 618:Generated_Source\PSoC5/SPI_ADC.c ****                     SPI_ADC_rxBufferRead = 0u;
 563              		.loc 1 618 0
 564 0032 0022     		movs	r2, #0
 565 0034 074B     		ldr	r3, .L51
 566 0036 1A70     		strb	r2, [r3]
 567 0038 02E0     		b	.L48
 568              	.L49:
 619:Generated_Source\PSoC5/SPI_ADC.c ****                 }
 620:Generated_Source\PSoC5/SPI_ADC.c ****             }
 621:Generated_Source\PSoC5/SPI_ADC.c ****             else
 622:Generated_Source\PSoC5/SPI_ADC.c ****             {
 623:Generated_Source\PSoC5/SPI_ADC.c ****                 SPI_ADC_rxBufferFull = 0u;
 569              		.loc 1 623 0
 570 003a 0022     		movs	r2, #0
 571 003c 074B     		ldr	r3, .L51+8
 572 003e 1A70     		strb	r2, [r3]
 573              	.L48:
 624:Generated_Source\PSoC5/SPI_ADC.c ****             }
 625:Generated_Source\PSoC5/SPI_ADC.c ****         }
 626:Generated_Source\PSoC5/SPI_ADC.c **** 
 627:Generated_Source\PSoC5/SPI_ADC.c ****         rxData = SPI_ADC_rxBuffer[SPI_ADC_rxBufferRead];
 574              		.loc 1 627 0
 575 0040 044B     		ldr	r3, .L51
 576 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 577 0044 DBB2     		uxtb	r3, r3
 578 0046 064A     		ldr	r2, .L51+12
 579 0048 D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 580 004a E4B2     		uxtb	r4, r4
 581              	.LVL33:
 628:Generated_Source\PSoC5/SPI_ADC.c **** 
 629:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableRxInt();
 582              		.loc 1 629 0
 583 004c FFF7FEFF 		bl	SPI_ADC_EnableRxInt
 584              	.LVL34:
 630:Generated_Source\PSoC5/SPI_ADC.c **** 
 631:Generated_Source\PSoC5/SPI_ADC.c ****     #else
 632:Generated_Source\PSoC5/SPI_ADC.c **** 
 633:Generated_Source\PSoC5/SPI_ADC.c ****         rxData = CY_GET_REG8(SPI_ADC_RXDATA_PTR);
 634:Generated_Source\PSoC5/SPI_ADC.c **** 
 635:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPI_ADC.c **** 
 637:Generated_Source\PSoC5/SPI_ADC.c ****     return(rxData);
 638:Generated_Source\PSoC5/SPI_ADC.c **** }
 585              		.loc 1 638 0
 586 0050 2046     		mov	r0, r4
 587 0052 10BD     		pop	{r4, pc}
 588              	.LVL35:
 589              	.L52:
 590              		.align	2
 591              	.L51:
 592 0054 00000000 		.word	SPI_ADC_rxBufferRead
 593 0058 00000000 		.word	SPI_ADC_rxBufferWrite
 594 005c 00000000 		.word	SPI_ADC_rxBufferFull
 595 0060 00000000 		.word	SPI_ADC_rxBuffer
 596              		.cfi_endproc
 597              	.LFE13:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 23


 598              		.size	SPI_ADC_ReadRxData, .-SPI_ADC_ReadRxData
 599              		.section	.text.SPI_ADC_GetRxBufferSize,"ax",%progbits
 600              		.align	2
 601              		.global	SPI_ADC_GetRxBufferSize
 602              		.thumb
 603              		.thumb_func
 604              		.type	SPI_ADC_GetRxBufferSize, %function
 605              	SPI_ADC_GetRxBufferSize:
 606              	.LFB14:
 639:Generated_Source\PSoC5/SPI_ADC.c **** 
 640:Generated_Source\PSoC5/SPI_ADC.c **** 
 641:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_GetRxBufferSize
 643:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPI_ADC.c **** *
 645:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 646:Generated_Source\PSoC5/SPI_ADC.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPI_ADC.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPI_ADC.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPI_ADC.c **** *
 650:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 651:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 652:Generated_Source\PSoC5/SPI_ADC.c **** *
 653:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 654:Generated_Source\PSoC5/SPI_ADC.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPI_ADC.c **** *
 656:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 657:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPI_ADC.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPI_ADC.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPI_ADC.c **** *
 662:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPI_ADC.c **** *
 665:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPI_ADC.c **** uint8 SPI_ADC_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPI_ADC.c **** {
 607              		.loc 1 667 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611 0000 10B5     		push	{r4, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
 668:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPI_ADC.c **** 
 670:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPI_ADC.c **** 
 672:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableRxInt();
 615              		.loc 1 673 0
 616 0002 FFF7FEFF 		bl	SPI_ADC_DisableRxInt
 617              	.LVL36:
 674:Generated_Source\PSoC5/SPI_ADC.c **** 
 675:Generated_Source\PSoC5/SPI_ADC.c ****         if(SPI_ADC_rxBufferRead == SPI_ADC_rxBufferWrite)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 24


 618              		.loc 1 675 0
 619 0006 124B     		ldr	r3, .L58
 620 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 621 000a D2B2     		uxtb	r2, r2
 622 000c 114B     		ldr	r3, .L58+4
 623 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 0010 DBB2     		uxtb	r3, r3
 625 0012 9A42     		cmp	r2, r3
 626 0014 16D0     		beq	.L56
 676:Generated_Source\PSoC5/SPI_ADC.c ****         {
 677:Generated_Source\PSoC5/SPI_ADC.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPI_ADC.c ****         }
 679:Generated_Source\PSoC5/SPI_ADC.c ****         else if(SPI_ADC_rxBufferRead < SPI_ADC_rxBufferWrite)
 627              		.loc 1 679 0
 628 0016 0E4B     		ldr	r3, .L58
 629 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 630 001a D2B2     		uxtb	r2, r2
 631 001c 0D4B     		ldr	r3, .L58+4
 632 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 633 0020 DBB2     		uxtb	r3, r3
 634 0022 9A42     		cmp	r2, r3
 635 0024 06D2     		bcs	.L55
 680:Generated_Source\PSoC5/SPI_ADC.c ****         {
 681:Generated_Source\PSoC5/SPI_ADC.c ****             size = (SPI_ADC_rxBufferWrite - SPI_ADC_rxBufferRead);
 636              		.loc 1 681 0
 637 0026 0B4B     		ldr	r3, .L58+4
 638 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 639 002a 094A     		ldr	r2, .L58
 640 002c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 641 002e 1C1B     		subs	r4, r3, r4
 642 0030 E4B2     		uxtb	r4, r4
 643              	.LVL37:
 644 0032 08E0     		b	.L54
 645              	.LVL38:
 646              	.L55:
 682:Generated_Source\PSoC5/SPI_ADC.c ****         }
 683:Generated_Source\PSoC5/SPI_ADC.c ****         else
 684:Generated_Source\PSoC5/SPI_ADC.c ****         {
 685:Generated_Source\PSoC5/SPI_ADC.c ****             size = (SPI_ADC_RX_BUFFER_SIZE - SPI_ADC_rxBufferRead) + SPI_ADC_rxBufferWrite;
 647              		.loc 1 685 0
 648 0034 074B     		ldr	r3, .L58+4
 649 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 0038 054A     		ldr	r2, .L58
 651 003a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 652 003c 1C1B     		subs	r4, r3, r4
 653 003e 1B34     		adds	r4, r4, #27
 654 0040 E4B2     		uxtb	r4, r4
 655              	.LVL39:
 656 0042 00E0     		b	.L54
 657              	.LVL40:
 658              	.L56:
 677:Generated_Source\PSoC5/SPI_ADC.c ****         }
 659              		.loc 1 677 0
 660 0044 0024     		movs	r4, #0
 661              	.L54:
 662              	.LVL41:
 686:Generated_Source\PSoC5/SPI_ADC.c ****         }
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 25


 687:Generated_Source\PSoC5/SPI_ADC.c **** 
 688:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableRxInt();
 663              		.loc 1 688 0
 664 0046 FFF7FEFF 		bl	SPI_ADC_EnableRxInt
 665              	.LVL42:
 689:Generated_Source\PSoC5/SPI_ADC.c **** 
 690:Generated_Source\PSoC5/SPI_ADC.c ****     #else
 691:Generated_Source\PSoC5/SPI_ADC.c **** 
 692:Generated_Source\PSoC5/SPI_ADC.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPI_ADC.c ****         size = (0u != (SPI_ADC_RX_STATUS_REG & SPI_ADC_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 694:Generated_Source\PSoC5/SPI_ADC.c **** 
 695:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPI_ADC.c **** 
 697:Generated_Source\PSoC5/SPI_ADC.c ****     return(size);
 698:Generated_Source\PSoC5/SPI_ADC.c **** }
 666              		.loc 1 698 0
 667 004a 2046     		mov	r0, r4
 668 004c 10BD     		pop	{r4, pc}
 669              	.LVL43:
 670              	.L59:
 671 004e 00BF     		.align	2
 672              	.L58:
 673 0050 00000000 		.word	SPI_ADC_rxBufferRead
 674 0054 00000000 		.word	SPI_ADC_rxBufferWrite
 675              		.cfi_endproc
 676              	.LFE14:
 677              		.size	SPI_ADC_GetRxBufferSize, .-SPI_ADC_GetRxBufferSize
 678              		.section	.text.SPI_ADC_GetTxBufferSize,"ax",%progbits
 679              		.align	2
 680              		.global	SPI_ADC_GetTxBufferSize
 681              		.thumb
 682              		.thumb_func
 683              		.type	SPI_ADC_GetTxBufferSize, %function
 684              	SPI_ADC_GetTxBufferSize:
 685              	.LFB15:
 699:Generated_Source\PSoC5/SPI_ADC.c **** 
 700:Generated_Source\PSoC5/SPI_ADC.c **** 
 701:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_GetTxBufferSize
 703:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPI_ADC.c **** *
 705:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 706:Generated_Source\PSoC5/SPI_ADC.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPI_ADC.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPI_ADC.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPI_ADC.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPI_ADC.c **** *
 711:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 712:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 713:Generated_Source\PSoC5/SPI_ADC.c **** *
 714:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 715:Generated_Source\PSoC5/SPI_ADC.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPI_ADC.c **** *
 717:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 718:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPI_ADC.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBufferRead - used for the account of the bytes which
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 26


 721:Generated_Source\PSoC5/SPI_ADC.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPI_ADC.c **** *
 723:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPI_ADC.c **** *
 726:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPI_ADC.c **** uint8  SPI_ADC_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPI_ADC.c **** {
 686              		.loc 1 728 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690 0000 10B5     		push	{r4, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 4, -8
 693              		.cfi_offset 14, -4
 729:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPI_ADC.c **** 
 731:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableTxInt();
 694              		.loc 1 733 0
 695 0002 FFF7FEFF 		bl	SPI_ADC_DisableTxInt
 696              	.LVL44:
 734:Generated_Source\PSoC5/SPI_ADC.c **** 
 735:Generated_Source\PSoC5/SPI_ADC.c ****         if(SPI_ADC_txBufferRead == SPI_ADC_txBufferWrite)
 697              		.loc 1 735 0
 698 0006 124B     		ldr	r3, .L65
 699 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 700 000a D2B2     		uxtb	r2, r2
 701 000c 114B     		ldr	r3, .L65+4
 702 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 703 0010 DBB2     		uxtb	r3, r3
 704 0012 9A42     		cmp	r2, r3
 705 0014 16D0     		beq	.L63
 736:Generated_Source\PSoC5/SPI_ADC.c ****         {
 737:Generated_Source\PSoC5/SPI_ADC.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPI_ADC.c ****         }
 739:Generated_Source\PSoC5/SPI_ADC.c ****         else if(SPI_ADC_txBufferRead < SPI_ADC_txBufferWrite)
 706              		.loc 1 739 0
 707 0016 0E4B     		ldr	r3, .L65
 708 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 709 001a D2B2     		uxtb	r2, r2
 710 001c 0D4B     		ldr	r3, .L65+4
 711 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 712 0020 DBB2     		uxtb	r3, r3
 713 0022 9A42     		cmp	r2, r3
 714 0024 06D2     		bcs	.L62
 740:Generated_Source\PSoC5/SPI_ADC.c ****         {
 741:Generated_Source\PSoC5/SPI_ADC.c ****             size = (SPI_ADC_txBufferWrite - SPI_ADC_txBufferRead);
 715              		.loc 1 741 0
 716 0026 0B4B     		ldr	r3, .L65+4
 717 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 718 002a 094A     		ldr	r2, .L65
 719 002c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 720 002e 1C1B     		subs	r4, r3, r4
 721 0030 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 27


 722              	.LVL45:
 723 0032 08E0     		b	.L61
 724              	.LVL46:
 725              	.L62:
 742:Generated_Source\PSoC5/SPI_ADC.c ****         }
 743:Generated_Source\PSoC5/SPI_ADC.c ****         else
 744:Generated_Source\PSoC5/SPI_ADC.c ****         {
 745:Generated_Source\PSoC5/SPI_ADC.c ****             size = (SPI_ADC_TX_BUFFER_SIZE - SPI_ADC_txBufferRead) + SPI_ADC_txBufferWrite;
 726              		.loc 1 745 0
 727 0034 074B     		ldr	r3, .L65+4
 728 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 729 0038 054A     		ldr	r2, .L65
 730 003a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 731 003c 1C1B     		subs	r4, r3, r4
 732 003e 1B34     		adds	r4, r4, #27
 733 0040 E4B2     		uxtb	r4, r4
 734              	.LVL47:
 735 0042 00E0     		b	.L61
 736              	.LVL48:
 737              	.L63:
 737:Generated_Source\PSoC5/SPI_ADC.c ****         }
 738              		.loc 1 737 0
 739 0044 0024     		movs	r4, #0
 740              	.L61:
 741              	.LVL49:
 746:Generated_Source\PSoC5/SPI_ADC.c ****         }
 747:Generated_Source\PSoC5/SPI_ADC.c **** 
 748:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableTxInt();
 742              		.loc 1 748 0
 743 0046 FFF7FEFF 		bl	SPI_ADC_EnableTxInt
 744              	.LVL50:
 749:Generated_Source\PSoC5/SPI_ADC.c **** 
 750:Generated_Source\PSoC5/SPI_ADC.c ****     #else
 751:Generated_Source\PSoC5/SPI_ADC.c **** 
 752:Generated_Source\PSoC5/SPI_ADC.c ****         size = SPI_ADC_TX_STATUS_REG;
 753:Generated_Source\PSoC5/SPI_ADC.c **** 
 754:Generated_Source\PSoC5/SPI_ADC.c ****         if(0u != (size & SPI_ADC_STS_TX_FIFO_EMPTY))
 755:Generated_Source\PSoC5/SPI_ADC.c ****         {
 756:Generated_Source\PSoC5/SPI_ADC.c ****             size = 0u;
 757:Generated_Source\PSoC5/SPI_ADC.c ****         }
 758:Generated_Source\PSoC5/SPI_ADC.c ****         else if(0u != (size & SPI_ADC_STS_TX_FIFO_NOT_FULL))
 759:Generated_Source\PSoC5/SPI_ADC.c ****         {
 760:Generated_Source\PSoC5/SPI_ADC.c ****             size = 1u;
 761:Generated_Source\PSoC5/SPI_ADC.c ****         }
 762:Generated_Source\PSoC5/SPI_ADC.c ****         else
 763:Generated_Source\PSoC5/SPI_ADC.c ****         {
 764:Generated_Source\PSoC5/SPI_ADC.c ****             size = SPI_ADC_FIFO_SIZE;
 765:Generated_Source\PSoC5/SPI_ADC.c ****         }
 766:Generated_Source\PSoC5/SPI_ADC.c **** 
 767:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPI_ADC.c **** 
 769:Generated_Source\PSoC5/SPI_ADC.c ****     return(size);
 770:Generated_Source\PSoC5/SPI_ADC.c **** }
 745              		.loc 1 770 0
 746 004a 2046     		mov	r0, r4
 747 004c 10BD     		pop	{r4, pc}
 748              	.LVL51:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 28


 749              	.L66:
 750 004e 00BF     		.align	2
 751              	.L65:
 752 0050 00000000 		.word	SPI_ADC_txBufferRead
 753 0054 00000000 		.word	SPI_ADC_txBufferWrite
 754              		.cfi_endproc
 755              	.LFE15:
 756              		.size	SPI_ADC_GetTxBufferSize, .-SPI_ADC_GetTxBufferSize
 757              		.section	.text.SPI_ADC_ClearRxBuffer,"ax",%progbits
 758              		.align	2
 759              		.global	SPI_ADC_ClearRxBuffer
 760              		.thumb
 761              		.thumb_func
 762              		.type	SPI_ADC_ClearRxBuffer, %function
 763              	SPI_ADC_ClearRxBuffer:
 764              	.LFB16:
 771:Generated_Source\PSoC5/SPI_ADC.c **** 
 772:Generated_Source\PSoC5/SPI_ADC.c **** 
 773:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ClearRxBuffer
 775:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPI_ADC.c **** *
 777:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 778:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPI_ADC.c **** *
 780:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 781:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 782:Generated_Source\PSoC5/SPI_ADC.c **** *
 783:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 784:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 785:Generated_Source\PSoC5/SPI_ADC.c **** *
 786:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 787:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPI_ADC.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPI_ADC.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPI_ADC.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPI_ADC.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPI_ADC.c **** *
 794:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 795:Generated_Source\PSoC5/SPI_ADC.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPI_ADC.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPI_ADC.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPI_ADC.c **** *
 799:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPI_ADC.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPI_ADC.c **** *
 802:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 804:Generated_Source\PSoC5/SPI_ADC.c **** *
 805:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPI_ADC.c **** {
 765              		.loc 1 807 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 29


 769 0000 08B5     		push	{r3, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 3, -8
 772              		.cfi_offset 14, -4
 808:Generated_Source\PSoC5/SPI_ADC.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPI_ADC.c ****     while(0u !=(SPI_ADC_RX_STATUS_REG & SPI_ADC_STS_RX_FIFO_NOT_EMPTY))
 773              		.loc 1 809 0
 774 0002 01E0     		b	.L68
 775              	.L69:
 810:Generated_Source\PSoC5/SPI_ADC.c ****     {
 811:Generated_Source\PSoC5/SPI_ADC.c ****         (void) CY_GET_REG8(SPI_ADC_RXDATA_PTR);
 776              		.loc 1 811 0
 777 0004 094B     		ldr	r3, .L71
 778 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 779              	.L68:
 809:Generated_Source\PSoC5/SPI_ADC.c ****     {
 780              		.loc 1 809 0
 781 0008 094B     		ldr	r3, .L71+4
 782 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 783 000c 13F0200F 		tst	r3, #32
 784 0010 F8D1     		bne	.L69
 812:Generated_Source\PSoC5/SPI_ADC.c ****     }
 813:Generated_Source\PSoC5/SPI_ADC.c **** 
 814:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableRxInt();
 785              		.loc 1 816 0
 786 0012 FFF7FEFF 		bl	SPI_ADC_DisableRxInt
 787              	.LVL52:
 817:Generated_Source\PSoC5/SPI_ADC.c **** 
 818:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferFull  = 0u;
 788              		.loc 1 818 0
 789 0016 0023     		movs	r3, #0
 790 0018 064A     		ldr	r2, .L71+8
 791 001a 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferRead  = 0u;
 792              		.loc 1 819 0
 793 001c 064A     		ldr	r2, .L71+12
 794 001e 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferWrite = 0u;
 795              		.loc 1 820 0
 796 0020 064A     		ldr	r2, .L71+16
 797 0022 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/SPI_ADC.c **** 
 822:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableRxInt();
 798              		.loc 1 822 0
 799 0024 FFF7FEFF 		bl	SPI_ADC_EnableRxInt
 800              	.LVL53:
 801 0028 08BD     		pop	{r3, pc}
 802              	.L72:
 803 002a 00BF     		.align	2
 804              	.L71:
 805 002c 59650040 		.word	1073767769
 806 0030 69650040 		.word	1073767785
 807 0034 00000000 		.word	SPI_ADC_rxBufferFull
 808 0038 00000000 		.word	SPI_ADC_rxBufferRead
 809 003c 00000000 		.word	SPI_ADC_rxBufferWrite
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 30


 810              		.cfi_endproc
 811              	.LFE16:
 812              		.size	SPI_ADC_ClearRxBuffer, .-SPI_ADC_ClearRxBuffer
 813              		.section	.text.SPI_ADC_ClearTxBuffer,"ax",%progbits
 814              		.align	2
 815              		.global	SPI_ADC_ClearTxBuffer
 816              		.thumb
 817              		.thumb_func
 818              		.type	SPI_ADC_ClearTxBuffer, %function
 819              	SPI_ADC_ClearTxBuffer:
 820              	.LFB17:
 823:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPI_ADC.c **** }
 825:Generated_Source\PSoC5/SPI_ADC.c **** 
 826:Generated_Source\PSoC5/SPI_ADC.c **** 
 827:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ClearTxBuffer
 829:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPI_ADC.c **** *
 831:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 832:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPI_ADC.c **** *
 834:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 835:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 836:Generated_Source\PSoC5/SPI_ADC.c **** *
 837:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 838:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 839:Generated_Source\PSoC5/SPI_ADC.c **** *
 840:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
 841:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPI_ADC.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPI_ADC.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPI_ADC.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPI_ADC.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPI_ADC.c **** *
 848:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
 849:Generated_Source\PSoC5/SPI_ADC.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPI_ADC.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPI_ADC.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPI_ADC.c **** *
 853:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPI_ADC.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPI_ADC.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPI_ADC.c **** *
 857:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 859:Generated_Source\PSoC5/SPI_ADC.c **** *
 860:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPI_ADC.c **** {
 821              		.loc 1 862 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825 0000 08B5     		push	{r3, lr}
 826              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 31


 827              		.cfi_offset 3, -8
 828              		.cfi_offset 14, -4
 863:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPI_ADC.c **** 
 865:Generated_Source\PSoC5/SPI_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 829              		.loc 1 865 0
 830 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 831              	.LVL54:
 866:Generated_Source\PSoC5/SPI_ADC.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_ADC_TX_FIFO_CLR);
 832              		.loc 1 867 0
 833 0006 0E4B     		ldr	r3, .L75
 834 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 835 000a 42F00102 		orr	r2, r2, #1
 836 000e 1A70     		strb	r2, [r3]
 868:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_ADC_TX_FIFO_CLR);
 837              		.loc 1 868 0
 838 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 839 0012 02F0FE02 		and	r2, r2, #254
 840 0016 1A70     		strb	r2, [r3]
 869:Generated_Source\PSoC5/SPI_ADC.c **** 
 870:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPI_ADC.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_ADC_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_ADC_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPI_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 841              		.loc 1 875 0
 842 0018 FFF7FEFF 		bl	CyExitCriticalSection
 843              	.LVL55:
 876:Generated_Source\PSoC5/SPI_ADC.c **** 
 877:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPI_ADC.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableTxInt();
 844              		.loc 1 879 0
 845 001c FFF7FEFF 		bl	SPI_ADC_DisableTxInt
 846              	.LVL56:
 880:Generated_Source\PSoC5/SPI_ADC.c **** 
 881:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferFull  = 0u;
 847              		.loc 1 881 0
 848 0020 0023     		movs	r3, #0
 849 0022 084A     		ldr	r2, .L75+4
 850 0024 1370     		strb	r3, [r2]
 882:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferRead  = 0u;
 851              		.loc 1 882 0
 852 0026 084A     		ldr	r2, .L75+8
 853 0028 1370     		strb	r3, [r2]
 883:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferWrite = 0u;
 854              		.loc 1 883 0
 855 002a 084A     		ldr	r2, .L75+12
 856 002c 1370     		strb	r3, [r2]
 884:Generated_Source\PSoC5/SPI_ADC.c **** 
 885:Generated_Source\PSoC5/SPI_ADC.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_TX_STATUS_MASK_REG &= ((uint8) ~SPI_ADC_STS_TX_FIFO_NOT_FULL);
 857              		.loc 1 886 0
 858 002e 084A     		ldr	r2, .L75+16
 859 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 32


 860 0032 03F0FB03 		and	r3, r3, #251
 861 0036 1370     		strb	r3, [r2]
 887:Generated_Source\PSoC5/SPI_ADC.c **** 
 888:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableTxInt();
 862              		.loc 1 888 0
 863 0038 FFF7FEFF 		bl	SPI_ADC_EnableTxInt
 864              	.LVL57:
 865 003c 08BD     		pop	{r3, pc}
 866              	.L76:
 867 003e 00BF     		.align	2
 868              	.L75:
 869 0040 99650040 		.word	1073767833
 870 0044 00000000 		.word	SPI_ADC_txBufferFull
 871 0048 00000000 		.word	SPI_ADC_txBufferRead
 872 004c 00000000 		.word	SPI_ADC_txBufferWrite
 873 0050 89640040 		.word	1073767561
 874              		.cfi_endproc
 875              	.LFE17:
 876              		.size	SPI_ADC_ClearTxBuffer, .-SPI_ADC_ClearTxBuffer
 877              		.section	.text.SPI_ADC_PutArray,"ax",%progbits
 878              		.align	2
 879              		.global	SPI_ADC_PutArray
 880              		.thumb
 881              		.thumb_func
 882              		.type	SPI_ADC_PutArray, %function
 883              	SPI_ADC_PutArray:
 884              	.LFB18:
 889:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPI_ADC.c **** }
 891:Generated_Source\PSoC5/SPI_ADC.c **** 
 892:Generated_Source\PSoC5/SPI_ADC.c **** 
 893:Generated_Source\PSoC5/SPI_ADC.c **** #if(0u != SPI_ADC_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPI_ADC.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPI_ADC.c ****     * Function Name: SPI_ADC_TxEnable
 896:Generated_Source\PSoC5/SPI_ADC.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPI_ADC.c ****     *
 898:Generated_Source\PSoC5/SPI_ADC.c ****     * Summary:
 899:Generated_Source\PSoC5/SPI_ADC.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPI_ADC.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPI_ADC.c ****     *
 902:Generated_Source\PSoC5/SPI_ADC.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPI_ADC.c ****     *  None.
 904:Generated_Source\PSoC5/SPI_ADC.c ****     *
 905:Generated_Source\PSoC5/SPI_ADC.c ****     * Return:
 906:Generated_Source\PSoC5/SPI_ADC.c ****     *  None.
 907:Generated_Source\PSoC5/SPI_ADC.c ****     *
 908:Generated_Source\PSoC5/SPI_ADC.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPI_ADC.c ****     void SPI_ADC_TxEnable(void) 
 910:Generated_Source\PSoC5/SPI_ADC.c ****     {
 911:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_CONTROL_REG |= SPI_ADC_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPI_ADC.c ****     }
 913:Generated_Source\PSoC5/SPI_ADC.c **** 
 914:Generated_Source\PSoC5/SPI_ADC.c **** 
 915:Generated_Source\PSoC5/SPI_ADC.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPI_ADC.c ****     * Function Name: SPI_ADC_TxDisable
 917:Generated_Source\PSoC5/SPI_ADC.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPI_ADC.c ****     *
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 33


 919:Generated_Source\PSoC5/SPI_ADC.c ****     * Summary:
 920:Generated_Source\PSoC5/SPI_ADC.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPI_ADC.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPI_ADC.c ****     *
 923:Generated_Source\PSoC5/SPI_ADC.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPI_ADC.c ****     *  None.
 925:Generated_Source\PSoC5/SPI_ADC.c ****     *
 926:Generated_Source\PSoC5/SPI_ADC.c ****     * Return:
 927:Generated_Source\PSoC5/SPI_ADC.c ****     *  None.
 928:Generated_Source\PSoC5/SPI_ADC.c ****     *
 929:Generated_Source\PSoC5/SPI_ADC.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPI_ADC.c ****     void SPI_ADC_TxDisable(void) 
 931:Generated_Source\PSoC5/SPI_ADC.c ****     {
 932:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_CONTROL_REG &= ((uint8) ~SPI_ADC_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPI_ADC.c ****     }
 934:Generated_Source\PSoC5/SPI_ADC.c **** 
 935:Generated_Source\PSoC5/SPI_ADC.c **** #endif /* (0u != SPI_ADC_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPI_ADC.c **** 
 937:Generated_Source\PSoC5/SPI_ADC.c **** 
 938:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_PutArray
 940:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPI_ADC.c **** *
 942:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 943:Generated_Source\PSoC5/SPI_ADC.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPI_ADC.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPI_ADC.c **** *
 946:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 947:Generated_Source\PSoC5/SPI_ADC.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPI_ADC.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPI_ADC.c **** *
 950:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 951:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 952:Generated_Source\PSoC5/SPI_ADC.c **** *
 953:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPI_ADC.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPI_ADC.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPI_ADC.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPI_ADC.c **** *
 958:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
 960:Generated_Source\PSoC5/SPI_ADC.c **** *
 961:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPI_ADC.c ****                                                                           
 964:Generated_Source\PSoC5/SPI_ADC.c **** {
 885              		.loc 1 964 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              	.LVL58:
 890 0000 70B5     		push	{r4, r5, r6, lr}
 891              		.cfi_def_cfa_offset 16
 892              		.cfi_offset 4, -16
 893              		.cfi_offset 5, -12
 894              		.cfi_offset 6, -8
 895              		.cfi_offset 14, -4
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 34


 896 0002 0646     		mov	r6, r0
 897 0004 0C46     		mov	r4, r1
 898              	.LVL59:
 965:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPI_ADC.c **** 
 967:Generated_Source\PSoC5/SPI_ADC.c ****     bufIndex = 0u;
 899              		.loc 1 967 0
 900 0006 0025     		movs	r5, #0
 968:Generated_Source\PSoC5/SPI_ADC.c **** 
 969:Generated_Source\PSoC5/SPI_ADC.c ****     while(byteCount > 0u)
 901              		.loc 1 969 0
 902 0008 06E0     		b	.L78
 903              	.LVL60:
 904              	.L79:
 970:Generated_Source\PSoC5/SPI_ADC.c ****     {
 971:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_WriteTxData(buffer[bufIndex]);
 905              		.loc 1 971 0
 906 000a 705D     		ldrb	r0, [r6, r5]	@ zero_extendqisi2
 907 000c FFF7FEFF 		bl	SPI_ADC_WriteTxData
 908              	.LVL61:
 972:Generated_Source\PSoC5/SPI_ADC.c ****         bufIndex++;
 909              		.loc 1 972 0
 910 0010 0135     		adds	r5, r5, #1
 911              	.LVL62:
 912 0012 EDB2     		uxtb	r5, r5
 913              	.LVL63:
 973:Generated_Source\PSoC5/SPI_ADC.c ****         byteCount--;
 914              		.loc 1 973 0
 915 0014 013C     		subs	r4, r4, #1
 916              	.LVL64:
 917 0016 E4B2     		uxtb	r4, r4
 918              	.LVL65:
 919              	.L78:
 969:Generated_Source\PSoC5/SPI_ADC.c ****     {
 920              		.loc 1 969 0
 921 0018 002C     		cmp	r4, #0
 922 001a F6D1     		bne	.L79
 974:Generated_Source\PSoC5/SPI_ADC.c ****     }
 975:Generated_Source\PSoC5/SPI_ADC.c **** }
 923              		.loc 1 975 0
 924 001c 70BD     		pop	{r4, r5, r6, pc}
 925              		.cfi_endproc
 926              	.LFE18:
 927              		.size	SPI_ADC_PutArray, .-SPI_ADC_PutArray
 928 001e 00BF     		.section	.text.SPI_ADC_ClearFIFO,"ax",%progbits
 929              		.align	2
 930              		.global	SPI_ADC_ClearFIFO
 931              		.thumb
 932              		.thumb_func
 933              		.type	SPI_ADC_ClearFIFO, %function
 934              	SPI_ADC_ClearFIFO:
 935              	.LFB19:
 976:Generated_Source\PSoC5/SPI_ADC.c **** 
 977:Generated_Source\PSoC5/SPI_ADC.c **** 
 978:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ClearFIFO
 980:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 35


 981:Generated_Source\PSoC5/SPI_ADC.c **** *
 982:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
 983:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPI_ADC.c **** *
 985:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
 986:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 987:Generated_Source\PSoC5/SPI_ADC.c **** *
 988:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
 989:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
 990:Generated_Source\PSoC5/SPI_ADC.c **** *
 991:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPI_ADC.c **** *
 994:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPI_ADC.c **** {
 936              		.loc 1 996 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940 0000 08B5     		push	{r3, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 3, -8
 943              		.cfi_offset 14, -4
 997:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPI_ADC.c **** 
 999:Generated_Source\PSoC5/SPI_ADC.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPI_ADC.c ****     while(0u !=(SPI_ADC_RX_STATUS_REG & SPI_ADC_STS_RX_FIFO_NOT_EMPTY))
 944              		.loc 1 1000 0
 945 0002 01E0     		b	.L82
 946              	.L83:
1001:Generated_Source\PSoC5/SPI_ADC.c ****     {
1002:Generated_Source\PSoC5/SPI_ADC.c ****         (void) CY_GET_REG8(SPI_ADC_RXDATA_PTR);
 947              		.loc 1 1002 0
 948 0004 0A4B     		ldr	r3, .L85
 949 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 950              	.L82:
1000:Generated_Source\PSoC5/SPI_ADC.c ****     {
 951              		.loc 1 1000 0
 952 0008 0A4B     		ldr	r3, .L85+4
 953 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 954 000c 13F0200F 		tst	r3, #32
 955 0010 F8D1     		bne	.L83
1003:Generated_Source\PSoC5/SPI_ADC.c ****     }
1004:Generated_Source\PSoC5/SPI_ADC.c **** 
1005:Generated_Source\PSoC5/SPI_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 956              		.loc 1 1005 0
 957 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 958              	.LVL66:
1006:Generated_Source\PSoC5/SPI_ADC.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_ADC_TX_FIFO_CLR);
 959              		.loc 1 1007 0
 960 0016 084B     		ldr	r3, .L85+8
 961 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 962 001a 42F00102 		orr	r2, r2, #1
 963 001e 1A70     		strb	r2, [r3]
1008:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_ADC_TX_FIFO_CLR);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 36


 964              		.loc 1 1008 0
 965 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 966 0022 02F0FE02 		and	r2, r2, #254
 967 0026 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/SPI_ADC.c **** 
1010:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPI_ADC.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_ADC_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_ADC_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPI_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 968              		.loc 1 1015 0
 969 0028 FFF7FEFF 		bl	CyExitCriticalSection
 970              	.LVL67:
 971 002c 08BD     		pop	{r3, pc}
 972              	.L86:
 973 002e 00BF     		.align	2
 974              	.L85:
 975 0030 59650040 		.word	1073767769
 976 0034 69650040 		.word	1073767785
 977 0038 99650040 		.word	1073767833
 978              		.cfi_endproc
 979              	.LFE19:
 980              		.size	SPI_ADC_ClearFIFO, .-SPI_ADC_ClearFIFO
 981              		.section	.text.SPI_ADC_Init,"ax",%progbits
 982              		.align	2
 983              		.global	SPI_ADC_Init
 984              		.thumb
 985              		.thumb_func
 986              		.type	SPI_ADC_Init, %function
 987              	SPI_ADC_Init:
 988              	.LFB0:
  64:Generated_Source\PSoC5/SPI_ADC.c ****     /* Initialize the Bit counter */
 989              		.loc 1 64 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993 0000 10B5     		push	{r4, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 4, -8
 996              		.cfi_offset 14, -4
  66:Generated_Source\PSoC5/SPI_ADC.c **** 
 997              		.loc 1 66 0
 998 0002 0F22     		movs	r2, #15
 999 0004 174B     		ldr	r3, .L89
 1000 0006 1A70     		strb	r2, [r3]
  70:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntSetPriority     (SPI_ADC_TX_ISR_NUMBER,  SPI_ADC_TX_ISR_PRIORITY);
 1001              		.loc 1 70 0
 1002 0008 174C     		ldr	r4, .L89+4
 1003 000a 0823     		movs	r3, #8
 1004 000c 2360     		str	r3, [r4]
  71:Generated_Source\PSoC5/SPI_ADC.c ****         (void) CyIntSetVector(SPI_ADC_TX_ISR_NUMBER, &SPI_ADC_TX_ISR);
 1005              		.loc 1 71 0
 1006 000e 0421     		movs	r1, #4
 1007 0010 0320     		movs	r0, #3
 1008 0012 FFF7FEFF 		bl	CyIntSetPriority
 1009              	.LVL68:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 37


  72:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_TX_INT_ENABLED) */
 1010              		.loc 1 72 0
 1011 0016 1549     		ldr	r1, .L89+8
 1012 0018 0320     		movs	r0, #3
 1013 001a FFF7FEFF 		bl	CyIntSetVector
 1014              	.LVL69:
  77:Generated_Source\PSoC5/SPI_ADC.c ****         CyIntSetPriority     (SPI_ADC_RX_ISR_NUMBER,  SPI_ADC_RX_ISR_PRIORITY);
 1015              		.loc 1 77 0
 1016 001e 0421     		movs	r1, #4
 1017 0020 2160     		str	r1, [r4]
  78:Generated_Source\PSoC5/SPI_ADC.c ****         (void) CyIntSetVector(SPI_ADC_RX_ISR_NUMBER, &SPI_ADC_RX_ISR);
 1018              		.loc 1 78 0
 1019 0022 0220     		movs	r0, #2
 1020 0024 FFF7FEFF 		bl	CyIntSetPriority
 1021              	.LVL70:
  79:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (0u != SPI_ADC_INTERNAL_RX_INT_ENABLED) */
 1022              		.loc 1 79 0
 1023 0028 1149     		ldr	r1, .L89+12
 1024 002a 0220     		movs	r0, #2
 1025 002c FFF7FEFF 		bl	CyIntSetVector
 1026              	.LVL71:
  83:Generated_Source\PSoC5/SPI_ADC.c **** 
 1027              		.loc 1 83 0
 1028 0030 FFF7FEFF 		bl	SPI_ADC_ClearFIFO
 1029              	.LVL72:
  86:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferRead  = 0u;
 1030              		.loc 1 86 0
 1031 0034 0024     		movs	r4, #0
 1032 0036 0F4B     		ldr	r3, .L89+16
 1033 0038 1C70     		strb	r4, [r3]
  87:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_rxBufferWrite = 0u;
 1034              		.loc 1 87 0
 1035 003a 0F4B     		ldr	r3, .L89+20
 1036 003c 1C70     		strb	r4, [r3]
  88:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
 1037              		.loc 1 88 0
 1038 003e 0F4B     		ldr	r3, .L89+24
 1039 0040 1C70     		strb	r4, [r3]
  92:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferRead  = 0u;
 1040              		.loc 1 92 0
 1041 0042 0F4B     		ldr	r3, .L89+28
 1042 0044 1C70     		strb	r4, [r3]
  93:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_txBufferWrite = 0u;
 1043              		.loc 1 93 0
 1044 0046 0F4B     		ldr	r3, .L89+32
 1045 0048 1C70     		strb	r4, [r3]
  94:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED) */
 1046              		.loc 1 94 0
 1047 004a 0F4B     		ldr	r3, .L89+36
 1048 004c 1C70     		strb	r4, [r3]
  97:Generated_Source\PSoC5/SPI_ADC.c ****     (void) SPI_ADC_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 1049              		.loc 1 97 0
 1050 004e FFF7FEFF 		bl	SPI_ADC_ReadTxStatus
 1051              	.LVL73:
  98:Generated_Source\PSoC5/SPI_ADC.c **** 
 1052              		.loc 1 98 0
 1053 0052 FFF7FEFF 		bl	SPI_ADC_ReadRxStatus
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 38


 1054              	.LVL74:
 101:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_MASK_REG = SPI_ADC_RX_INIT_INTERRUPTS_MASK;
 1055              		.loc 1 101 0
 1056 0056 0D4B     		ldr	r3, .L89+40
 1057 0058 1C70     		strb	r4, [r3]
 102:Generated_Source\PSoC5/SPI_ADC.c **** }
 1058              		.loc 1 102 0
 1059 005a 2022     		movs	r2, #32
 1060 005c 03F58073 		add	r3, r3, #256
 1061 0060 1A70     		strb	r2, [r3]
 1062 0062 10BD     		pop	{r4, pc}
 1063              	.L90:
 1064              		.align	2
 1065              	.L89:
 1066 0064 8A640040 		.word	1073767562
 1067 0068 80E100E0 		.word	-536813184
 1068 006c 00000000 		.word	SPI_ADC_TX_ISR
 1069 0070 00000000 		.word	SPI_ADC_RX_ISR
 1070 0074 00000000 		.word	SPI_ADC_rxBufferFull
 1071 0078 00000000 		.word	SPI_ADC_rxBufferRead
 1072 007c 00000000 		.word	SPI_ADC_rxBufferWrite
 1073 0080 00000000 		.word	SPI_ADC_txBufferFull
 1074 0084 00000000 		.word	SPI_ADC_txBufferRead
 1075 0088 00000000 		.word	SPI_ADC_txBufferWrite
 1076 008c 89640040 		.word	1073767561
 1077              		.cfi_endproc
 1078              	.LFE0:
 1079              		.size	SPI_ADC_Init, .-SPI_ADC_Init
 1080              		.section	.text.SPI_ADC_Start,"ax",%progbits
 1081              		.align	2
 1082              		.global	SPI_ADC_Start
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	SPI_ADC_Start, %function
 1086              	SPI_ADC_Start:
 1087              	.LFB2:
 164:Generated_Source\PSoC5/SPI_ADC.c ****     if(0u == SPI_ADC_initVar)
 1088              		.loc 1 164 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092 0000 08B5     		push	{r3, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 3, -8
 1095              		.cfi_offset 14, -4
 165:Generated_Source\PSoC5/SPI_ADC.c ****     {
 1096              		.loc 1 165 0
 1097 0002 054B     		ldr	r3, .L94
 1098 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1099 0006 23B9     		cbnz	r3, .L92
 167:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_initVar = 1u;
 1100              		.loc 1 167 0
 1101 0008 FFF7FEFF 		bl	SPI_ADC_Init
 1102              	.LVL75:
 168:Generated_Source\PSoC5/SPI_ADC.c ****     }
 1103              		.loc 1 168 0
 1104 000c 0122     		movs	r2, #1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 39


 1105 000e 024B     		ldr	r3, .L94
 1106 0010 1A70     		strb	r2, [r3]
 1107              	.L92:
 171:Generated_Source\PSoC5/SPI_ADC.c **** }
 1108              		.loc 1 171 0
 1109 0012 FFF7FEFF 		bl	SPI_ADC_Enable
 1110              	.LVL76:
 1111 0016 08BD     		pop	{r3, pc}
 1112              	.L95:
 1113              		.align	2
 1114              	.L94:
 1115 0018 00000000 		.word	.LANCHOR0
 1116              		.cfi_endproc
 1117              	.LFE2:
 1118              		.size	SPI_ADC_Start, .-SPI_ADC_Start
 1119              		.section	.text.SPI_ADC_EnableInt,"ax",%progbits
 1120              		.align	2
 1121              		.global	SPI_ADC_EnableInt
 1122              		.thumb
 1123              		.thumb_func
 1124              		.type	SPI_ADC_EnableInt, %function
 1125              	SPI_ADC_EnableInt:
 1126              	.LFB20:
1016:Generated_Source\PSoC5/SPI_ADC.c **** }
1017:Generated_Source\PSoC5/SPI_ADC.c **** 
1018:Generated_Source\PSoC5/SPI_ADC.c **** 
1019:Generated_Source\PSoC5/SPI_ADC.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPI_ADC.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPI_ADC.c **** */
1022:Generated_Source\PSoC5/SPI_ADC.c **** 
1023:Generated_Source\PSoC5/SPI_ADC.c **** 
1024:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_EnableInt
1026:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPI_ADC.c **** *
1028:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
1029:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPI_ADC.c **** *
1031:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
1032:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
1033:Generated_Source\PSoC5/SPI_ADC.c **** *
1034:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
1035:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
1036:Generated_Source\PSoC5/SPI_ADC.c **** *
1037:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
1038:Generated_Source\PSoC5/SPI_ADC.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPI_ADC.c **** *
1040:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_EnableInt(void) 
1042:Generated_Source\PSoC5/SPI_ADC.c **** {
 1127              		.loc 1 1042 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131 0000 08B5     		push	{r3, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 3, -8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 40


 1134              		.cfi_offset 14, -4
1043:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_EnableRxInt();
 1135              		.loc 1 1043 0
 1136 0002 FFF7FEFF 		bl	SPI_ADC_EnableRxInt
 1137              	.LVL77:
1044:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_EnableTxInt();
 1138              		.loc 1 1044 0
 1139 0006 FFF7FEFF 		bl	SPI_ADC_EnableTxInt
 1140              	.LVL78:
 1141 000a 08BD     		pop	{r3, pc}
 1142              		.cfi_endproc
 1143              	.LFE20:
 1144              		.size	SPI_ADC_EnableInt, .-SPI_ADC_EnableInt
 1145              		.section	.text.SPI_ADC_DisableInt,"ax",%progbits
 1146              		.align	2
 1147              		.global	SPI_ADC_DisableInt
 1148              		.thumb
 1149              		.thumb_func
 1150              		.type	SPI_ADC_DisableInt, %function
 1151              	SPI_ADC_DisableInt:
 1152              	.LFB21:
1045:Generated_Source\PSoC5/SPI_ADC.c **** }
1046:Generated_Source\PSoC5/SPI_ADC.c **** 
1047:Generated_Source\PSoC5/SPI_ADC.c **** 
1048:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_DisableInt
1050:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPI_ADC.c **** *
1052:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
1053:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPI_ADC.c **** *
1055:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
1056:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
1057:Generated_Source\PSoC5/SPI_ADC.c **** *
1058:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
1059:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
1060:Generated_Source\PSoC5/SPI_ADC.c **** *
1061:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
1062:Generated_Source\PSoC5/SPI_ADC.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPI_ADC.c **** *
1064:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_DisableInt(void) 
1066:Generated_Source\PSoC5/SPI_ADC.c **** {
 1153              		.loc 1 1066 0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
1067:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_DisableTxInt();
 1161              		.loc 1 1067 0
 1162 0002 FFF7FEFF 		bl	SPI_ADC_DisableTxInt
 1163              	.LVL79:
1068:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_DisableRxInt();
 1164              		.loc 1 1068 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 41


 1165 0006 FFF7FEFF 		bl	SPI_ADC_DisableRxInt
 1166              	.LVL80:
 1167 000a 08BD     		pop	{r3, pc}
 1168              		.cfi_endproc
 1169              	.LFE21:
 1170              		.size	SPI_ADC_DisableInt, .-SPI_ADC_DisableInt
 1171              		.section	.text.SPI_ADC_SetInterruptMode,"ax",%progbits
 1172              		.align	2
 1173              		.global	SPI_ADC_SetInterruptMode
 1174              		.thumb
 1175              		.thumb_func
 1176              		.type	SPI_ADC_SetInterruptMode, %function
 1177              	SPI_ADC_SetInterruptMode:
 1178              	.LFB22:
1069:Generated_Source\PSoC5/SPI_ADC.c **** }
1070:Generated_Source\PSoC5/SPI_ADC.c **** 
1071:Generated_Source\PSoC5/SPI_ADC.c **** 
1072:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_SetInterruptMode
1074:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPI_ADC.c **** *
1076:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
1077:Generated_Source\PSoC5/SPI_ADC.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPI_ADC.c **** *
1079:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
1080:Generated_Source\PSoC5/SPI_ADC.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPI_ADC.c **** *  header file).
1082:Generated_Source\PSoC5/SPI_ADC.c **** *
1083:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
1084:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
1085:Generated_Source\PSoC5/SPI_ADC.c **** *
1086:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
1087:Generated_Source\PSoC5/SPI_ADC.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPI_ADC.c **** *
1089:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPI_ADC.c **** void SPI_ADC_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPI_ADC.c **** {
 1179              		.loc 1 1091 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184              	.LVL81:
1092:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI_ADC_STS_SPI_IDLE));
 1185              		.loc 1 1092 0
 1186 0000 00F0EF02 		and	r2, r0, #239
 1187 0004 024B     		ldr	r3, .L101
 1188 0006 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC5/SPI_ADC.c ****     SPI_ADC_RX_STATUS_MASK_REG  =  intSrc;
 1189              		.loc 1 1093 0
 1190 0008 03F58073 		add	r3, r3, #256
 1191 000c 1870     		strb	r0, [r3]
 1192 000e 7047     		bx	lr
 1193              	.L102:
 1194              		.align	2
 1195              	.L101:
 1196 0010 89640040 		.word	1073767561
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 42


 1197              		.cfi_endproc
 1198              	.LFE22:
 1199              		.size	SPI_ADC_SetInterruptMode, .-SPI_ADC_SetInterruptMode
 1200              		.section	.text.SPI_ADC_ReadStatus,"ax",%progbits
 1201              		.align	2
 1202              		.global	SPI_ADC_ReadStatus
 1203              		.thumb
 1204              		.thumb_func
 1205              		.type	SPI_ADC_ReadStatus, %function
 1206              	SPI_ADC_ReadStatus:
 1207              	.LFB23:
1094:Generated_Source\PSoC5/SPI_ADC.c **** }
1095:Generated_Source\PSoC5/SPI_ADC.c **** 
1096:Generated_Source\PSoC5/SPI_ADC.c **** 
1097:Generated_Source\PSoC5/SPI_ADC.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPI_ADC.c **** * Function Name: SPI_ADC_ReadStatus
1099:Generated_Source\PSoC5/SPI_ADC.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPI_ADC.c **** *
1101:Generated_Source\PSoC5/SPI_ADC.c **** * Summary:
1102:Generated_Source\PSoC5/SPI_ADC.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPI_ADC.c **** *
1104:Generated_Source\PSoC5/SPI_ADC.c **** * Parameters:
1105:Generated_Source\PSoC5/SPI_ADC.c **** *  None.
1106:Generated_Source\PSoC5/SPI_ADC.c **** *
1107:Generated_Source\PSoC5/SPI_ADC.c **** * Return:
1108:Generated_Source\PSoC5/SPI_ADC.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPI_ADC.c **** *
1110:Generated_Source\PSoC5/SPI_ADC.c **** * Global variables:
1111:Generated_Source\PSoC5/SPI_ADC.c **** *  SPI_ADC_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPI_ADC.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPI_ADC.c **** *
1114:Generated_Source\PSoC5/SPI_ADC.c **** * Theory:
1115:Generated_Source\PSoC5/SPI_ADC.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPI_ADC.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPI_ADC.c **** *
1118:Generated_Source\PSoC5/SPI_ADC.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPI_ADC.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPI_ADC.c **** *
1121:Generated_Source\PSoC5/SPI_ADC.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPI_ADC.c **** *  No.
1123:Generated_Source\PSoC5/SPI_ADC.c **** *
1124:Generated_Source\PSoC5/SPI_ADC.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPI_ADC.c **** uint8 SPI_ADC_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPI_ADC.c **** {
 1208              		.loc 1 1126 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212 0000 10B5     		push	{r4, lr}
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 4, -8
 1215              		.cfi_offset 14, -4
1127:Generated_Source\PSoC5/SPI_ADC.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPI_ADC.c **** 
1129:Generated_Source\PSoC5/SPI_ADC.c ****     #if(SPI_ADC_TX_SOFTWARE_BUF_ENABLED || SPI_ADC_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPI_ADC.c **** 
1131:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_DisableInt();
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 43


 1216              		.loc 1 1131 0
 1217 0002 FFF7FEFF 		bl	SPI_ADC_DisableInt
 1218              	.LVL82:
1132:Generated_Source\PSoC5/SPI_ADC.c **** 
1133:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus  = SPI_ADC_GET_STATUS_RX(SPI_ADC_swStatusRx);
 1219              		.loc 1 1133 0
 1220 0006 0C4B     		ldr	r3, .L105
 1221 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222 000a 0C4A     		ldr	r2, .L105+4
 1223 000c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 1224 000e 04F04004 		and	r4, r4, #64
 1225 0012 1C43     		orrs	r4, r4, r3
 1226              	.LVL83:
1134:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus |= SPI_ADC_GET_STATUS_TX(SPI_ADC_swStatusTx);
 1227              		.loc 1 1134 0
 1228 0014 0A4B     		ldr	r3, .L105+8
 1229 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1230 0018 0A49     		ldr	r1, .L105+12
 1231 001a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1232 001c 03F00903 		and	r3, r3, #9
 1233 0020 0343     		orrs	r3, r3, r0
 1234 0022 1C43     		orrs	r4, r4, r3
 1235              	.LVL84:
1135:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus &= ((uint8) ~SPI_ADC_STS_SPI_IDLE);
 1236              		.loc 1 1135 0
 1237 0024 04F0EF04 		and	r4, r4, #239
 1238              	.LVL85:
1136:Generated_Source\PSoC5/SPI_ADC.c **** 
1137:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_swStatusTx = 0u;
 1239              		.loc 1 1137 0
 1240 0028 0023     		movs	r3, #0
 1241 002a 0B70     		strb	r3, [r1]
1138:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_swStatusRx = 0u;
 1242              		.loc 1 1138 0
 1243 002c 1370     		strb	r3, [r2]
1139:Generated_Source\PSoC5/SPI_ADC.c **** 
1140:Generated_Source\PSoC5/SPI_ADC.c ****         SPI_ADC_EnableInt();
 1244              		.loc 1 1140 0
 1245 002e FFF7FEFF 		bl	SPI_ADC_EnableInt
 1246              	.LVL86:
1141:Generated_Source\PSoC5/SPI_ADC.c **** 
1142:Generated_Source\PSoC5/SPI_ADC.c ****     #else
1143:Generated_Source\PSoC5/SPI_ADC.c **** 
1144:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus  = SPI_ADC_RX_STATUS_REG;
1145:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus |= SPI_ADC_TX_STATUS_REG;
1146:Generated_Source\PSoC5/SPI_ADC.c ****         tmpStatus &= ((uint8) ~SPI_ADC_STS_SPI_IDLE);
1147:Generated_Source\PSoC5/SPI_ADC.c **** 
1148:Generated_Source\PSoC5/SPI_ADC.c ****     #endif /* (SPI_ADC_TX_SOFTWARE_BUF_ENABLED || SPI_ADC_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPI_ADC.c **** 
1150:Generated_Source\PSoC5/SPI_ADC.c ****     return(tmpStatus);
1151:Generated_Source\PSoC5/SPI_ADC.c **** }
 1247              		.loc 1 1151 0
 1248 0032 2046     		mov	r0, r4
 1249 0034 10BD     		pop	{r4, pc}
 1250              	.LVL87:
 1251              	.L106:
 1252 0036 00BF     		.align	2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 44


 1253              	.L105:
 1254 0038 69650040 		.word	1073767785
 1255 003c 00000000 		.word	SPI_ADC_swStatusRx
 1256 0040 69640040 		.word	1073767529
 1257 0044 00000000 		.word	SPI_ADC_swStatusTx
 1258              		.cfi_endproc
 1259              	.LFE23:
 1260              		.size	SPI_ADC_ReadStatus, .-SPI_ADC_ReadStatus
 1261              		.comm	SPI_ADC_swStatusRx,1,1
 1262              		.comm	SPI_ADC_swStatusTx,1,1
 1263              		.global	SPI_ADC_initVar
 1264              		.comm	SPI_ADC_rxBufferWrite,1,1
 1265              		.comm	SPI_ADC_rxBufferRead,1,1
 1266              		.comm	SPI_ADC_rxBufferFull,1,1
 1267              		.comm	SPI_ADC_rxBuffer,27,4
 1268              		.comm	SPI_ADC_txBufferWrite,1,1
 1269              		.comm	SPI_ADC_txBufferRead,1,1
 1270              		.comm	SPI_ADC_txBufferFull,1,1
 1271              		.comm	SPI_ADC_txBuffer,27,4
 1272              		.bss
 1273              		.set	.LANCHOR0,. + 0
 1274              		.type	SPI_ADC_initVar, %object
 1275              		.size	SPI_ADC_initVar, 1
 1276              	SPI_ADC_initVar:
 1277 0000 00       		.space	1
 1278              		.text
 1279              	.Letext0:
 1280              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1281              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1282              		.file 4 "Generated_Source\\PSoC5\\SPI_ADC_IntClock.h"
 1283              		.section	.debug_info,"",%progbits
 1284              	.Ldebug_info0:
 1285 0000 05070000 		.4byte	0x705
 1286 0004 0400     		.2byte	0x4
 1287 0006 00000000 		.4byte	.Ldebug_abbrev0
 1288 000a 04       		.byte	0x4
 1289 000b 01       		.uleb128 0x1
 1290 000c B8030000 		.4byte	.LASF70
 1291 0010 0C       		.byte	0xc
 1292 0011 68040000 		.4byte	.LASF71
 1293 0015 66030000 		.4byte	.LASF72
 1294 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1295 001d 00000000 		.4byte	0
 1296 0021 00000000 		.4byte	.Ldebug_line0
 1297 0025 02       		.uleb128 0x2
 1298 0026 01       		.byte	0x1
 1299 0027 06       		.byte	0x6
 1300 0028 A1000000 		.4byte	.LASF0
 1301 002c 02       		.uleb128 0x2
 1302 002d 01       		.byte	0x1
 1303 002e 08       		.byte	0x8
 1304 002f 43030000 		.4byte	.LASF1
 1305 0033 02       		.uleb128 0x2
 1306 0034 02       		.byte	0x2
 1307 0035 05       		.byte	0x5
 1308 0036 AE030000 		.4byte	.LASF2
 1309 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 45


 1310 003b 02       		.byte	0x2
 1311 003c 07       		.byte	0x7
 1312 003d 0E020000 		.4byte	.LASF3
 1313 0041 02       		.uleb128 0x2
 1314 0042 04       		.byte	0x4
 1315 0043 05       		.byte	0x5
 1316 0044 F7000000 		.4byte	.LASF4
 1317 0048 02       		.uleb128 0x2
 1318 0049 04       		.byte	0x4
 1319 004a 07       		.byte	0x7
 1320 004b E0010000 		.4byte	.LASF5
 1321 004f 02       		.uleb128 0x2
 1322 0050 08       		.byte	0x8
 1323 0051 05       		.byte	0x5
 1324 0052 93000000 		.4byte	.LASF6
 1325 0056 02       		.uleb128 0x2
 1326 0057 08       		.byte	0x8
 1327 0058 07       		.byte	0x7
 1328 0059 62000000 		.4byte	.LASF7
 1329 005d 03       		.uleb128 0x3
 1330 005e 04       		.byte	0x4
 1331 005f 05       		.byte	0x5
 1332 0060 696E7400 		.ascii	"int\000"
 1333 0064 02       		.uleb128 0x2
 1334 0065 04       		.byte	0x4
 1335 0066 07       		.byte	0x7
 1336 0067 D3010000 		.4byte	.LASF8
 1337 006b 04       		.uleb128 0x4
 1338 006c 42010000 		.4byte	.LASF9
 1339 0070 02       		.byte	0x2
 1340 0071 E401     		.2byte	0x1e4
 1341 0073 2C000000 		.4byte	0x2c
 1342 0077 04       		.uleb128 0x4
 1343 0078 A6010000 		.4byte	.LASF10
 1344 007c 02       		.byte	0x2
 1345 007d E601     		.2byte	0x1e6
 1346 007f 48000000 		.4byte	0x48
 1347 0083 02       		.uleb128 0x2
 1348 0084 04       		.byte	0x4
 1349 0085 04       		.byte	0x4
 1350 0086 11030000 		.4byte	.LASF11
 1351 008a 02       		.uleb128 0x2
 1352 008b 08       		.byte	0x8
 1353 008c 04       		.byte	0x4
 1354 008d 71010000 		.4byte	.LASF12
 1355 0091 02       		.uleb128 0x2
 1356 0092 01       		.byte	0x1
 1357 0093 08       		.byte	0x8
 1358 0094 89040000 		.4byte	.LASF13
 1359 0098 04       		.uleb128 0x4
 1360 0099 2D030000 		.4byte	.LASF14
 1361 009d 02       		.byte	0x2
 1362 009e 8E02     		.2byte	0x28e
 1363 00a0 A4000000 		.4byte	0xa4
 1364 00a4 05       		.uleb128 0x5
 1365 00a5 6B000000 		.4byte	0x6b
 1366 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 46


 1367 00aa 6B020000 		.4byte	.LASF15
 1368 00ae 02       		.byte	0x2
 1369 00af 9002     		.2byte	0x290
 1370 00b1 B5000000 		.4byte	0xb5
 1371 00b5 05       		.uleb128 0x5
 1372 00b6 77000000 		.4byte	0x77
 1373 00ba 02       		.uleb128 0x2
 1374 00bb 08       		.byte	0x8
 1375 00bc 04       		.byte	0x4
 1376 00bd AF020000 		.4byte	.LASF16
 1377 00c1 02       		.uleb128 0x2
 1378 00c2 04       		.byte	0x4
 1379 00c3 07       		.byte	0x7
 1380 00c4 A6020000 		.4byte	.LASF17
 1381 00c8 06       		.uleb128 0x6
 1382 00c9 A3040000 		.4byte	.LASF18
 1383 00cd 01       		.byte	0x1
 1384 00ce E3       		.byte	0xe3
 1385 00cf 00000000 		.4byte	.LFB4
 1386 00d3 0C000000 		.4byte	.LFE4-.LFB4
 1387 00d7 01       		.uleb128 0x1
 1388 00d8 9C       		.byte	0x9c
 1389 00d9 06       		.uleb128 0x6
 1390 00da 41000000 		.4byte	.LASF19
 1391 00de 01       		.byte	0x1
 1392 00df FC       		.byte	0xfc
 1393 00e0 00000000 		.4byte	.LFB5
 1394 00e4 0C000000 		.4byte	.LFE5-.LFB5
 1395 00e8 01       		.uleb128 0x1
 1396 00e9 9C       		.byte	0x9c
 1397 00ea 07       		.uleb128 0x7
 1398 00eb 47050000 		.4byte	.LASF22
 1399 00ef 01       		.byte	0x1
 1400 00f0 78       		.byte	0x78
 1401 00f1 00000000 		.4byte	.LFB1
 1402 00f5 3C000000 		.4byte	.LFE1-.LFB1
 1403 00f9 01       		.uleb128 0x1
 1404 00fa 9C       		.byte	0x9c
 1405 00fb 3C010000 		.4byte	0x13c
 1406 00ff 08       		.uleb128 0x8
 1407 0100 BE040000 		.4byte	.LASF24
 1408 0104 01       		.byte	0x1
 1409 0105 7A       		.byte	0x7a
 1410 0106 6B000000 		.4byte	0x6b
 1411 010a 00000000 		.4byte	.LLST0
 1412 010e 09       		.uleb128 0x9
 1413 010f 06000000 		.4byte	.LVL0
 1414 0113 C6060000 		.4byte	0x6c6
 1415 0117 09       		.uleb128 0x9
 1416 0118 2A000000 		.4byte	.LVL1
 1417 011c D1060000 		.4byte	0x6d1
 1418 0120 09       		.uleb128 0x9
 1419 0121 2E000000 		.4byte	.LVL2
 1420 0125 DC060000 		.4byte	0x6dc
 1421 0129 09       		.uleb128 0x9
 1422 012a 32000000 		.4byte	.LVL3
 1423 012e C8000000 		.4byte	0xc8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 47


 1424 0132 09       		.uleb128 0x9
 1425 0133 36000000 		.4byte	.LVL4
 1426 0137 D9000000 		.4byte	0xd9
 1427 013b 00       		.byte	0
 1428 013c 0A       		.uleb128 0xa
 1429 013d E2000000 		.4byte	.LASF20
 1430 0141 01       		.byte	0x1
 1431 0142 1501     		.2byte	0x115
 1432 0144 00000000 		.4byte	.LFB6
 1433 0148 0C000000 		.4byte	.LFE6-.LFB6
 1434 014c 01       		.uleb128 0x1
 1435 014d 9C       		.byte	0x9c
 1436 014e 0A       		.uleb128 0xa
 1437 014f 18050000 		.4byte	.LASF21
 1438 0153 01       		.byte	0x1
 1439 0154 2E01     		.2byte	0x12e
 1440 0156 00000000 		.4byte	.LFB7
 1441 015a 0C000000 		.4byte	.LFE7-.LFB7
 1442 015e 01       		.uleb128 0x1
 1443 015f 9C       		.byte	0x9c
 1444 0160 07       		.uleb128 0x7
 1445 0161 55000000 		.4byte	.LASF23
 1446 0165 01       		.byte	0x1
 1447 0166 C0       		.byte	0xc0
 1448 0167 00000000 		.4byte	.LFB3
 1449 016b 34000000 		.4byte	.LFE3-.LFB3
 1450 016f 01       		.uleb128 0x1
 1451 0170 9C       		.byte	0x9c
 1452 0171 B2010000 		.4byte	0x1b2
 1453 0175 08       		.uleb128 0x8
 1454 0176 BE040000 		.4byte	.LASF24
 1455 017a 01       		.byte	0x1
 1456 017b C2       		.byte	0xc2
 1457 017c 6B000000 		.4byte	0x6b
 1458 0180 13000000 		.4byte	.LLST1
 1459 0184 09       		.uleb128 0x9
 1460 0185 06000000 		.4byte	.LVL5
 1461 0189 C6060000 		.4byte	0x6c6
 1462 018d 09       		.uleb128 0x9
 1463 018e 20000000 		.4byte	.LVL6
 1464 0192 D1060000 		.4byte	0x6d1
 1465 0196 09       		.uleb128 0x9
 1466 0197 24000000 		.4byte	.LVL7
 1467 019b E7060000 		.4byte	0x6e7
 1468 019f 09       		.uleb128 0x9
 1469 01a0 28000000 		.4byte	.LVL8
 1470 01a4 3C010000 		.4byte	0x13c
 1471 01a8 09       		.uleb128 0x9
 1472 01a9 2C000000 		.4byte	.LVL9
 1473 01ad 4E010000 		.4byte	0x14e
 1474 01b1 00       		.byte	0
 1475 01b2 0B       		.uleb128 0xb
 1476 01b3 27010000 		.4byte	.LASF25
 1477 01b7 01       		.byte	0x1
 1478 01b8 4801     		.2byte	0x148
 1479 01ba 00000000 		.4byte	.LFB8
 1480 01be 0C000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 48


 1481 01c2 01       		.uleb128 0x1
 1482 01c3 9C       		.byte	0x9c
 1483 01c4 D7010000 		.4byte	0x1d7
 1484 01c8 0C       		.uleb128 0xc
 1485 01c9 64020000 		.4byte	.LASF27
 1486 01cd 01       		.byte	0x1
 1487 01ce 4801     		.2byte	0x148
 1488 01d0 6B000000 		.4byte	0x6b
 1489 01d4 01       		.uleb128 0x1
 1490 01d5 50       		.byte	0x50
 1491 01d6 00       		.byte	0
 1492 01d7 0B       		.uleb128 0xb
 1493 01d8 FD040000 		.4byte	.LASF26
 1494 01dc 01       		.byte	0x1
 1495 01dd 6001     		.2byte	0x160
 1496 01df 00000000 		.4byte	.LFB9
 1497 01e3 0C000000 		.4byte	.LFE9-.LFB9
 1498 01e7 01       		.uleb128 0x1
 1499 01e8 9C       		.byte	0x9c
 1500 01e9 FC010000 		.4byte	0x1fc
 1501 01ed 0C       		.uleb128 0xc
 1502 01ee 64020000 		.4byte	.LASF27
 1503 01f2 01       		.byte	0x1
 1504 01f3 6001     		.2byte	0x160
 1505 01f5 6B000000 		.4byte	0x6b
 1506 01f9 01       		.uleb128 0x1
 1507 01fa 50       		.byte	0x50
 1508 01fb 00       		.byte	0
 1509 01fc 0D       		.uleb128 0xd
 1510 01fd CD000000 		.4byte	.LASF29
 1511 0201 01       		.byte	0x1
 1512 0202 8201     		.2byte	0x182
 1513 0204 6B000000 		.4byte	0x6b
 1514 0208 00000000 		.4byte	.LFB10
 1515 020c 28000000 		.4byte	.LFE10-.LFB10
 1516 0210 01       		.uleb128 0x1
 1517 0211 9C       		.byte	0x9c
 1518 0212 39020000 		.4byte	0x239
 1519 0216 0E       		.uleb128 0xe
 1520 0217 79000000 		.4byte	.LASF28
 1521 021b 01       		.byte	0x1
 1522 021c 8401     		.2byte	0x184
 1523 021e 6B000000 		.4byte	0x6b
 1524 0222 26000000 		.4byte	.LLST2
 1525 0226 09       		.uleb128 0x9
 1526 0227 06000000 		.4byte	.LVL12
 1527 022b 3C010000 		.4byte	0x13c
 1528 022f 09       		.uleb128 0x9
 1529 0230 1C000000 		.4byte	.LVL14
 1530 0234 C8000000 		.4byte	0xc8
 1531 0238 00       		.byte	0
 1532 0239 0D       		.uleb128 0xd
 1533 023a 71020000 		.4byte	.LASF30
 1534 023e 01       		.byte	0x1
 1535 023f B501     		.2byte	0x1b5
 1536 0241 6B000000 		.4byte	0x6b
 1537 0245 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 49


 1538 0249 28000000 		.4byte	.LFE11-.LFB11
 1539 024d 01       		.uleb128 0x1
 1540 024e 9C       		.byte	0x9c
 1541 024f 76020000 		.4byte	0x276
 1542 0253 0E       		.uleb128 0xe
 1543 0254 79000000 		.4byte	.LASF28
 1544 0258 01       		.byte	0x1
 1545 0259 B701     		.2byte	0x1b7
 1546 025b 6B000000 		.4byte	0x6b
 1547 025f 44000000 		.4byte	.LLST3
 1548 0263 09       		.uleb128 0x9
 1549 0264 06000000 		.4byte	.LVL16
 1550 0268 4E010000 		.4byte	0x14e
 1551 026c 09       		.uleb128 0x9
 1552 026d 1C000000 		.4byte	.LVL18
 1553 0271 D9000000 		.4byte	0xd9
 1554 0275 00       		.byte	0
 1555 0276 0B       		.uleb128 0xb
 1556 0277 BF010000 		.4byte	.LASF31
 1557 027b 01       		.byte	0x1
 1558 027c EE01     		.2byte	0x1ee
 1559 027e 00000000 		.4byte	.LFB12
 1560 0282 D4000000 		.4byte	.LFE12-.LFB12
 1561 0286 01       		.uleb128 0x1
 1562 0287 9C       		.byte	0x9c
 1563 0288 CF020000 		.4byte	0x2cf
 1564 028c 0F       		.uleb128 0xf
 1565 028d 40050000 		.4byte	.LASF32
 1566 0291 01       		.byte	0x1
 1567 0292 EE01     		.2byte	0x1ee
 1568 0294 6B000000 		.4byte	0x6b
 1569 0298 62000000 		.4byte	.LLST4
 1570 029c 0E       		.uleb128 0xe
 1571 029d F5020000 		.4byte	.LASF33
 1572 02a1 01       		.byte	0x1
 1573 02a2 F201     		.2byte	0x1f2
 1574 02a4 6B000000 		.4byte	0x6b
 1575 02a8 83000000 		.4byte	.LLST5
 1576 02ac 0E       		.uleb128 0xe
 1577 02ad 17010000 		.4byte	.LASF34
 1578 02b1 01       		.byte	0x1
 1579 02b2 F301     		.2byte	0x1f3
 1580 02b4 6B000000 		.4byte	0x6b
 1581 02b8 B4000000 		.4byte	.LLST6
 1582 02bc 09       		.uleb128 0x9
 1583 02bd 24000000 		.4byte	.LVL25
 1584 02c1 3C010000 		.4byte	0x13c
 1585 02c5 09       		.uleb128 0x9
 1586 02c6 B2000000 		.4byte	.LVL31
 1587 02ca C8000000 		.4byte	0xc8
 1588 02ce 00       		.byte	0
 1589 02cf 0D       		.uleb128 0xd
 1590 02d0 39020000 		.4byte	.LASF35
 1591 02d4 01       		.byte	0x1
 1592 02d5 5A02     		.2byte	0x25a
 1593 02d7 6B000000 		.4byte	0x6b
 1594 02db 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 50


 1595 02df 64000000 		.4byte	.LFE13-.LFB13
 1596 02e3 01       		.uleb128 0x1
 1597 02e4 9C       		.byte	0x9c
 1598 02e5 0C030000 		.4byte	0x30c
 1599 02e9 0E       		.uleb128 0xe
 1600 02ea 61040000 		.4byte	.LASF36
 1601 02ee 01       		.byte	0x1
 1602 02ef 5C02     		.2byte	0x25c
 1603 02f1 6B000000 		.4byte	0x6b
 1604 02f5 E8000000 		.4byte	.LLST7
 1605 02f9 09       		.uleb128 0x9
 1606 02fa 06000000 		.4byte	.LVL32
 1607 02fe 4E010000 		.4byte	0x14e
 1608 0302 09       		.uleb128 0x9
 1609 0303 50000000 		.4byte	.LVL34
 1610 0307 D9000000 		.4byte	0xd9
 1611 030b 00       		.byte	0
 1612 030c 0D       		.uleb128 0xd
 1613 030d 8E010000 		.4byte	.LASF37
 1614 0311 01       		.byte	0x1
 1615 0312 9A02     		.2byte	0x29a
 1616 0314 6B000000 		.4byte	0x6b
 1617 0318 00000000 		.4byte	.LFB14
 1618 031c 58000000 		.4byte	.LFE14-.LFB14
 1619 0320 01       		.uleb128 0x1
 1620 0321 9C       		.byte	0x9c
 1621 0322 49030000 		.4byte	0x349
 1622 0326 0E       		.uleb128 0xe
 1623 0327 09020000 		.4byte	.LASF38
 1624 032b 01       		.byte	0x1
 1625 032c 9C02     		.2byte	0x29c
 1626 032e 6B000000 		.4byte	0x6b
 1627 0332 06010000 		.4byte	.LLST8
 1628 0336 09       		.uleb128 0x9
 1629 0337 06000000 		.4byte	.LVL36
 1630 033b 4E010000 		.4byte	0x14e
 1631 033f 09       		.uleb128 0x9
 1632 0340 4A000000 		.4byte	.LVL42
 1633 0344 D9000000 		.4byte	0xd9
 1634 0348 00       		.byte	0
 1635 0349 0D       		.uleb128 0xd
 1636 034a 21020000 		.4byte	.LASF39
 1637 034e 01       		.byte	0x1
 1638 034f D702     		.2byte	0x2d7
 1639 0351 6B000000 		.4byte	0x6b
 1640 0355 00000000 		.4byte	.LFB15
 1641 0359 58000000 		.4byte	.LFE15-.LFB15
 1642 035d 01       		.uleb128 0x1
 1643 035e 9C       		.byte	0x9c
 1644 035f 86030000 		.4byte	0x386
 1645 0363 0E       		.uleb128 0xe
 1646 0364 09020000 		.4byte	.LASF38
 1647 0368 01       		.byte	0x1
 1648 0369 D902     		.2byte	0x2d9
 1649 036b 6B000000 		.4byte	0x6b
 1650 036f 2F010000 		.4byte	.LLST9
 1651 0373 09       		.uleb128 0x9
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 51


 1652 0374 06000000 		.4byte	.LVL44
 1653 0378 3C010000 		.4byte	0x13c
 1654 037c 09       		.uleb128 0x9
 1655 037d 4A000000 		.4byte	.LVL50
 1656 0381 C8000000 		.4byte	0xc8
 1657 0385 00       		.byte	0
 1658 0386 0B       		.uleb128 0xb
 1659 0387 5B010000 		.4byte	.LASF40
 1660 038b 01       		.byte	0x1
 1661 038c 2603     		.2byte	0x326
 1662 038e 00000000 		.4byte	.LFB16
 1663 0392 40000000 		.4byte	.LFE16-.LFB16
 1664 0396 01       		.uleb128 0x1
 1665 0397 9C       		.byte	0x9c
 1666 0398 AF030000 		.4byte	0x3af
 1667 039c 09       		.uleb128 0x9
 1668 039d 16000000 		.4byte	.LVL52
 1669 03a1 4E010000 		.4byte	0x14e
 1670 03a5 09       		.uleb128 0x9
 1671 03a6 28000000 		.4byte	.LVL53
 1672 03aa D9000000 		.4byte	0xd9
 1673 03ae 00       		.byte	0
 1674 03af 0B       		.uleb128 0xb
 1675 03b0 17030000 		.4byte	.LASF41
 1676 03b4 01       		.byte	0x1
 1677 03b5 5D03     		.2byte	0x35d
 1678 03b7 00000000 		.4byte	.LFB17
 1679 03bb 54000000 		.4byte	.LFE17-.LFB17
 1680 03bf 01       		.uleb128 0x1
 1681 03c0 9C       		.byte	0x9c
 1682 03c1 FA030000 		.4byte	0x3fa
 1683 03c5 0E       		.uleb128 0xe
 1684 03c6 BE040000 		.4byte	.LASF24
 1685 03ca 01       		.byte	0x1
 1686 03cb 5F03     		.2byte	0x35f
 1687 03cd 6B000000 		.4byte	0x6b
 1688 03d1 58010000 		.4byte	.LLST10
 1689 03d5 09       		.uleb128 0x9
 1690 03d6 06000000 		.4byte	.LVL54
 1691 03da C6060000 		.4byte	0x6c6
 1692 03de 09       		.uleb128 0x9
 1693 03df 1C000000 		.4byte	.LVL55
 1694 03e3 D1060000 		.4byte	0x6d1
 1695 03e7 09       		.uleb128 0x9
 1696 03e8 20000000 		.4byte	.LVL56
 1697 03ec 3C010000 		.4byte	0x13c
 1698 03f0 09       		.uleb128 0x9
 1699 03f1 3C000000 		.4byte	.LVL57
 1700 03f5 C8000000 		.4byte	0xc8
 1701 03f9 00       		.byte	0
 1702 03fa 0B       		.uleb128 0xb
 1703 03fb 32030000 		.4byte	.LASF42
 1704 03ff 01       		.byte	0x1
 1705 0400 C203     		.2byte	0x3c2
 1706 0402 00000000 		.4byte	.LFB18
 1707 0406 1E000000 		.4byte	.LFE18-.LFB18
 1708 040a 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 52


 1709 040b 9C       		.byte	0x9c
 1710 040c 4A040000 		.4byte	0x44a
 1711 0410 0F       		.uleb128 0xf
 1712 0411 B7040000 		.4byte	.LASF43
 1713 0415 01       		.byte	0x1
 1714 0416 C203     		.2byte	0x3c2
 1715 0418 4A040000 		.4byte	0x44a
 1716 041c 6B010000 		.4byte	.LLST11
 1717 0420 0F       		.uleb128 0xf
 1718 0421 46040000 		.4byte	.LASF44
 1719 0425 01       		.byte	0x1
 1720 0426 C203     		.2byte	0x3c2
 1721 0428 6B000000 		.4byte	0x6b
 1722 042c 89010000 		.4byte	.LLST12
 1723 0430 0E       		.uleb128 0xe
 1724 0431 5B020000 		.4byte	.LASF45
 1725 0435 01       		.byte	0x1
 1726 0436 C503     		.2byte	0x3c5
 1727 0438 6B000000 		.4byte	0x6b
 1728 043c B2010000 		.4byte	.LLST13
 1729 0440 09       		.uleb128 0x9
 1730 0441 10000000 		.4byte	.LVL61
 1731 0445 76020000 		.4byte	0x276
 1732 0449 00       		.byte	0
 1733 044a 10       		.uleb128 0x10
 1734 044b 04       		.byte	0x4
 1735 044c 50040000 		.4byte	0x450
 1736 0450 11       		.uleb128 0x11
 1737 0451 6B000000 		.4byte	0x6b
 1738 0455 0B       		.uleb128 0xb
 1739 0456 AD010000 		.4byte	.LASF46
 1740 045a 01       		.byte	0x1
 1741 045b E303     		.2byte	0x3e3
 1742 045d 00000000 		.4byte	.LFB19
 1743 0461 3C000000 		.4byte	.LFE19-.LFB19
 1744 0465 01       		.uleb128 0x1
 1745 0466 9C       		.byte	0x9c
 1746 0467 8E040000 		.4byte	0x48e
 1747 046b 0E       		.uleb128 0xe
 1748 046c BE040000 		.4byte	.LASF24
 1749 0470 01       		.byte	0x1
 1750 0471 E503     		.2byte	0x3e5
 1751 0473 6B000000 		.4byte	0x6b
 1752 0477 DC010000 		.4byte	.LLST14
 1753 047b 09       		.uleb128 0x9
 1754 047c 16000000 		.4byte	.LVL66
 1755 0480 C6060000 		.4byte	0x6c6
 1756 0484 09       		.uleb128 0x9
 1757 0485 2C000000 		.4byte	.LVL67
 1758 0489 D1060000 		.4byte	0x6d1
 1759 048d 00       		.byte	0
 1760 048e 07       		.uleb128 0x7
 1761 048f 86020000 		.4byte	.LASF47
 1762 0493 01       		.byte	0x1
 1763 0494 3F       		.byte	0x3f
 1764 0495 00000000 		.4byte	.LFB0
 1765 0499 90000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 53


 1766 049d 01       		.uleb128 0x1
 1767 049e 9C       		.byte	0x9c
 1768 049f 15050000 		.4byte	0x515
 1769 04a3 12       		.uleb128 0x12
 1770 04a4 16000000 		.4byte	.LVL68
 1771 04a8 F2060000 		.4byte	0x6f2
 1772 04ac BB040000 		.4byte	0x4bb
 1773 04b0 13       		.uleb128 0x13
 1774 04b1 01       		.uleb128 0x1
 1775 04b2 50       		.byte	0x50
 1776 04b3 01       		.uleb128 0x1
 1777 04b4 33       		.byte	0x33
 1778 04b5 13       		.uleb128 0x13
 1779 04b6 01       		.uleb128 0x1
 1780 04b7 51       		.byte	0x51
 1781 04b8 01       		.uleb128 0x1
 1782 04b9 34       		.byte	0x34
 1783 04ba 00       		.byte	0
 1784 04bb 12       		.uleb128 0x12
 1785 04bc 1E000000 		.4byte	.LVL69
 1786 04c0 FD060000 		.4byte	0x6fd
 1787 04c4 CE040000 		.4byte	0x4ce
 1788 04c8 13       		.uleb128 0x13
 1789 04c9 01       		.uleb128 0x1
 1790 04ca 50       		.byte	0x50
 1791 04cb 01       		.uleb128 0x1
 1792 04cc 33       		.byte	0x33
 1793 04cd 00       		.byte	0
 1794 04ce 12       		.uleb128 0x12
 1795 04cf 28000000 		.4byte	.LVL70
 1796 04d3 F2060000 		.4byte	0x6f2
 1797 04d7 E6040000 		.4byte	0x4e6
 1798 04db 13       		.uleb128 0x13
 1799 04dc 01       		.uleb128 0x1
 1800 04dd 50       		.byte	0x50
 1801 04de 01       		.uleb128 0x1
 1802 04df 32       		.byte	0x32
 1803 04e0 13       		.uleb128 0x13
 1804 04e1 01       		.uleb128 0x1
 1805 04e2 51       		.byte	0x51
 1806 04e3 01       		.uleb128 0x1
 1807 04e4 34       		.byte	0x34
 1808 04e5 00       		.byte	0
 1809 04e6 12       		.uleb128 0x12
 1810 04e7 30000000 		.4byte	.LVL71
 1811 04eb FD060000 		.4byte	0x6fd
 1812 04ef F9040000 		.4byte	0x4f9
 1813 04f3 13       		.uleb128 0x13
 1814 04f4 01       		.uleb128 0x1
 1815 04f5 50       		.byte	0x50
 1816 04f6 01       		.uleb128 0x1
 1817 04f7 32       		.byte	0x32
 1818 04f8 00       		.byte	0
 1819 04f9 09       		.uleb128 0x9
 1820 04fa 34000000 		.4byte	.LVL72
 1821 04fe 55040000 		.4byte	0x455
 1822 0502 09       		.uleb128 0x9
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 54


 1823 0503 52000000 		.4byte	.LVL73
 1824 0507 FC010000 		.4byte	0x1fc
 1825 050b 09       		.uleb128 0x9
 1826 050c 56000000 		.4byte	.LVL74
 1827 0510 39020000 		.4byte	0x239
 1828 0514 00       		.byte	0
 1829 0515 07       		.uleb128 0x7
 1830 0516 AD000000 		.4byte	.LASF48
 1831 051a 01       		.byte	0x1
 1832 051b A3       		.byte	0xa3
 1833 051c 00000000 		.4byte	.LFB2
 1834 0520 1C000000 		.4byte	.LFE2-.LFB2
 1835 0524 01       		.uleb128 0x1
 1836 0525 9C       		.byte	0x9c
 1837 0526 3D050000 		.4byte	0x53d
 1838 052a 09       		.uleb128 0x9
 1839 052b 0C000000 		.4byte	.LVL75
 1840 052f 8E040000 		.4byte	0x48e
 1841 0533 09       		.uleb128 0x9
 1842 0534 16000000 		.4byte	.LVL76
 1843 0538 EA000000 		.4byte	0xea
 1844 053c 00       		.byte	0
 1845 053d 0B       		.uleb128 0xb
 1846 053e BB000000 		.4byte	.LASF49
 1847 0542 01       		.byte	0x1
 1848 0543 1104     		.2byte	0x411
 1849 0545 00000000 		.4byte	.LFB20
 1850 0549 0C000000 		.4byte	.LFE20-.LFB20
 1851 054d 01       		.uleb128 0x1
 1852 054e 9C       		.byte	0x9c
 1853 054f 66050000 		.4byte	0x566
 1854 0553 09       		.uleb128 0x9
 1855 0554 06000000 		.4byte	.LVL77
 1856 0558 D9000000 		.4byte	0xd9
 1857 055c 09       		.uleb128 0x9
 1858 055d 0A000000 		.4byte	.LVL78
 1859 0561 C8000000 		.4byte	0xc8
 1860 0565 00       		.byte	0
 1861 0566 0B       		.uleb128 0xb
 1862 0567 2D050000 		.4byte	.LASF50
 1863 056b 01       		.byte	0x1
 1864 056c 2904     		.2byte	0x429
 1865 056e 00000000 		.4byte	.LFB21
 1866 0572 0C000000 		.4byte	.LFE21-.LFB21
 1867 0576 01       		.uleb128 0x1
 1868 0577 9C       		.byte	0x9c
 1869 0578 8F050000 		.4byte	0x58f
 1870 057c 09       		.uleb128 0x9
 1871 057d 06000000 		.4byte	.LVL79
 1872 0581 3C010000 		.4byte	0x13c
 1873 0585 09       		.uleb128 0x9
 1874 0586 0A000000 		.4byte	.LVL80
 1875 058a 4E010000 		.4byte	0x14e
 1876 058e 00       		.byte	0
 1877 058f 0B       		.uleb128 0xb
 1878 0590 E4040000 		.4byte	.LASF51
 1879 0594 01       		.byte	0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 55


 1880 0595 4204     		.2byte	0x442
 1881 0597 00000000 		.4byte	.LFB22
 1882 059b 14000000 		.4byte	.LFE22-.LFB22
 1883 059f 01       		.uleb128 0x1
 1884 05a0 9C       		.byte	0x9c
 1885 05a1 B4050000 		.4byte	0x5b4
 1886 05a5 0C       		.uleb128 0xc
 1887 05a6 64020000 		.4byte	.LASF27
 1888 05aa 01       		.byte	0x1
 1889 05ab 4204     		.2byte	0x442
 1890 05ad 6B000000 		.4byte	0x6b
 1891 05b1 01       		.uleb128 0x1
 1892 05b2 50       		.byte	0x50
 1893 05b3 00       		.byte	0
 1894 05b4 0D       		.uleb128 0xd
 1895 05b5 BB020000 		.4byte	.LASF52
 1896 05b9 01       		.byte	0x1
 1897 05ba 6504     		.2byte	0x465
 1898 05bc 6B000000 		.4byte	0x6b
 1899 05c0 00000000 		.4byte	.LFB23
 1900 05c4 48000000 		.4byte	.LFE23-.LFB23
 1901 05c8 01       		.uleb128 0x1
 1902 05c9 9C       		.byte	0x9c
 1903 05ca F1050000 		.4byte	0x5f1
 1904 05ce 0E       		.uleb128 0xe
 1905 05cf 79000000 		.4byte	.LASF28
 1906 05d3 01       		.byte	0x1
 1907 05d4 6704     		.2byte	0x467
 1908 05d6 6B000000 		.4byte	0x6b
 1909 05da EF010000 		.4byte	.LLST15
 1910 05de 09       		.uleb128 0x9
 1911 05df 06000000 		.4byte	.LVL82
 1912 05e3 66050000 		.4byte	0x566
 1913 05e7 09       		.uleb128 0x9
 1914 05e8 32000000 		.4byte	.LVL86
 1915 05ec 3D050000 		.4byte	0x53d
 1916 05f0 00       		.byte	0
 1917 05f1 14       		.uleb128 0x14
 1918 05f2 83000000 		.4byte	.LASF53
 1919 05f6 01       		.byte	0x1
 1920 05f7 22       		.byte	0x22
 1921 05f8 6B000000 		.4byte	0x6b
 1922 05fc 05       		.uleb128 0x5
 1923 05fd 03       		.byte	0x3
 1924 05fe 00000000 		.4byte	SPI_ADC_initVar
 1925 0602 14       		.uleb128 0x14
 1926 0603 93020000 		.4byte	.LASF54
 1927 0607 01       		.byte	0x1
 1928 0608 24       		.byte	0x24
 1929 0609 A4000000 		.4byte	0xa4
 1930 060d 05       		.uleb128 0x5
 1931 060e 03       		.byte	0x3
 1932 060f 00000000 		.4byte	SPI_ADC_swStatusTx
 1933 0613 14       		.uleb128 0x14
 1934 0614 48010000 		.4byte	.LASF55
 1935 0618 01       		.byte	0x1
 1936 0619 25       		.byte	0x25
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 56


 1937 061a A4000000 		.4byte	0xa4
 1938 061e 05       		.uleb128 0x5
 1939 061f 03       		.byte	0x3
 1940 0620 00000000 		.4byte	SPI_ADC_swStatusRx
 1941 0624 15       		.uleb128 0x15
 1942 0625 A4000000 		.4byte	0xa4
 1943 0629 34060000 		.4byte	0x634
 1944 062d 16       		.uleb128 0x16
 1945 062e C1000000 		.4byte	0xc1
 1946 0632 1A       		.byte	0x1a
 1947 0633 00       		.byte	0
 1948 0634 14       		.uleb128 0x14
 1949 0635 E4020000 		.4byte	.LASF56
 1950 0639 01       		.byte	0x1
 1951 063a 15       		.byte	0x15
 1952 063b 45060000 		.4byte	0x645
 1953 063f 05       		.uleb128 0x5
 1954 0640 03       		.byte	0x3
 1955 0641 00000000 		.4byte	SPI_ADC_txBuffer
 1956 0645 05       		.uleb128 0x5
 1957 0646 24060000 		.4byte	0x624
 1958 064a 14       		.uleb128 0x14
 1959 064b CF040000 		.4byte	.LASF57
 1960 064f 01       		.byte	0x1
 1961 0650 17       		.byte	0x17
 1962 0651 A4000000 		.4byte	0xa4
 1963 0655 05       		.uleb128 0x5
 1964 0656 03       		.byte	0x3
 1965 0657 00000000 		.4byte	SPI_ADC_txBufferRead
 1966 065b 14       		.uleb128 0x14
 1967 065c 2B000000 		.4byte	.LASF58
 1968 0660 01       		.byte	0x1
 1969 0661 18       		.byte	0x18
 1970 0662 A4000000 		.4byte	0xa4
 1971 0666 05       		.uleb128 0x5
 1972 0667 03       		.byte	0x3
 1973 0668 00000000 		.4byte	SPI_ADC_txBufferWrite
 1974 066c 14       		.uleb128 0x14
 1975 066d 8E040000 		.4byte	.LASF59
 1976 0671 01       		.byte	0x1
 1977 0672 16       		.byte	0x16
 1978 0673 A4000000 		.4byte	0xa4
 1979 0677 05       		.uleb128 0x5
 1980 0678 03       		.byte	0x3
 1981 0679 00000000 		.4byte	SPI_ADC_txBufferFull
 1982 067d 14       		.uleb128 0x14
 1983 067e 50040000 		.4byte	.LASF60
 1984 0682 01       		.byte	0x1
 1985 0683 1C       		.byte	0x1c
 1986 0684 8E060000 		.4byte	0x68e
 1987 0688 05       		.uleb128 0x5
 1988 0689 03       		.byte	0x3
 1989 068a 00000000 		.4byte	SPI_ADC_rxBuffer
 1990 068e 05       		.uleb128 0x5
 1991 068f 24060000 		.4byte	0x624
 1992 0693 14       		.uleb128 0x14
 1993 0694 51030000 		.4byte	.LASF61
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 57


 1994 0698 01       		.byte	0x1
 1995 0699 1E       		.byte	0x1e
 1996 069a A4000000 		.4byte	0xa4
 1997 069e 05       		.uleb128 0x5
 1998 069f 03       		.byte	0x3
 1999 06a0 00000000 		.4byte	SPI_ADC_rxBufferRead
 2000 06a4 14       		.uleb128 0x14
 2001 06a5 78010000 		.4byte	.LASF62
 2002 06a9 01       		.byte	0x1
 2003 06aa 1F       		.byte	0x1f
 2004 06ab A4000000 		.4byte	0xa4
 2005 06af 05       		.uleb128 0x5
 2006 06b0 03       		.byte	0x3
 2007 06b1 00000000 		.4byte	SPI_ADC_rxBufferWrite
 2008 06b5 14       		.uleb128 0x14
 2009 06b6 16000000 		.4byte	.LASF63
 2010 06ba 01       		.byte	0x1
 2011 06bb 1D       		.byte	0x1d
 2012 06bc A4000000 		.4byte	0xa4
 2013 06c0 05       		.uleb128 0x5
 2014 06c1 03       		.byte	0x3
 2015 06c2 00000000 		.4byte	SPI_ADC_rxBufferFull
 2016 06c6 17       		.uleb128 0x17
 2017 06c7 F2010000 		.4byte	.LASF64
 2018 06cb F2010000 		.4byte	.LASF64
 2019 06cf 03       		.byte	0x3
 2020 06d0 7D       		.byte	0x7d
 2021 06d1 17       		.uleb128 0x17
 2022 06d2 00000000 		.4byte	.LASF65
 2023 06d6 00000000 		.4byte	.LASF65
 2024 06da 03       		.byte	0x3
 2025 06db 7E       		.byte	0x7e
 2026 06dc 17       		.uleb128 0x17
 2027 06dd 00010000 		.4byte	.LASF66
 2028 06e1 00010000 		.4byte	.LASF66
 2029 06e5 04       		.byte	0x4
 2030 06e6 27       		.byte	0x27
 2031 06e7 17       		.uleb128 0x17
 2032 06e8 CE020000 		.4byte	.LASF67
 2033 06ec CE020000 		.4byte	.LASF67
 2034 06f0 04       		.byte	0x4
 2035 06f1 28       		.byte	0x28
 2036 06f2 17       		.uleb128 0x17
 2037 06f3 00030000 		.4byte	.LASF68
 2038 06f7 00030000 		.4byte	.LASF68
 2039 06fb 03       		.byte	0x3
 2040 06fc 8B       		.byte	0x8b
 2041 06fd 17       		.uleb128 0x17
 2042 06fe 4C020000 		.4byte	.LASF69
 2043 0702 4C020000 		.4byte	.LASF69
 2044 0706 03       		.byte	0x3
 2045 0707 88       		.byte	0x88
 2046 0708 00       		.byte	0
 2047              		.section	.debug_abbrev,"",%progbits
 2048              	.Ldebug_abbrev0:
 2049 0000 01       		.uleb128 0x1
 2050 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 58


 2051 0002 01       		.byte	0x1
 2052 0003 25       		.uleb128 0x25
 2053 0004 0E       		.uleb128 0xe
 2054 0005 13       		.uleb128 0x13
 2055 0006 0B       		.uleb128 0xb
 2056 0007 03       		.uleb128 0x3
 2057 0008 0E       		.uleb128 0xe
 2058 0009 1B       		.uleb128 0x1b
 2059 000a 0E       		.uleb128 0xe
 2060 000b 55       		.uleb128 0x55
 2061 000c 17       		.uleb128 0x17
 2062 000d 11       		.uleb128 0x11
 2063 000e 01       		.uleb128 0x1
 2064 000f 10       		.uleb128 0x10
 2065 0010 17       		.uleb128 0x17
 2066 0011 00       		.byte	0
 2067 0012 00       		.byte	0
 2068 0013 02       		.uleb128 0x2
 2069 0014 24       		.uleb128 0x24
 2070 0015 00       		.byte	0
 2071 0016 0B       		.uleb128 0xb
 2072 0017 0B       		.uleb128 0xb
 2073 0018 3E       		.uleb128 0x3e
 2074 0019 0B       		.uleb128 0xb
 2075 001a 03       		.uleb128 0x3
 2076 001b 0E       		.uleb128 0xe
 2077 001c 00       		.byte	0
 2078 001d 00       		.byte	0
 2079 001e 03       		.uleb128 0x3
 2080 001f 24       		.uleb128 0x24
 2081 0020 00       		.byte	0
 2082 0021 0B       		.uleb128 0xb
 2083 0022 0B       		.uleb128 0xb
 2084 0023 3E       		.uleb128 0x3e
 2085 0024 0B       		.uleb128 0xb
 2086 0025 03       		.uleb128 0x3
 2087 0026 08       		.uleb128 0x8
 2088 0027 00       		.byte	0
 2089 0028 00       		.byte	0
 2090 0029 04       		.uleb128 0x4
 2091 002a 16       		.uleb128 0x16
 2092 002b 00       		.byte	0
 2093 002c 03       		.uleb128 0x3
 2094 002d 0E       		.uleb128 0xe
 2095 002e 3A       		.uleb128 0x3a
 2096 002f 0B       		.uleb128 0xb
 2097 0030 3B       		.uleb128 0x3b
 2098 0031 05       		.uleb128 0x5
 2099 0032 49       		.uleb128 0x49
 2100 0033 13       		.uleb128 0x13
 2101 0034 00       		.byte	0
 2102 0035 00       		.byte	0
 2103 0036 05       		.uleb128 0x5
 2104 0037 35       		.uleb128 0x35
 2105 0038 00       		.byte	0
 2106 0039 49       		.uleb128 0x49
 2107 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 59


 2108 003b 00       		.byte	0
 2109 003c 00       		.byte	0
 2110 003d 06       		.uleb128 0x6
 2111 003e 2E       		.uleb128 0x2e
 2112 003f 00       		.byte	0
 2113 0040 3F       		.uleb128 0x3f
 2114 0041 19       		.uleb128 0x19
 2115 0042 03       		.uleb128 0x3
 2116 0043 0E       		.uleb128 0xe
 2117 0044 3A       		.uleb128 0x3a
 2118 0045 0B       		.uleb128 0xb
 2119 0046 3B       		.uleb128 0x3b
 2120 0047 0B       		.uleb128 0xb
 2121 0048 27       		.uleb128 0x27
 2122 0049 19       		.uleb128 0x19
 2123 004a 11       		.uleb128 0x11
 2124 004b 01       		.uleb128 0x1
 2125 004c 12       		.uleb128 0x12
 2126 004d 06       		.uleb128 0x6
 2127 004e 40       		.uleb128 0x40
 2128 004f 18       		.uleb128 0x18
 2129 0050 9742     		.uleb128 0x2117
 2130 0052 19       		.uleb128 0x19
 2131 0053 00       		.byte	0
 2132 0054 00       		.byte	0
 2133 0055 07       		.uleb128 0x7
 2134 0056 2E       		.uleb128 0x2e
 2135 0057 01       		.byte	0x1
 2136 0058 3F       		.uleb128 0x3f
 2137 0059 19       		.uleb128 0x19
 2138 005a 03       		.uleb128 0x3
 2139 005b 0E       		.uleb128 0xe
 2140 005c 3A       		.uleb128 0x3a
 2141 005d 0B       		.uleb128 0xb
 2142 005e 3B       		.uleb128 0x3b
 2143 005f 0B       		.uleb128 0xb
 2144 0060 27       		.uleb128 0x27
 2145 0061 19       		.uleb128 0x19
 2146 0062 11       		.uleb128 0x11
 2147 0063 01       		.uleb128 0x1
 2148 0064 12       		.uleb128 0x12
 2149 0065 06       		.uleb128 0x6
 2150 0066 40       		.uleb128 0x40
 2151 0067 18       		.uleb128 0x18
 2152 0068 9742     		.uleb128 0x2117
 2153 006a 19       		.uleb128 0x19
 2154 006b 01       		.uleb128 0x1
 2155 006c 13       		.uleb128 0x13
 2156 006d 00       		.byte	0
 2157 006e 00       		.byte	0
 2158 006f 08       		.uleb128 0x8
 2159 0070 34       		.uleb128 0x34
 2160 0071 00       		.byte	0
 2161 0072 03       		.uleb128 0x3
 2162 0073 0E       		.uleb128 0xe
 2163 0074 3A       		.uleb128 0x3a
 2164 0075 0B       		.uleb128 0xb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 60


 2165 0076 3B       		.uleb128 0x3b
 2166 0077 0B       		.uleb128 0xb
 2167 0078 49       		.uleb128 0x49
 2168 0079 13       		.uleb128 0x13
 2169 007a 02       		.uleb128 0x2
 2170 007b 17       		.uleb128 0x17
 2171 007c 00       		.byte	0
 2172 007d 00       		.byte	0
 2173 007e 09       		.uleb128 0x9
 2174 007f 898201   		.uleb128 0x4109
 2175 0082 00       		.byte	0
 2176 0083 11       		.uleb128 0x11
 2177 0084 01       		.uleb128 0x1
 2178 0085 31       		.uleb128 0x31
 2179 0086 13       		.uleb128 0x13
 2180 0087 00       		.byte	0
 2181 0088 00       		.byte	0
 2182 0089 0A       		.uleb128 0xa
 2183 008a 2E       		.uleb128 0x2e
 2184 008b 00       		.byte	0
 2185 008c 3F       		.uleb128 0x3f
 2186 008d 19       		.uleb128 0x19
 2187 008e 03       		.uleb128 0x3
 2188 008f 0E       		.uleb128 0xe
 2189 0090 3A       		.uleb128 0x3a
 2190 0091 0B       		.uleb128 0xb
 2191 0092 3B       		.uleb128 0x3b
 2192 0093 05       		.uleb128 0x5
 2193 0094 27       		.uleb128 0x27
 2194 0095 19       		.uleb128 0x19
 2195 0096 11       		.uleb128 0x11
 2196 0097 01       		.uleb128 0x1
 2197 0098 12       		.uleb128 0x12
 2198 0099 06       		.uleb128 0x6
 2199 009a 40       		.uleb128 0x40
 2200 009b 18       		.uleb128 0x18
 2201 009c 9742     		.uleb128 0x2117
 2202 009e 19       		.uleb128 0x19
 2203 009f 00       		.byte	0
 2204 00a0 00       		.byte	0
 2205 00a1 0B       		.uleb128 0xb
 2206 00a2 2E       		.uleb128 0x2e
 2207 00a3 01       		.byte	0x1
 2208 00a4 3F       		.uleb128 0x3f
 2209 00a5 19       		.uleb128 0x19
 2210 00a6 03       		.uleb128 0x3
 2211 00a7 0E       		.uleb128 0xe
 2212 00a8 3A       		.uleb128 0x3a
 2213 00a9 0B       		.uleb128 0xb
 2214 00aa 3B       		.uleb128 0x3b
 2215 00ab 05       		.uleb128 0x5
 2216 00ac 27       		.uleb128 0x27
 2217 00ad 19       		.uleb128 0x19
 2218 00ae 11       		.uleb128 0x11
 2219 00af 01       		.uleb128 0x1
 2220 00b0 12       		.uleb128 0x12
 2221 00b1 06       		.uleb128 0x6
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 61


 2222 00b2 40       		.uleb128 0x40
 2223 00b3 18       		.uleb128 0x18
 2224 00b4 9742     		.uleb128 0x2117
 2225 00b6 19       		.uleb128 0x19
 2226 00b7 01       		.uleb128 0x1
 2227 00b8 13       		.uleb128 0x13
 2228 00b9 00       		.byte	0
 2229 00ba 00       		.byte	0
 2230 00bb 0C       		.uleb128 0xc
 2231 00bc 05       		.uleb128 0x5
 2232 00bd 00       		.byte	0
 2233 00be 03       		.uleb128 0x3
 2234 00bf 0E       		.uleb128 0xe
 2235 00c0 3A       		.uleb128 0x3a
 2236 00c1 0B       		.uleb128 0xb
 2237 00c2 3B       		.uleb128 0x3b
 2238 00c3 05       		.uleb128 0x5
 2239 00c4 49       		.uleb128 0x49
 2240 00c5 13       		.uleb128 0x13
 2241 00c6 02       		.uleb128 0x2
 2242 00c7 18       		.uleb128 0x18
 2243 00c8 00       		.byte	0
 2244 00c9 00       		.byte	0
 2245 00ca 0D       		.uleb128 0xd
 2246 00cb 2E       		.uleb128 0x2e
 2247 00cc 01       		.byte	0x1
 2248 00cd 3F       		.uleb128 0x3f
 2249 00ce 19       		.uleb128 0x19
 2250 00cf 03       		.uleb128 0x3
 2251 00d0 0E       		.uleb128 0xe
 2252 00d1 3A       		.uleb128 0x3a
 2253 00d2 0B       		.uleb128 0xb
 2254 00d3 3B       		.uleb128 0x3b
 2255 00d4 05       		.uleb128 0x5
 2256 00d5 27       		.uleb128 0x27
 2257 00d6 19       		.uleb128 0x19
 2258 00d7 49       		.uleb128 0x49
 2259 00d8 13       		.uleb128 0x13
 2260 00d9 11       		.uleb128 0x11
 2261 00da 01       		.uleb128 0x1
 2262 00db 12       		.uleb128 0x12
 2263 00dc 06       		.uleb128 0x6
 2264 00dd 40       		.uleb128 0x40
 2265 00de 18       		.uleb128 0x18
 2266 00df 9742     		.uleb128 0x2117
 2267 00e1 19       		.uleb128 0x19
 2268 00e2 01       		.uleb128 0x1
 2269 00e3 13       		.uleb128 0x13
 2270 00e4 00       		.byte	0
 2271 00e5 00       		.byte	0
 2272 00e6 0E       		.uleb128 0xe
 2273 00e7 34       		.uleb128 0x34
 2274 00e8 00       		.byte	0
 2275 00e9 03       		.uleb128 0x3
 2276 00ea 0E       		.uleb128 0xe
 2277 00eb 3A       		.uleb128 0x3a
 2278 00ec 0B       		.uleb128 0xb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 62


 2279 00ed 3B       		.uleb128 0x3b
 2280 00ee 05       		.uleb128 0x5
 2281 00ef 49       		.uleb128 0x49
 2282 00f0 13       		.uleb128 0x13
 2283 00f1 02       		.uleb128 0x2
 2284 00f2 17       		.uleb128 0x17
 2285 00f3 00       		.byte	0
 2286 00f4 00       		.byte	0
 2287 00f5 0F       		.uleb128 0xf
 2288 00f6 05       		.uleb128 0x5
 2289 00f7 00       		.byte	0
 2290 00f8 03       		.uleb128 0x3
 2291 00f9 0E       		.uleb128 0xe
 2292 00fa 3A       		.uleb128 0x3a
 2293 00fb 0B       		.uleb128 0xb
 2294 00fc 3B       		.uleb128 0x3b
 2295 00fd 05       		.uleb128 0x5
 2296 00fe 49       		.uleb128 0x49
 2297 00ff 13       		.uleb128 0x13
 2298 0100 02       		.uleb128 0x2
 2299 0101 17       		.uleb128 0x17
 2300 0102 00       		.byte	0
 2301 0103 00       		.byte	0
 2302 0104 10       		.uleb128 0x10
 2303 0105 0F       		.uleb128 0xf
 2304 0106 00       		.byte	0
 2305 0107 0B       		.uleb128 0xb
 2306 0108 0B       		.uleb128 0xb
 2307 0109 49       		.uleb128 0x49
 2308 010a 13       		.uleb128 0x13
 2309 010b 00       		.byte	0
 2310 010c 00       		.byte	0
 2311 010d 11       		.uleb128 0x11
 2312 010e 26       		.uleb128 0x26
 2313 010f 00       		.byte	0
 2314 0110 49       		.uleb128 0x49
 2315 0111 13       		.uleb128 0x13
 2316 0112 00       		.byte	0
 2317 0113 00       		.byte	0
 2318 0114 12       		.uleb128 0x12
 2319 0115 898201   		.uleb128 0x4109
 2320 0118 01       		.byte	0x1
 2321 0119 11       		.uleb128 0x11
 2322 011a 01       		.uleb128 0x1
 2323 011b 31       		.uleb128 0x31
 2324 011c 13       		.uleb128 0x13
 2325 011d 01       		.uleb128 0x1
 2326 011e 13       		.uleb128 0x13
 2327 011f 00       		.byte	0
 2328 0120 00       		.byte	0
 2329 0121 13       		.uleb128 0x13
 2330 0122 8A8201   		.uleb128 0x410a
 2331 0125 00       		.byte	0
 2332 0126 02       		.uleb128 0x2
 2333 0127 18       		.uleb128 0x18
 2334 0128 9142     		.uleb128 0x2111
 2335 012a 18       		.uleb128 0x18
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 63


 2336 012b 00       		.byte	0
 2337 012c 00       		.byte	0
 2338 012d 14       		.uleb128 0x14
 2339 012e 34       		.uleb128 0x34
 2340 012f 00       		.byte	0
 2341 0130 03       		.uleb128 0x3
 2342 0131 0E       		.uleb128 0xe
 2343 0132 3A       		.uleb128 0x3a
 2344 0133 0B       		.uleb128 0xb
 2345 0134 3B       		.uleb128 0x3b
 2346 0135 0B       		.uleb128 0xb
 2347 0136 49       		.uleb128 0x49
 2348 0137 13       		.uleb128 0x13
 2349 0138 3F       		.uleb128 0x3f
 2350 0139 19       		.uleb128 0x19
 2351 013a 02       		.uleb128 0x2
 2352 013b 18       		.uleb128 0x18
 2353 013c 00       		.byte	0
 2354 013d 00       		.byte	0
 2355 013e 15       		.uleb128 0x15
 2356 013f 01       		.uleb128 0x1
 2357 0140 01       		.byte	0x1
 2358 0141 49       		.uleb128 0x49
 2359 0142 13       		.uleb128 0x13
 2360 0143 01       		.uleb128 0x1
 2361 0144 13       		.uleb128 0x13
 2362 0145 00       		.byte	0
 2363 0146 00       		.byte	0
 2364 0147 16       		.uleb128 0x16
 2365 0148 21       		.uleb128 0x21
 2366 0149 00       		.byte	0
 2367 014a 49       		.uleb128 0x49
 2368 014b 13       		.uleb128 0x13
 2369 014c 2F       		.uleb128 0x2f
 2370 014d 0B       		.uleb128 0xb
 2371 014e 00       		.byte	0
 2372 014f 00       		.byte	0
 2373 0150 17       		.uleb128 0x17
 2374 0151 2E       		.uleb128 0x2e
 2375 0152 00       		.byte	0
 2376 0153 3F       		.uleb128 0x3f
 2377 0154 19       		.uleb128 0x19
 2378 0155 3C       		.uleb128 0x3c
 2379 0156 19       		.uleb128 0x19
 2380 0157 6E       		.uleb128 0x6e
 2381 0158 0E       		.uleb128 0xe
 2382 0159 03       		.uleb128 0x3
 2383 015a 0E       		.uleb128 0xe
 2384 015b 3A       		.uleb128 0x3a
 2385 015c 0B       		.uleb128 0xb
 2386 015d 3B       		.uleb128 0x3b
 2387 015e 0B       		.uleb128 0xb
 2388 015f 00       		.byte	0
 2389 0160 00       		.byte	0
 2390 0161 00       		.byte	0
 2391              		.section	.debug_loc,"",%progbits
 2392              	.Ldebug_loc0:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 64


 2393              	.LLST0:
 2394 0000 06000000 		.4byte	.LVL0
 2395 0004 29000000 		.4byte	.LVL1-1
 2396 0008 0100     		.2byte	0x1
 2397 000a 50       		.byte	0x50
 2398 000b 00000000 		.4byte	0
 2399 000f 00000000 		.4byte	0
 2400              	.LLST1:
 2401 0013 06000000 		.4byte	.LVL5
 2402 0017 1F000000 		.4byte	.LVL6-1
 2403 001b 0100     		.2byte	0x1
 2404 001d 50       		.byte	0x50
 2405 001e 00000000 		.4byte	0
 2406 0022 00000000 		.4byte	0
 2407              	.LLST2:
 2408 0026 14000000 		.4byte	.LVL13
 2409 002a 20000000 		.4byte	.LVL15
 2410 002e 0100     		.2byte	0x1
 2411 0030 54       		.byte	0x54
 2412 0031 20000000 		.4byte	.LVL15
 2413 0035 28000000 		.4byte	.LFE10
 2414 0039 0100     		.2byte	0x1
 2415 003b 50       		.byte	0x50
 2416 003c 00000000 		.4byte	0
 2417 0040 00000000 		.4byte	0
 2418              	.LLST3:
 2419 0044 14000000 		.4byte	.LVL17
 2420 0048 20000000 		.4byte	.LVL19
 2421 004c 0100     		.2byte	0x1
 2422 004e 54       		.byte	0x54
 2423 004f 20000000 		.4byte	.LVL19
 2424 0053 28000000 		.4byte	.LFE11
 2425 0057 0100     		.2byte	0x1
 2426 0059 50       		.byte	0x50
 2427 005a 00000000 		.4byte	0
 2428 005e 00000000 		.4byte	0
 2429              	.LLST4:
 2430 0062 00000000 		.4byte	.LVL20
 2431 0066 23000000 		.4byte	.LVL25-1
 2432 006a 0100     		.2byte	0x1
 2433 006c 50       		.byte	0x50
 2434 006d 23000000 		.4byte	.LVL25-1
 2435 0071 D4000000 		.4byte	.LFE12
 2436 0075 0400     		.2byte	0x4
 2437 0077 F3       		.byte	0xf3
 2438 0078 01       		.uleb128 0x1
 2439 0079 50       		.byte	0x50
 2440 007a 9F       		.byte	0x9f
 2441 007b 00000000 		.4byte	0
 2442 007f 00000000 		.4byte	0
 2443              	.LLST5:
 2444 0083 32000000 		.4byte	.LVL26
 2445 0087 36000000 		.4byte	.LVL27
 2446 008b 0100     		.2byte	0x1
 2447 008d 53       		.byte	0x53
 2448 008e 36000000 		.4byte	.LVL27
 2449 0092 52000000 		.4byte	.LVL28
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 65


 2450 0096 0500     		.2byte	0x5
 2451 0098 03       		.byte	0x3
 2452 0099 00000000 		.4byte	SPI_ADC_swStatusTx
 2453 009d 54000000 		.4byte	.LVL29
 2454 00a1 5E000000 		.4byte	.LVL30
 2455 00a5 0500     		.2byte	0x5
 2456 00a7 03       		.byte	0x3
 2457 00a8 00000000 		.4byte	SPI_ADC_swStatusTx
 2458 00ac 00000000 		.4byte	0
 2459 00b0 00000000 		.4byte	0
 2460              	.LLST6:
 2461 00b4 08000000 		.4byte	.LVL21
 2462 00b8 12000000 		.4byte	.LVL22
 2463 00bc 0100     		.2byte	0x1
 2464 00be 52       		.byte	0x52
 2465 00bf 12000000 		.4byte	.LVL22
 2466 00c3 14000000 		.4byte	.LVL23
 2467 00c7 0100     		.2byte	0x1
 2468 00c9 53       		.byte	0x53
 2469 00ca 14000000 		.4byte	.LVL23
 2470 00ce 16000000 		.4byte	.LVL24
 2471 00d2 0100     		.2byte	0x1
 2472 00d4 52       		.byte	0x52
 2473 00d5 16000000 		.4byte	.LVL24
 2474 00d9 23000000 		.4byte	.LVL25-1
 2475 00dd 0100     		.2byte	0x1
 2476 00df 53       		.byte	0x53
 2477 00e0 00000000 		.4byte	0
 2478 00e4 00000000 		.4byte	0
 2479              	.LLST7:
 2480 00e8 4C000000 		.4byte	.LVL33
 2481 00ec 54000000 		.4byte	.LVL35
 2482 00f0 0100     		.2byte	0x1
 2483 00f2 54       		.byte	0x54
 2484 00f3 54000000 		.4byte	.LVL35
 2485 00f7 64000000 		.4byte	.LFE13
 2486 00fb 0100     		.2byte	0x1
 2487 00fd 50       		.byte	0x50
 2488 00fe 00000000 		.4byte	0
 2489 0102 00000000 		.4byte	0
 2490              	.LLST8:
 2491 0106 32000000 		.4byte	.LVL37
 2492 010a 34000000 		.4byte	.LVL38
 2493 010e 0100     		.2byte	0x1
 2494 0110 54       		.byte	0x54
 2495 0111 42000000 		.4byte	.LVL39
 2496 0115 44000000 		.4byte	.LVL40
 2497 0119 0100     		.2byte	0x1
 2498 011b 54       		.byte	0x54
 2499 011c 46000000 		.4byte	.LVL41
 2500 0120 4E000000 		.4byte	.LVL43
 2501 0124 0100     		.2byte	0x1
 2502 0126 54       		.byte	0x54
 2503 0127 00000000 		.4byte	0
 2504 012b 00000000 		.4byte	0
 2505              	.LLST9:
 2506 012f 32000000 		.4byte	.LVL45
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 66


 2507 0133 34000000 		.4byte	.LVL46
 2508 0137 0100     		.2byte	0x1
 2509 0139 54       		.byte	0x54
 2510 013a 42000000 		.4byte	.LVL47
 2511 013e 44000000 		.4byte	.LVL48
 2512 0142 0100     		.2byte	0x1
 2513 0144 54       		.byte	0x54
 2514 0145 46000000 		.4byte	.LVL49
 2515 0149 4E000000 		.4byte	.LVL51
 2516 014d 0100     		.2byte	0x1
 2517 014f 54       		.byte	0x54
 2518 0150 00000000 		.4byte	0
 2519 0154 00000000 		.4byte	0
 2520              	.LLST10:
 2521 0158 06000000 		.4byte	.LVL54
 2522 015c 1B000000 		.4byte	.LVL55-1
 2523 0160 0100     		.2byte	0x1
 2524 0162 50       		.byte	0x50
 2525 0163 00000000 		.4byte	0
 2526 0167 00000000 		.4byte	0
 2527              	.LLST11:
 2528 016b 00000000 		.4byte	.LVL58
 2529 016f 0A000000 		.4byte	.LVL60
 2530 0173 0100     		.2byte	0x1
 2531 0175 50       		.byte	0x50
 2532 0176 0A000000 		.4byte	.LVL60
 2533 017a 1E000000 		.4byte	.LFE18
 2534 017e 0100     		.2byte	0x1
 2535 0180 56       		.byte	0x56
 2536 0181 00000000 		.4byte	0
 2537 0185 00000000 		.4byte	0
 2538              	.LLST12:
 2539 0189 00000000 		.4byte	.LVL58
 2540 018d 0A000000 		.4byte	.LVL60
 2541 0191 0100     		.2byte	0x1
 2542 0193 51       		.byte	0x51
 2543 0194 0A000000 		.4byte	.LVL60
 2544 0198 16000000 		.4byte	.LVL64
 2545 019c 0100     		.2byte	0x1
 2546 019e 54       		.byte	0x54
 2547 019f 18000000 		.4byte	.LVL65
 2548 01a3 1E000000 		.4byte	.LFE18
 2549 01a7 0100     		.2byte	0x1
 2550 01a9 54       		.byte	0x54
 2551 01aa 00000000 		.4byte	0
 2552 01ae 00000000 		.4byte	0
 2553              	.LLST13:
 2554 01b2 06000000 		.4byte	.LVL59
 2555 01b6 0A000000 		.4byte	.LVL60
 2556 01ba 0200     		.2byte	0x2
 2557 01bc 30       		.byte	0x30
 2558 01bd 9F       		.byte	0x9f
 2559 01be 0A000000 		.4byte	.LVL60
 2560 01c2 12000000 		.4byte	.LVL62
 2561 01c6 0100     		.2byte	0x1
 2562 01c8 55       		.byte	0x55
 2563 01c9 14000000 		.4byte	.LVL63
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 67


 2564 01cd 1E000000 		.4byte	.LFE18
 2565 01d1 0100     		.2byte	0x1
 2566 01d3 55       		.byte	0x55
 2567 01d4 00000000 		.4byte	0
 2568 01d8 00000000 		.4byte	0
 2569              	.LLST14:
 2570 01dc 16000000 		.4byte	.LVL66
 2571 01e0 2B000000 		.4byte	.LVL67-1
 2572 01e4 0100     		.2byte	0x1
 2573 01e6 50       		.byte	0x50
 2574 01e7 00000000 		.4byte	0
 2575 01eb 00000000 		.4byte	0
 2576              	.LLST15:
 2577 01ef 14000000 		.4byte	.LVL83
 2578 01f3 36000000 		.4byte	.LVL87
 2579 01f7 0100     		.2byte	0x1
 2580 01f9 54       		.byte	0x54
 2581 01fa 36000000 		.4byte	.LVL87
 2582 01fe 48000000 		.4byte	.LFE23
 2583 0202 0100     		.2byte	0x1
 2584 0204 50       		.byte	0x50
 2585 0205 00000000 		.4byte	0
 2586 0209 00000000 		.4byte	0
 2587              		.section	.debug_aranges,"",%progbits
 2588 0000 D4000000 		.4byte	0xd4
 2589 0004 0200     		.2byte	0x2
 2590 0006 00000000 		.4byte	.Ldebug_info0
 2591 000a 04       		.byte	0x4
 2592 000b 00       		.byte	0
 2593 000c 0000     		.2byte	0
 2594 000e 0000     		.2byte	0
 2595 0010 00000000 		.4byte	.LFB4
 2596 0014 0C000000 		.4byte	.LFE4-.LFB4
 2597 0018 00000000 		.4byte	.LFB5
 2598 001c 0C000000 		.4byte	.LFE5-.LFB5
 2599 0020 00000000 		.4byte	.LFB1
 2600 0024 3C000000 		.4byte	.LFE1-.LFB1
 2601 0028 00000000 		.4byte	.LFB6
 2602 002c 0C000000 		.4byte	.LFE6-.LFB6
 2603 0030 00000000 		.4byte	.LFB7
 2604 0034 0C000000 		.4byte	.LFE7-.LFB7
 2605 0038 00000000 		.4byte	.LFB3
 2606 003c 34000000 		.4byte	.LFE3-.LFB3
 2607 0040 00000000 		.4byte	.LFB8
 2608 0044 0C000000 		.4byte	.LFE8-.LFB8
 2609 0048 00000000 		.4byte	.LFB9
 2610 004c 0C000000 		.4byte	.LFE9-.LFB9
 2611 0050 00000000 		.4byte	.LFB10
 2612 0054 28000000 		.4byte	.LFE10-.LFB10
 2613 0058 00000000 		.4byte	.LFB11
 2614 005c 28000000 		.4byte	.LFE11-.LFB11
 2615 0060 00000000 		.4byte	.LFB12
 2616 0064 D4000000 		.4byte	.LFE12-.LFB12
 2617 0068 00000000 		.4byte	.LFB13
 2618 006c 64000000 		.4byte	.LFE13-.LFB13
 2619 0070 00000000 		.4byte	.LFB14
 2620 0074 58000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 68


 2621 0078 00000000 		.4byte	.LFB15
 2622 007c 58000000 		.4byte	.LFE15-.LFB15
 2623 0080 00000000 		.4byte	.LFB16
 2624 0084 40000000 		.4byte	.LFE16-.LFB16
 2625 0088 00000000 		.4byte	.LFB17
 2626 008c 54000000 		.4byte	.LFE17-.LFB17
 2627 0090 00000000 		.4byte	.LFB18
 2628 0094 1E000000 		.4byte	.LFE18-.LFB18
 2629 0098 00000000 		.4byte	.LFB19
 2630 009c 3C000000 		.4byte	.LFE19-.LFB19
 2631 00a0 00000000 		.4byte	.LFB0
 2632 00a4 90000000 		.4byte	.LFE0-.LFB0
 2633 00a8 00000000 		.4byte	.LFB2
 2634 00ac 1C000000 		.4byte	.LFE2-.LFB2
 2635 00b0 00000000 		.4byte	.LFB20
 2636 00b4 0C000000 		.4byte	.LFE20-.LFB20
 2637 00b8 00000000 		.4byte	.LFB21
 2638 00bc 0C000000 		.4byte	.LFE21-.LFB21
 2639 00c0 00000000 		.4byte	.LFB22
 2640 00c4 14000000 		.4byte	.LFE22-.LFB22
 2641 00c8 00000000 		.4byte	.LFB23
 2642 00cc 48000000 		.4byte	.LFE23-.LFB23
 2643 00d0 00000000 		.4byte	0
 2644 00d4 00000000 		.4byte	0
 2645              		.section	.debug_ranges,"",%progbits
 2646              	.Ldebug_ranges0:
 2647 0000 00000000 		.4byte	.LFB4
 2648 0004 0C000000 		.4byte	.LFE4
 2649 0008 00000000 		.4byte	.LFB5
 2650 000c 0C000000 		.4byte	.LFE5
 2651 0010 00000000 		.4byte	.LFB1
 2652 0014 3C000000 		.4byte	.LFE1
 2653 0018 00000000 		.4byte	.LFB6
 2654 001c 0C000000 		.4byte	.LFE6
 2655 0020 00000000 		.4byte	.LFB7
 2656 0024 0C000000 		.4byte	.LFE7
 2657 0028 00000000 		.4byte	.LFB3
 2658 002c 34000000 		.4byte	.LFE3
 2659 0030 00000000 		.4byte	.LFB8
 2660 0034 0C000000 		.4byte	.LFE8
 2661 0038 00000000 		.4byte	.LFB9
 2662 003c 0C000000 		.4byte	.LFE9
 2663 0040 00000000 		.4byte	.LFB10
 2664 0044 28000000 		.4byte	.LFE10
 2665 0048 00000000 		.4byte	.LFB11
 2666 004c 28000000 		.4byte	.LFE11
 2667 0050 00000000 		.4byte	.LFB12
 2668 0054 D4000000 		.4byte	.LFE12
 2669 0058 00000000 		.4byte	.LFB13
 2670 005c 64000000 		.4byte	.LFE13
 2671 0060 00000000 		.4byte	.LFB14
 2672 0064 58000000 		.4byte	.LFE14
 2673 0068 00000000 		.4byte	.LFB15
 2674 006c 58000000 		.4byte	.LFE15
 2675 0070 00000000 		.4byte	.LFB16
 2676 0074 40000000 		.4byte	.LFE16
 2677 0078 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 69


 2678 007c 54000000 		.4byte	.LFE17
 2679 0080 00000000 		.4byte	.LFB18
 2680 0084 1E000000 		.4byte	.LFE18
 2681 0088 00000000 		.4byte	.LFB19
 2682 008c 3C000000 		.4byte	.LFE19
 2683 0090 00000000 		.4byte	.LFB0
 2684 0094 90000000 		.4byte	.LFE0
 2685 0098 00000000 		.4byte	.LFB2
 2686 009c 1C000000 		.4byte	.LFE2
 2687 00a0 00000000 		.4byte	.LFB20
 2688 00a4 0C000000 		.4byte	.LFE20
 2689 00a8 00000000 		.4byte	.LFB21
 2690 00ac 0C000000 		.4byte	.LFE21
 2691 00b0 00000000 		.4byte	.LFB22
 2692 00b4 14000000 		.4byte	.LFE22
 2693 00b8 00000000 		.4byte	.LFB23
 2694 00bc 48000000 		.4byte	.LFE23
 2695 00c0 00000000 		.4byte	0
 2696 00c4 00000000 		.4byte	0
 2697              		.section	.debug_line,"",%progbits
 2698              	.Ldebug_line0:
 2699 0000 9C020000 		.section	.debug_str,"MS",%progbits,1
 2699      02006500 
 2699      00000201 
 2699      FB0E0D00 
 2699      01010101 
 2700              	.LASF65:
 2701 0000 43794578 		.ascii	"CyExitCriticalSection\000"
 2701      69744372 
 2701      69746963 
 2701      616C5365 
 2701      6374696F 
 2702              	.LASF63:
 2703 0016 5350495F 		.ascii	"SPI_ADC_rxBufferFull\000"
 2703      4144435F 
 2703      72784275 
 2703      66666572 
 2703      46756C6C 
 2704              	.LASF58:
 2705 002b 5350495F 		.ascii	"SPI_ADC_txBufferWrite\000"
 2705      4144435F 
 2705      74784275 
 2705      66666572 
 2705      57726974 
 2706              	.LASF19:
 2707 0041 5350495F 		.ascii	"SPI_ADC_EnableRxInt\000"
 2707      4144435F 
 2707      456E6162 
 2707      6C655278 
 2707      496E7400 
 2708              	.LASF23:
 2709 0055 5350495F 		.ascii	"SPI_ADC_Stop\000"
 2709      4144435F 
 2709      53746F70 
 2709      00
 2710              	.LASF7:
 2711 0062 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 70


 2711      206C6F6E 
 2711      6720756E 
 2711      7369676E 
 2711      65642069 
 2712              	.LASF28:
 2713 0079 746D7053 		.ascii	"tmpStatus\000"
 2713      74617475 
 2713      7300
 2714              	.LASF53:
 2715 0083 5350495F 		.ascii	"SPI_ADC_initVar\000"
 2715      4144435F 
 2715      696E6974 
 2715      56617200 
 2716              	.LASF6:
 2717 0093 6C6F6E67 		.ascii	"long long int\000"
 2717      206C6F6E 
 2717      6720696E 
 2717      7400
 2718              	.LASF0:
 2719 00a1 7369676E 		.ascii	"signed char\000"
 2719      65642063 
 2719      68617200 
 2720              	.LASF48:
 2721 00ad 5350495F 		.ascii	"SPI_ADC_Start\000"
 2721      4144435F 
 2721      53746172 
 2721      7400
 2722              	.LASF49:
 2723 00bb 5350495F 		.ascii	"SPI_ADC_EnableInt\000"
 2723      4144435F 
 2723      456E6162 
 2723      6C65496E 
 2723      7400
 2724              	.LASF29:
 2725 00cd 5350495F 		.ascii	"SPI_ADC_ReadTxStatus\000"
 2725      4144435F 
 2725      52656164 
 2725      54785374 
 2725      61747573 
 2726              	.LASF20:
 2727 00e2 5350495F 		.ascii	"SPI_ADC_DisableTxInt\000"
 2727      4144435F 
 2727      44697361 
 2727      626C6554 
 2727      78496E74 
 2728              	.LASF4:
 2729 00f7 6C6F6E67 		.ascii	"long int\000"
 2729      20696E74 
 2729      00
 2730              	.LASF66:
 2731 0100 5350495F 		.ascii	"SPI_ADC_IntClock_Start\000"
 2731      4144435F 
 2731      496E7443 
 2731      6C6F636B 
 2731      5F537461 
 2732              	.LASF34:
 2733 0117 746D7054 		.ascii	"tmpTxBufferRead\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 71


 2733      78427566 
 2733      66657252 
 2733      65616400 
 2734              	.LASF25:
 2735 0127 5350495F 		.ascii	"SPI_ADC_SetTxInterruptMode\000"
 2735      4144435F 
 2735      53657454 
 2735      78496E74 
 2735      65727275 
 2736              	.LASF9:
 2737 0142 75696E74 		.ascii	"uint8\000"
 2737      3800
 2738              	.LASF55:
 2739 0148 5350495F 		.ascii	"SPI_ADC_swStatusRx\000"
 2739      4144435F 
 2739      73775374 
 2739      61747573 
 2739      527800
 2740              	.LASF40:
 2741 015b 5350495F 		.ascii	"SPI_ADC_ClearRxBuffer\000"
 2741      4144435F 
 2741      436C6561 
 2741      72527842 
 2741      75666665 
 2742              	.LASF12:
 2743 0171 646F7562 		.ascii	"double\000"
 2743      6C6500
 2744              	.LASF62:
 2745 0178 5350495F 		.ascii	"SPI_ADC_rxBufferWrite\000"
 2745      4144435F 
 2745      72784275 
 2745      66666572 
 2745      57726974 
 2746              	.LASF37:
 2747 018e 5350495F 		.ascii	"SPI_ADC_GetRxBufferSize\000"
 2747      4144435F 
 2747      47657452 
 2747      78427566 
 2747      66657253 
 2748              	.LASF10:
 2749 01a6 75696E74 		.ascii	"uint32\000"
 2749      333200
 2750              	.LASF46:
 2751 01ad 5350495F 		.ascii	"SPI_ADC_ClearFIFO\000"
 2751      4144435F 
 2751      436C6561 
 2751      72464946 
 2751      4F00
 2752              	.LASF31:
 2753 01bf 5350495F 		.ascii	"SPI_ADC_WriteTxData\000"
 2753      4144435F 
 2753      57726974 
 2753      65547844 
 2753      61746100 
 2754              	.LASF8:
 2755 01d3 756E7369 		.ascii	"unsigned int\000"
 2755      676E6564 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 72


 2755      20696E74 
 2755      00
 2756              	.LASF5:
 2757 01e0 6C6F6E67 		.ascii	"long unsigned int\000"
 2757      20756E73 
 2757      69676E65 
 2757      6420696E 
 2757      7400
 2758              	.LASF64:
 2759 01f2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2759      74657243 
 2759      72697469 
 2759      63616C53 
 2759      65637469 
 2760              	.LASF38:
 2761 0209 73697A65 		.ascii	"size\000"
 2761      00
 2762              	.LASF3:
 2763 020e 73686F72 		.ascii	"short unsigned int\000"
 2763      7420756E 
 2763      7369676E 
 2763      65642069 
 2763      6E7400
 2764              	.LASF39:
 2765 0221 5350495F 		.ascii	"SPI_ADC_GetTxBufferSize\000"
 2765      4144435F 
 2765      47657454 
 2765      78427566 
 2765      66657253 
 2766              	.LASF35:
 2767 0239 5350495F 		.ascii	"SPI_ADC_ReadRxData\000"
 2767      4144435F 
 2767      52656164 
 2767      52784461 
 2767      746100
 2768              	.LASF69:
 2769 024c 4379496E 		.ascii	"CyIntSetVector\000"
 2769      74536574 
 2769      56656374 
 2769      6F7200
 2770              	.LASF45:
 2771 025b 62756649 		.ascii	"bufIndex\000"
 2771      6E646578 
 2771      00
 2772              	.LASF27:
 2773 0264 696E7453 		.ascii	"intSrc\000"
 2773      726300
 2774              	.LASF15:
 2775 026b 72656733 		.ascii	"reg32\000"
 2775      3200
 2776              	.LASF30:
 2777 0271 5350495F 		.ascii	"SPI_ADC_ReadRxStatus\000"
 2777      4144435F 
 2777      52656164 
 2777      52785374 
 2777      61747573 
 2778              	.LASF47:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 73


 2779 0286 5350495F 		.ascii	"SPI_ADC_Init\000"
 2779      4144435F 
 2779      496E6974 
 2779      00
 2780              	.LASF54:
 2781 0293 5350495F 		.ascii	"SPI_ADC_swStatusTx\000"
 2781      4144435F 
 2781      73775374 
 2781      61747573 
 2781      547800
 2782              	.LASF17:
 2783 02a6 73697A65 		.ascii	"sizetype\000"
 2783      74797065 
 2783      00
 2784              	.LASF16:
 2785 02af 6C6F6E67 		.ascii	"long double\000"
 2785      20646F75 
 2785      626C6500 
 2786              	.LASF52:
 2787 02bb 5350495F 		.ascii	"SPI_ADC_ReadStatus\000"
 2787      4144435F 
 2787      52656164 
 2787      53746174 
 2787      757300
 2788              	.LASF67:
 2789 02ce 5350495F 		.ascii	"SPI_ADC_IntClock_Stop\000"
 2789      4144435F 
 2789      496E7443 
 2789      6C6F636B 
 2789      5F53746F 
 2790              	.LASF56:
 2791 02e4 5350495F 		.ascii	"SPI_ADC_txBuffer\000"
 2791      4144435F 
 2791      74784275 
 2791      66666572 
 2791      00
 2792              	.LASF33:
 2793 02f5 74656D70 		.ascii	"tempStatus\000"
 2793      53746174 
 2793      757300
 2794              	.LASF68:
 2795 0300 4379496E 		.ascii	"CyIntSetPriority\000"
 2795      74536574 
 2795      5072696F 
 2795      72697479 
 2795      00
 2796              	.LASF11:
 2797 0311 666C6F61 		.ascii	"float\000"
 2797      7400
 2798              	.LASF41:
 2799 0317 5350495F 		.ascii	"SPI_ADC_ClearTxBuffer\000"
 2799      4144435F 
 2799      436C6561 
 2799      72547842 
 2799      75666665 
 2800              	.LASF14:
 2801 032d 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 74


 2801      00
 2802              	.LASF42:
 2803 0332 5350495F 		.ascii	"SPI_ADC_PutArray\000"
 2803      4144435F 
 2803      50757441 
 2803      72726179 
 2803      00
 2804              	.LASF1:
 2805 0343 756E7369 		.ascii	"unsigned char\000"
 2805      676E6564 
 2805      20636861 
 2805      7200
 2806              	.LASF61:
 2807 0351 5350495F 		.ascii	"SPI_ADC_rxBufferRead\000"
 2807      4144435F 
 2807      72784275 
 2807      66666572 
 2807      52656164 
 2808              	.LASF72:
 2809 0366 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\adc\\Manche"
 2809      73657273 
 2809      5C652E69 
 2809      76616E6F 
 2809      765C446F 
 2810 0393 73746572 		.ascii	"ster encoder-decoder.cydsn\000"
 2810      20656E63 
 2810      6F646572 
 2810      2D646563 
 2810      6F646572 
 2811              	.LASF2:
 2812 03ae 73686F72 		.ascii	"short int\000"
 2812      7420696E 
 2812      7400
 2813              	.LASF70:
 2814 03b8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2814      43313120 
 2814      352E342E 
 2814      31203230 
 2814      31363036 
 2815 03eb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2815      20726576 
 2815      6973696F 
 2815      6E203233 
 2815      37373135 
 2816 041e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2816      66756E63 
 2816      74696F6E 
 2816      2D736563 
 2816      74696F6E 
 2817              	.LASF44:
 2818 0446 62797465 		.ascii	"byteCount\000"
 2818      436F756E 
 2818      7400
 2819              	.LASF60:
 2820 0450 5350495F 		.ascii	"SPI_ADC_rxBuffer\000"
 2820      4144435F 
 2820      72784275 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 75


 2820      66666572 
 2820      00
 2821              	.LASF36:
 2822 0461 72784461 		.ascii	"rxData\000"
 2822      746100
 2823              	.LASF71:
 2824 0468 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI_ADC.c\000"
 2824      72617465 
 2824      645F536F 
 2824      75726365 
 2824      5C50536F 
 2825              	.LASF13:
 2826 0489 63686172 		.ascii	"char\000"
 2826      00
 2827              	.LASF59:
 2828 048e 5350495F 		.ascii	"SPI_ADC_txBufferFull\000"
 2828      4144435F 
 2828      74784275 
 2828      66666572 
 2828      46756C6C 
 2829              	.LASF18:
 2830 04a3 5350495F 		.ascii	"SPI_ADC_EnableTxInt\000"
 2830      4144435F 
 2830      456E6162 
 2830      6C655478 
 2830      496E7400 
 2831              	.LASF43:
 2832 04b7 62756666 		.ascii	"buffer\000"
 2832      657200
 2833              	.LASF24:
 2834 04be 656E6162 		.ascii	"enableInterrupts\000"
 2834      6C65496E 
 2834      74657272 
 2834      75707473 
 2834      00
 2835              	.LASF57:
 2836 04cf 5350495F 		.ascii	"SPI_ADC_txBufferRead\000"
 2836      4144435F 
 2836      74784275 
 2836      66666572 
 2836      52656164 
 2837              	.LASF51:
 2838 04e4 5350495F 		.ascii	"SPI_ADC_SetInterruptMode\000"
 2838      4144435F 
 2838      53657449 
 2838      6E746572 
 2838      72757074 
 2839              	.LASF26:
 2840 04fd 5350495F 		.ascii	"SPI_ADC_SetRxInterruptMode\000"
 2840      4144435F 
 2840      53657452 
 2840      78496E74 
 2840      65727275 
 2841              	.LASF21:
 2842 0518 5350495F 		.ascii	"SPI_ADC_DisableRxInt\000"
 2842      4144435F 
 2842      44697361 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccsoFdNW.s 			page 76


 2842      626C6552 
 2842      78496E74 
 2843              	.LASF50:
 2844 052d 5350495F 		.ascii	"SPI_ADC_DisableInt\000"
 2844      4144435F 
 2844      44697361 
 2844      626C6549 
 2844      6E7400
 2845              	.LASF32:
 2846 0540 74784461 		.ascii	"txData\000"
 2846      746100
 2847              	.LASF22:
 2848 0547 5350495F 		.ascii	"SPI_ADC_Enable\000"
 2848      4144435F 
 2848      456E6162 
 2848      6C6500
 2849              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
