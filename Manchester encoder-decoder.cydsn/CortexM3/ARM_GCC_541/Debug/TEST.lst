ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"TEST.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TEST_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	TEST_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	TEST_Enable, %function
  25              	TEST_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\TEST.c"
   1:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/TEST.c **** * File Name: TEST.c
   3:Generated_Source\PSoC5/TEST.c **** * Version 3.30
   4:Generated_Source\PSoC5/TEST.c **** *
   5:Generated_Source\PSoC5/TEST.c **** * Description:
   6:Generated_Source\PSoC5/TEST.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/TEST.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/TEST.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/TEST.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/TEST.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/TEST.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/TEST.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/TEST.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/TEST.c **** *
  15:Generated_Source\PSoC5/TEST.c **** * Note:
  16:Generated_Source\PSoC5/TEST.c **** *
  17:Generated_Source\PSoC5/TEST.c **** *******************************************************************************
  18:Generated_Source\PSoC5/TEST.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/TEST.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/TEST.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/TEST.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/TEST.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/TEST.c **** 
  24:Generated_Source\PSoC5/TEST.c **** #include "TEST.h"
  25:Generated_Source\PSoC5/TEST.c **** 
  26:Generated_Source\PSoC5/TEST.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/TEST.c **** #ifdef TEST_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/TEST.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/TEST.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/TEST.c **** #endif /* TEST_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 2


  31:Generated_Source\PSoC5/TEST.c **** 
  32:Generated_Source\PSoC5/TEST.c **** uint8 TEST_initVar = 0u;
  33:Generated_Source\PSoC5/TEST.c **** 
  34:Generated_Source\PSoC5/TEST.c **** 
  35:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/TEST.c **** * Function Name: TEST_Start
  37:Generated_Source\PSoC5/TEST.c **** ********************************************************************************
  38:Generated_Source\PSoC5/TEST.c **** *
  39:Generated_Source\PSoC5/TEST.c **** * Summary:
  40:Generated_Source\PSoC5/TEST.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/TEST.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/TEST.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/TEST.c **** *
  44:Generated_Source\PSoC5/TEST.c **** * Parameters:
  45:Generated_Source\PSoC5/TEST.c **** *  None
  46:Generated_Source\PSoC5/TEST.c **** *
  47:Generated_Source\PSoC5/TEST.c **** * Return:
  48:Generated_Source\PSoC5/TEST.c **** *  None
  49:Generated_Source\PSoC5/TEST.c **** *
  50:Generated_Source\PSoC5/TEST.c **** * Global variables:
  51:Generated_Source\PSoC5/TEST.c **** *  TEST_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/TEST.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/TEST.c **** *
  54:Generated_Source\PSoC5/TEST.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/TEST.c **** void TEST_Start(void) 
  56:Generated_Source\PSoC5/TEST.c **** {
  57:Generated_Source\PSoC5/TEST.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/TEST.c ****     if(TEST_initVar == 0u)
  59:Generated_Source\PSoC5/TEST.c ****     {
  60:Generated_Source\PSoC5/TEST.c ****         TEST_Init();
  61:Generated_Source\PSoC5/TEST.c ****         TEST_initVar = 1u;
  62:Generated_Source\PSoC5/TEST.c ****     }
  63:Generated_Source\PSoC5/TEST.c ****     TEST_Enable();
  64:Generated_Source\PSoC5/TEST.c **** 
  65:Generated_Source\PSoC5/TEST.c **** }
  66:Generated_Source\PSoC5/TEST.c **** 
  67:Generated_Source\PSoC5/TEST.c **** 
  68:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/TEST.c **** * Function Name: TEST_Init
  70:Generated_Source\PSoC5/TEST.c **** ********************************************************************************
  71:Generated_Source\PSoC5/TEST.c **** *
  72:Generated_Source\PSoC5/TEST.c **** * Summary:
  73:Generated_Source\PSoC5/TEST.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/TEST.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/TEST.c **** *  TEST_Start().
  76:Generated_Source\PSoC5/TEST.c **** *
  77:Generated_Source\PSoC5/TEST.c **** * Parameters:
  78:Generated_Source\PSoC5/TEST.c **** *  None
  79:Generated_Source\PSoC5/TEST.c **** *
  80:Generated_Source\PSoC5/TEST.c **** * Return:
  81:Generated_Source\PSoC5/TEST.c **** *  None
  82:Generated_Source\PSoC5/TEST.c **** *
  83:Generated_Source\PSoC5/TEST.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/TEST.c **** void TEST_Init(void) 
  85:Generated_Source\PSoC5/TEST.c **** {
  86:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UsingFixedFunction || TEST_UseControl)
  87:Generated_Source\PSoC5/TEST.c ****         uint8 ctrl;
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 3


  88:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction || TEST_UseControl) */
  89:Generated_Source\PSoC5/TEST.c **** 
  90:Generated_Source\PSoC5/TEST.c ****     #if(!TEST_UsingFixedFunction)
  91:Generated_Source\PSoC5/TEST.c ****         #if(TEST_UseStatus)
  92:Generated_Source\PSoC5/TEST.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/TEST.c ****             uint8 TEST_interruptState;
  94:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UseStatus) */
  95:Generated_Source\PSoC5/TEST.c ****     #endif /* (!TEST_UsingFixedFunction) */
  96:Generated_Source\PSoC5/TEST.c **** 
  97:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UsingFixedFunction)
  98:Generated_Source\PSoC5/TEST.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/TEST.c ****         TEST_CONTROL |= TEST_CFG0_MODE;
 100:Generated_Source\PSoC5/TEST.c ****         #if (TEST_DeadBand2_4)
 101:Generated_Source\PSoC5/TEST.c ****             TEST_CONTROL |= TEST_CFG0_DB;
 102:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_DeadBand2_4) */
 103:Generated_Source\PSoC5/TEST.c **** 
 104:Generated_Source\PSoC5/TEST.c ****         ctrl = TEST_CONTROL3 & ((uint8 )(~TEST_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/TEST.c ****         TEST_CONTROL3 = ctrl | TEST_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/TEST.c **** 
 107:Generated_Source\PSoC5/TEST.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/TEST.c ****         TEST_RT1 &= ((uint8)(~TEST_RT1_MASK));
 109:Generated_Source\PSoC5/TEST.c ****         TEST_RT1 |= TEST_SYNC;
 110:Generated_Source\PSoC5/TEST.c **** 
 111:Generated_Source\PSoC5/TEST.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/TEST.c ****         TEST_RT1 &= ((uint8)(~TEST_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/TEST.c ****         TEST_RT1 |= TEST_SYNCDSI_EN;
 114:Generated_Source\PSoC5/TEST.c **** 
 115:Generated_Source\PSoC5/TEST.c ****     #elif (TEST_UseControl)
 116:Generated_Source\PSoC5/TEST.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/TEST.c ****         ctrl = TEST_CONTROL & ((uint8)(~TEST_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/TEST.c ****                 ((uint8)(~TEST_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/TEST.c ****         TEST_CONTROL = ctrl | TEST_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/TEST.c ****                                    TEST_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction) */
 122:Generated_Source\PSoC5/TEST.c **** 
 123:Generated_Source\PSoC5/TEST.c ****     #if (!TEST_UsingFixedFunction)
 124:Generated_Source\PSoC5/TEST.c ****         #if (TEST_Resolution == 8)
 125:Generated_Source\PSoC5/TEST.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/TEST.c ****             TEST_AUX_CONTROLDP0 |= (TEST_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/TEST.c ****         #else /* (TEST_Resolution == 16)*/
 128:Generated_Source\PSoC5/TEST.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/TEST.c ****             TEST_AUX_CONTROLDP0 |= (TEST_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/TEST.c ****             TEST_AUX_CONTROLDP1 |= (TEST_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_Resolution == 8) */
 132:Generated_Source\PSoC5/TEST.c **** 
 133:Generated_Source\PSoC5/TEST.c ****         TEST_WriteCounter(TEST_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/TEST.c ****     #endif /* (!TEST_UsingFixedFunction) */
 135:Generated_Source\PSoC5/TEST.c **** 
 136:Generated_Source\PSoC5/TEST.c ****     TEST_WritePeriod(TEST_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/TEST.c **** 
 138:Generated_Source\PSoC5/TEST.c ****         #if (TEST_UseOneCompareMode)
 139:Generated_Source\PSoC5/TEST.c ****             TEST_WriteCompare(TEST_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/TEST.c ****         #else
 141:Generated_Source\PSoC5/TEST.c ****             TEST_WriteCompare1(TEST_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/TEST.c ****             TEST_WriteCompare2(TEST_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UseOneCompareMode) */
 144:Generated_Source\PSoC5/TEST.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 4


 145:Generated_Source\PSoC5/TEST.c ****         #if (TEST_KillModeMinTime)
 146:Generated_Source\PSoC5/TEST.c ****             TEST_WriteKillTime(TEST_MinimumKillTime);
 147:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_KillModeMinTime) */
 148:Generated_Source\PSoC5/TEST.c **** 
 149:Generated_Source\PSoC5/TEST.c ****         #if (TEST_DeadBandUsed)
 150:Generated_Source\PSoC5/TEST.c ****             TEST_WriteDeadTime(TEST_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_DeadBandUsed) */
 152:Generated_Source\PSoC5/TEST.c **** 
 153:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UseStatus || TEST_UsingFixedFunction)
 154:Generated_Source\PSoC5/TEST.c ****         TEST_SetInterruptMode(TEST_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UseStatus || TEST_UsingFixedFunction) */
 156:Generated_Source\PSoC5/TEST.c **** 
 157:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UsingFixedFunction)
 158:Generated_Source\PSoC5/TEST.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/TEST.c ****         TEST_GLOBAL_ENABLE |= TEST_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/TEST.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/TEST.c ****         TEST_CONTROL2 |= TEST_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/TEST.c ****     #else
 163:Generated_Source\PSoC5/TEST.c ****         #if(TEST_UseStatus)
 164:Generated_Source\PSoC5/TEST.c **** 
 165:Generated_Source\PSoC5/TEST.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/TEST.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/TEST.c ****             TEST_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/TEST.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/TEST.c ****             TEST_STATUS_AUX_CTRL |= TEST_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/TEST.c **** 
 171:Generated_Source\PSoC5/TEST.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/TEST.c ****             CyExitCriticalSection(TEST_interruptState);
 173:Generated_Source\PSoC5/TEST.c **** 
 174:Generated_Source\PSoC5/TEST.c ****             /* Clear the FIFO to enable the TEST_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/TEST.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/TEST.c ****             TEST_ClearFIFO();
 177:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UseStatus) */
 178:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction) */
 179:Generated_Source\PSoC5/TEST.c **** }
 180:Generated_Source\PSoC5/TEST.c **** 
 181:Generated_Source\PSoC5/TEST.c **** 
 182:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/TEST.c **** * Function Name: TEST_Enable
 184:Generated_Source\PSoC5/TEST.c **** ********************************************************************************
 185:Generated_Source\PSoC5/TEST.c **** *
 186:Generated_Source\PSoC5/TEST.c **** * Summary:
 187:Generated_Source\PSoC5/TEST.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/TEST.c **** *
 189:Generated_Source\PSoC5/TEST.c **** * Parameters:
 190:Generated_Source\PSoC5/TEST.c **** *  None
 191:Generated_Source\PSoC5/TEST.c **** *
 192:Generated_Source\PSoC5/TEST.c **** * Return:
 193:Generated_Source\PSoC5/TEST.c **** *  None
 194:Generated_Source\PSoC5/TEST.c **** *
 195:Generated_Source\PSoC5/TEST.c **** * Side Effects:
 196:Generated_Source\PSoC5/TEST.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/TEST.c **** *
 198:Generated_Source\PSoC5/TEST.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/TEST.c **** void TEST_Enable(void) 
 200:Generated_Source\PSoC5/TEST.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/TEST.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UsingFixedFunction)
 203:Generated_Source\PSoC5/TEST.c ****         TEST_GLOBAL_ENABLE |= TEST_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/TEST.c ****         TEST_GLOBAL_STBY_ENABLE |= TEST_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction) */
 206:Generated_Source\PSoC5/TEST.c **** 
 207:Generated_Source\PSoC5/TEST.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UseControl || TEST_UsingFixedFunction)
 209:Generated_Source\PSoC5/TEST.c ****         TEST_CONTROL |= TEST_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 73640040 		.word	1073767539
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	TEST_Enable, .-TEST_Enable
  46              		.section	.text.TEST_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	TEST_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	TEST_Stop, %function
  52              	TEST_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UseControl || TEST_UsingFixedFunction) */
 211:Generated_Source\PSoC5/TEST.c **** }
 212:Generated_Source\PSoC5/TEST.c **** 
 213:Generated_Source\PSoC5/TEST.c **** 
 214:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/TEST.c **** * Function Name: TEST_Stop
 216:Generated_Source\PSoC5/TEST.c **** ********************************************************************************
 217:Generated_Source\PSoC5/TEST.c **** *
 218:Generated_Source\PSoC5/TEST.c **** * Summary:
 219:Generated_Source\PSoC5/TEST.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/TEST.c **** *  interrupts.
 221:Generated_Source\PSoC5/TEST.c **** *
 222:Generated_Source\PSoC5/TEST.c **** * Parameters:
 223:Generated_Source\PSoC5/TEST.c **** *  None
 224:Generated_Source\PSoC5/TEST.c **** *
 225:Generated_Source\PSoC5/TEST.c **** * Return:
 226:Generated_Source\PSoC5/TEST.c **** *  None
 227:Generated_Source\PSoC5/TEST.c **** *
 228:Generated_Source\PSoC5/TEST.c **** * Side Effects:
 229:Generated_Source\PSoC5/TEST.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/TEST.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/TEST.c **** *
 232:Generated_Source\PSoC5/TEST.c **** *******************************************************************************/
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 6


 233:Generated_Source\PSoC5/TEST.c **** void TEST_Stop(void) 
 234:Generated_Source\PSoC5/TEST.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UseControl || TEST_UsingFixedFunction)
 236:Generated_Source\PSoC5/TEST.c ****         TEST_CONTROL &= ((uint8)(~TEST_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 73640040 		.word	1073767539
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	TEST_Stop, .-TEST_Stop
  72              		.section	.text.TEST_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	TEST_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	TEST_WriteCounter, %function
  78              	TEST_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UseControl || TEST_UsingFixedFunction) */
 238:Generated_Source\PSoC5/TEST.c **** 
 239:Generated_Source\PSoC5/TEST.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UsingFixedFunction)
 241:Generated_Source\PSoC5/TEST.c ****         TEST_GLOBAL_ENABLE &= ((uint8)(~TEST_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/TEST.c ****         TEST_GLOBAL_STBY_ENABLE &= ((uint8)(~TEST_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction) */
 244:Generated_Source\PSoC5/TEST.c **** }
 245:Generated_Source\PSoC5/TEST.c **** 
 246:Generated_Source\PSoC5/TEST.c **** #if (TEST_UseOneCompareMode)
 247:Generated_Source\PSoC5/TEST.c ****     #if (TEST_CompareMode1SW)
 248:Generated_Source\PSoC5/TEST.c **** 
 249:Generated_Source\PSoC5/TEST.c **** 
 250:Generated_Source\PSoC5/TEST.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/TEST.c ****         * Function Name: TEST_SetCompareMode
 252:Generated_Source\PSoC5/TEST.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/TEST.c ****         *
 254:Generated_Source\PSoC5/TEST.c ****         * Summary:
 255:Generated_Source\PSoC5/TEST.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/TEST.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/TEST.c ****         *
 258:Generated_Source\PSoC5/TEST.c ****         * Parameters:
 259:Generated_Source\PSoC5/TEST.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/TEST.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/TEST.c ****         *
 262:Generated_Source\PSoC5/TEST.c ****         * Return:
 263:Generated_Source\PSoC5/TEST.c ****         *  None
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 7


 264:Generated_Source\PSoC5/TEST.c ****         *
 265:Generated_Source\PSoC5/TEST.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/TEST.c ****         void TEST_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/TEST.c ****         {
 268:Generated_Source\PSoC5/TEST.c ****             #if(TEST_UsingFixedFunction)
 269:Generated_Source\PSoC5/TEST.c **** 
 270:Generated_Source\PSoC5/TEST.c ****                 #if(0 != TEST_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/TEST.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << TEST_CTRL_CMPMODE1_SHI
 272:Generated_Source\PSoC5/TEST.c ****                 #else
 273:Generated_Source\PSoC5/TEST.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/TEST.c ****                 #endif /* (0 != TEST_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/TEST.c **** 
 276:Generated_Source\PSoC5/TEST.c ****                 TEST_CONTROL3 &= ((uint8)(~TEST_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/TEST.c ****                 TEST_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/TEST.c **** 
 279:Generated_Source\PSoC5/TEST.c ****             #elif (TEST_UseControl)
 280:Generated_Source\PSoC5/TEST.c **** 
 281:Generated_Source\PSoC5/TEST.c ****                 #if(0 != TEST_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/TEST.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << TEST_CTRL_CMPMODE1_SH
 283:Generated_Source\PSoC5/TEST.c ****                                                 TEST_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/TEST.c ****                 #else
 285:Generated_Source\PSoC5/TEST.c ****                     uint8 comparemode1masked = comparemode & TEST_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/TEST.c ****                 #endif /* (0 != TEST_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/TEST.c **** 
 288:Generated_Source\PSoC5/TEST.c ****                 #if(0 != TEST_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/TEST.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << TEST_CTRL_CMPMODE2_SH
 290:Generated_Source\PSoC5/TEST.c ****                                                TEST_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/TEST.c ****                 #else
 292:Generated_Source\PSoC5/TEST.c ****                     uint8 comparemode2masked = comparemode & TEST_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/TEST.c ****                 #endif /* (0 != TEST_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/TEST.c **** 
 295:Generated_Source\PSoC5/TEST.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/TEST.c ****                 TEST_CONTROL &= ((uint8)(~(TEST_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/TEST.c ****                                             TEST_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/TEST.c ****                 TEST_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/TEST.c **** 
 300:Generated_Source\PSoC5/TEST.c ****             #else
 301:Generated_Source\PSoC5/TEST.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/TEST.c ****             #endif /* (TEST_UsingFixedFunction) */
 303:Generated_Source\PSoC5/TEST.c ****         }
 304:Generated_Source\PSoC5/TEST.c ****     #endif /* TEST_CompareMode1SW */
 305:Generated_Source\PSoC5/TEST.c **** 
 306:Generated_Source\PSoC5/TEST.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/TEST.c **** 
 308:Generated_Source\PSoC5/TEST.c ****     #if (TEST_CompareMode1SW)
 309:Generated_Source\PSoC5/TEST.c **** 
 310:Generated_Source\PSoC5/TEST.c **** 
 311:Generated_Source\PSoC5/TEST.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/TEST.c ****         * Function Name: TEST_SetCompareMode1
 313:Generated_Source\PSoC5/TEST.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/TEST.c ****         *
 315:Generated_Source\PSoC5/TEST.c ****         * Summary:
 316:Generated_Source\PSoC5/TEST.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/TEST.c ****         *
 318:Generated_Source\PSoC5/TEST.c ****         * Parameters:
 319:Generated_Source\PSoC5/TEST.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/TEST.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 8


 321:Generated_Source\PSoC5/TEST.c ****         *
 322:Generated_Source\PSoC5/TEST.c ****         * Return:
 323:Generated_Source\PSoC5/TEST.c ****         *  None
 324:Generated_Source\PSoC5/TEST.c ****         *
 325:Generated_Source\PSoC5/TEST.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/TEST.c ****         void TEST_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/TEST.c ****         {
 328:Generated_Source\PSoC5/TEST.c ****             #if(0 != TEST_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/TEST.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << TEST_CTRL_CMPMODE1_SHIFT))
 330:Generated_Source\PSoC5/TEST.c ****                                            TEST_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/TEST.c ****             #else
 332:Generated_Source\PSoC5/TEST.c ****                 uint8 comparemodemasked = comparemode & TEST_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/TEST.c ****             #endif /* (0 != TEST_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/TEST.c **** 
 335:Generated_Source\PSoC5/TEST.c ****             #if (TEST_UseControl)
 336:Generated_Source\PSoC5/TEST.c ****                 TEST_CONTROL &= ((uint8)(~TEST_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/TEST.c ****                 TEST_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/TEST.c ****             #endif /* (TEST_UseControl) */
 339:Generated_Source\PSoC5/TEST.c ****         }
 340:Generated_Source\PSoC5/TEST.c ****     #endif /* TEST_CompareMode1SW */
 341:Generated_Source\PSoC5/TEST.c **** 
 342:Generated_Source\PSoC5/TEST.c **** #if (TEST_CompareMode2SW)
 343:Generated_Source\PSoC5/TEST.c **** 
 344:Generated_Source\PSoC5/TEST.c **** 
 345:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_SetCompareMode2
 347:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/TEST.c ****     *
 349:Generated_Source\PSoC5/TEST.c ****     * Summary:
 350:Generated_Source\PSoC5/TEST.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/TEST.c ****     *
 352:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 353:Generated_Source\PSoC5/TEST.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/TEST.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/TEST.c ****     *
 356:Generated_Source\PSoC5/TEST.c ****     * Return:
 357:Generated_Source\PSoC5/TEST.c ****     *  None
 358:Generated_Source\PSoC5/TEST.c ****     *
 359:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/TEST.c ****     void TEST_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/TEST.c ****     {
 362:Generated_Source\PSoC5/TEST.c **** 
 363:Generated_Source\PSoC5/TEST.c ****         #if(0 != TEST_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/TEST.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << TEST_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/TEST.c ****                                                  TEST_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/TEST.c ****         #else
 367:Generated_Source\PSoC5/TEST.c ****             uint8 comparemodemasked = comparemode & TEST_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/TEST.c ****         #endif /* (0 != TEST_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/TEST.c **** 
 370:Generated_Source\PSoC5/TEST.c ****         #if (TEST_UseControl)
 371:Generated_Source\PSoC5/TEST.c ****             TEST_CONTROL &= ((uint8)(~TEST_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/TEST.c ****             TEST_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UseControl) */
 374:Generated_Source\PSoC5/TEST.c ****     }
 375:Generated_Source\PSoC5/TEST.c ****     #endif /*TEST_CompareMode2SW */
 376:Generated_Source\PSoC5/TEST.c **** 
 377:Generated_Source\PSoC5/TEST.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 9


 378:Generated_Source\PSoC5/TEST.c **** 
 379:Generated_Source\PSoC5/TEST.c **** 
 380:Generated_Source\PSoC5/TEST.c **** #if (!TEST_UsingFixedFunction)
 381:Generated_Source\PSoC5/TEST.c **** 
 382:Generated_Source\PSoC5/TEST.c **** 
 383:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_WriteCounter
 385:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/TEST.c ****     *
 387:Generated_Source\PSoC5/TEST.c ****     * Summary:
 388:Generated_Source\PSoC5/TEST.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/TEST.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/TEST.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/TEST.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/TEST.c ****     *
 393:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 394:Generated_Source\PSoC5/TEST.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/TEST.c ****     *
 396:Generated_Source\PSoC5/TEST.c ****     * Return:
 397:Generated_Source\PSoC5/TEST.c ****     *  None
 398:Generated_Source\PSoC5/TEST.c ****     *
 399:Generated_Source\PSoC5/TEST.c ****     * Side Effects:
 400:Generated_Source\PSoC5/TEST.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/TEST.c ****     *
 402:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/TEST.c ****     void TEST_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/TEST.c ****                                        
 405:Generated_Source\PSoC5/TEST.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/TEST.c ****         CY_SET_REG16(TEST_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 0C680040 		.word	1073768460
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	TEST_WriteCounter, .-TEST_WriteCounter
  97              		.section	.text.TEST_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	TEST_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	TEST_ReadCounter, %function
 103              	TEST_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/TEST.c ****     }
 408:Generated_Source\PSoC5/TEST.c **** 
 409:Generated_Source\PSoC5/TEST.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 10


 410:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadCounter
 412:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/TEST.c ****     *
 414:Generated_Source\PSoC5/TEST.c ****     * Summary:
 415:Generated_Source\PSoC5/TEST.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/TEST.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/TEST.c ****     *
 418:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 419:Generated_Source\PSoC5/TEST.c ****     *  None
 420:Generated_Source\PSoC5/TEST.c ****     *
 421:Generated_Source\PSoC5/TEST.c ****     * Return:
 422:Generated_Source\PSoC5/TEST.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/TEST.c ****     *
 424:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/TEST.c ****     uint16 TEST_ReadCounter(void) 
 426:Generated_Source\PSoC5/TEST.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/TEST.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/TEST.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/TEST.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/TEST.c ****           (void)CY_GET_REG8(TEST_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/TEST.c **** 
 432:Generated_Source\PSoC5/TEST.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/TEST.c ****         return (CY_GET_REG16(TEST_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/TEST.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 16640040 		.word	1073767446
 123 0010 AC680040 		.word	1073768620
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	TEST_ReadCounter, .-TEST_ReadCounter
 127              		.section	.text.TEST_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	TEST_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	TEST_WritePeriod, %function
 133              	TEST_WritePeriod:
 134              	.LFB7:
 435:Generated_Source\PSoC5/TEST.c **** 
 436:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UseStatus)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 11


 437:Generated_Source\PSoC5/TEST.c **** 
 438:Generated_Source\PSoC5/TEST.c **** 
 439:Generated_Source\PSoC5/TEST.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/TEST.c ****         * Function Name: TEST_ClearFIFO
 441:Generated_Source\PSoC5/TEST.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/TEST.c ****         *
 443:Generated_Source\PSoC5/TEST.c ****         * Summary:
 444:Generated_Source\PSoC5/TEST.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/TEST.c ****         *
 446:Generated_Source\PSoC5/TEST.c ****         * Parameters:
 447:Generated_Source\PSoC5/TEST.c ****         *  None
 448:Generated_Source\PSoC5/TEST.c ****         *
 449:Generated_Source\PSoC5/TEST.c ****         * Return:
 450:Generated_Source\PSoC5/TEST.c ****         *  None
 451:Generated_Source\PSoC5/TEST.c ****         *
 452:Generated_Source\PSoC5/TEST.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/TEST.c ****         void TEST_ClearFIFO(void) 
 454:Generated_Source\PSoC5/TEST.c ****         {
 455:Generated_Source\PSoC5/TEST.c ****             while(0u != (TEST_ReadStatusRegister() & TEST_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/TEST.c ****             {
 457:Generated_Source\PSoC5/TEST.c ****                 (void)TEST_ReadCapture();
 458:Generated_Source\PSoC5/TEST.c ****             }
 459:Generated_Source\PSoC5/TEST.c ****         }
 460:Generated_Source\PSoC5/TEST.c **** 
 461:Generated_Source\PSoC5/TEST.c ****     #endif /* TEST_UseStatus */
 462:Generated_Source\PSoC5/TEST.c **** 
 463:Generated_Source\PSoC5/TEST.c **** #endif /* !TEST_UsingFixedFunction */
 464:Generated_Source\PSoC5/TEST.c **** 
 465:Generated_Source\PSoC5/TEST.c **** 
 466:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/TEST.c **** * Function Name: TEST_WritePeriod
 468:Generated_Source\PSoC5/TEST.c **** ********************************************************************************
 469:Generated_Source\PSoC5/TEST.c **** *
 470:Generated_Source\PSoC5/TEST.c **** * Summary:
 471:Generated_Source\PSoC5/TEST.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/TEST.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/TEST.c **** *
 474:Generated_Source\PSoC5/TEST.c **** * Parameters:
 475:Generated_Source\PSoC5/TEST.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/TEST.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/TEST.c **** *
 478:Generated_Source\PSoC5/TEST.c **** * Return:
 479:Generated_Source\PSoC5/TEST.c **** *  None
 480:Generated_Source\PSoC5/TEST.c **** *
 481:Generated_Source\PSoC5/TEST.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/TEST.c **** void TEST_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/TEST.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/TEST.c ****     #if(TEST_UsingFixedFunction)
 485:Generated_Source\PSoC5/TEST.c ****         CY_SET_REG16(TEST_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/TEST.c ****     #else
 487:Generated_Source\PSoC5/TEST.c ****         CY_SET_REG16(TEST_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 8C680040 		.word	1073768588
 149              		.cfi_endproc
 150              	.LFE7:
 151              		.size	TEST_WritePeriod, .-TEST_WritePeriod
 152              		.section	.text.TEST_WriteCompare1,"ax",%progbits
 153              		.align	2
 154              		.global	TEST_WriteCompare1
 155              		.thumb
 156              		.thumb_func
 157              		.type	TEST_WriteCompare1, %function
 158              	TEST_WriteCompare1:
 159              	.LFB8:
 488:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction) */
 489:Generated_Source\PSoC5/TEST.c **** }
 490:Generated_Source\PSoC5/TEST.c **** 
 491:Generated_Source\PSoC5/TEST.c **** #if (TEST_UseOneCompareMode)
 492:Generated_Source\PSoC5/TEST.c **** 
 493:Generated_Source\PSoC5/TEST.c **** 
 494:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_WriteCompare
 496:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/TEST.c ****     *
 498:Generated_Source\PSoC5/TEST.c ****     * Summary:
 499:Generated_Source\PSoC5/TEST.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/TEST.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/TEST.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/TEST.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/TEST.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/TEST.c ****     *
 505:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 506:Generated_Source\PSoC5/TEST.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/TEST.c ****     *
 508:Generated_Source\PSoC5/TEST.c ****     * Return:
 509:Generated_Source\PSoC5/TEST.c ****     *  None
 510:Generated_Source\PSoC5/TEST.c ****     *
 511:Generated_Source\PSoC5/TEST.c ****     * Side Effects:
 512:Generated_Source\PSoC5/TEST.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/TEST.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/TEST.c ****     *
 515:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/TEST.c ****     void TEST_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/TEST.c ****                                        
 518:Generated_Source\PSoC5/TEST.c ****     {
 519:Generated_Source\PSoC5/TEST.c ****         #if(TEST_UsingFixedFunction)
 520:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG16(TEST_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/TEST.c ****         #else
 522:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG16(TEST_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UsingFixedFunction) */
 524:Generated_Source\PSoC5/TEST.c **** 
 525:Generated_Source\PSoC5/TEST.c ****         #if (TEST_PWMMode == TEST__B_PWM__DITHER)
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 13


 526:Generated_Source\PSoC5/TEST.c ****             #if(TEST_UsingFixedFunction)
 527:Generated_Source\PSoC5/TEST.c ****                 CY_SET_REG16(TEST_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/TEST.c ****             #else
 529:Generated_Source\PSoC5/TEST.c ****                 CY_SET_REG16(TEST_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/TEST.c ****             #endif /* (TEST_UsingFixedFunction) */
 531:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_PWMMode == TEST__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/TEST.c ****     }
 533:Generated_Source\PSoC5/TEST.c **** 
 534:Generated_Source\PSoC5/TEST.c **** 
 535:Generated_Source\PSoC5/TEST.c **** #else
 536:Generated_Source\PSoC5/TEST.c **** 
 537:Generated_Source\PSoC5/TEST.c **** 
 538:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_WriteCompare1
 540:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/TEST.c ****     *
 542:Generated_Source\PSoC5/TEST.c ****     * Summary:
 543:Generated_Source\PSoC5/TEST.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/TEST.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/TEST.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/TEST.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/TEST.c ****     *
 548:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 549:Generated_Source\PSoC5/TEST.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/TEST.c ****     *
 551:Generated_Source\PSoC5/TEST.c ****     * Return:
 552:Generated_Source\PSoC5/TEST.c ****     *  None
 553:Generated_Source\PSoC5/TEST.c ****     *
 554:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/TEST.c ****     void TEST_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/TEST.c ****                                         
 557:Generated_Source\PSoC5/TEST.c ****     {
 160              		.loc 1 557 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 558:Generated_Source\PSoC5/TEST.c ****         #if(TEST_UsingFixedFunction)
 559:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG16(TEST_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/TEST.c ****         #else
 561:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG16(TEST_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 561 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 4C680040 		.word	1073768524
 174              		.cfi_endproc
 175              	.LFE8:
 176              		.size	TEST_WriteCompare1, .-TEST_WriteCompare1
 177              		.section	.text.TEST_WriteCompare2,"ax",%progbits
 178              		.align	2
 179              		.global	TEST_WriteCompare2
 180              		.thumb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 14


 181              		.thumb_func
 182              		.type	TEST_WriteCompare2, %function
 183              	TEST_WriteCompare2:
 184              	.LFB9:
 562:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UsingFixedFunction) */
 563:Generated_Source\PSoC5/TEST.c ****     }
 564:Generated_Source\PSoC5/TEST.c **** 
 565:Generated_Source\PSoC5/TEST.c **** 
 566:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_WriteCompare2
 568:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/TEST.c ****     *
 570:Generated_Source\PSoC5/TEST.c ****     * Summary:
 571:Generated_Source\PSoC5/TEST.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/TEST.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/TEST.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/TEST.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/TEST.c ****     *  mode.
 576:Generated_Source\PSoC5/TEST.c ****     *
 577:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 578:Generated_Source\PSoC5/TEST.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/TEST.c ****     *
 580:Generated_Source\PSoC5/TEST.c ****     * Return:
 581:Generated_Source\PSoC5/TEST.c ****     *  None
 582:Generated_Source\PSoC5/TEST.c ****     *
 583:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/TEST.c ****     void TEST_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/TEST.c ****                                         
 586:Generated_Source\PSoC5/TEST.c ****     {
 185              		.loc 1 586 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL3:
 587:Generated_Source\PSoC5/TEST.c ****         #if(TEST_UsingFixedFunction)
 588:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG16(TEST_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/TEST.c ****         #else
 590:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG16(TEST_COMPARE2_LSB_PTR, compare);
 191              		.loc 1 590 0
 192 0000 014B     		ldr	r3, .L20
 193 0002 1880     		strh	r0, [r3]	@ movhi
 194 0004 7047     		bx	lr
 195              	.L21:
 196 0006 00BF     		.align	2
 197              	.L20:
 198 0008 6C680040 		.word	1073768556
 199              		.cfi_endproc
 200              	.LFE9:
 201              		.size	TEST_WriteCompare2, .-TEST_WriteCompare2
 202              		.section	.text.TEST_WriteDeadTime,"ax",%progbits
 203              		.align	2
 204              		.global	TEST_WriteDeadTime
 205              		.thumb
 206              		.thumb_func
 207              		.type	TEST_WriteDeadTime, %function
 208              	TEST_WriteDeadTime:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 15


 209              	.LFB10:
 591:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UsingFixedFunction) */
 592:Generated_Source\PSoC5/TEST.c ****     }
 593:Generated_Source\PSoC5/TEST.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/TEST.c **** 
 595:Generated_Source\PSoC5/TEST.c **** #if (TEST_DeadBandUsed)
 596:Generated_Source\PSoC5/TEST.c **** 
 597:Generated_Source\PSoC5/TEST.c **** 
 598:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_WriteDeadTime
 600:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/TEST.c ****     *
 602:Generated_Source\PSoC5/TEST.c ****     * Summary:
 603:Generated_Source\PSoC5/TEST.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/TEST.c ****     *
 605:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 606:Generated_Source\PSoC5/TEST.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/TEST.c ****     *
 608:Generated_Source\PSoC5/TEST.c ****     * Return:
 609:Generated_Source\PSoC5/TEST.c ****     *  None
 610:Generated_Source\PSoC5/TEST.c ****     *
 611:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/TEST.c ****     void TEST_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/TEST.c ****     {
 210              		.loc 1 613 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LVL4:
 614:Generated_Source\PSoC5/TEST.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/TEST.c ****         #if(!TEST_DeadBand2_4)
 616:Generated_Source\PSoC5/TEST.c ****             CY_SET_REG8(TEST_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/TEST.c ****         #else
 618:Generated_Source\PSoC5/TEST.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/TEST.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/TEST.c ****             TEST_DEADBAND_COUNT &= ((uint8)(~TEST_DEADBAND_COUNT_MASK));
 216              		.loc 1 620 0
 217 0000 054B     		ldr	r3, .L23
 218 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 219 0004 02F0FC02 		and	r2, r2, #252
 220 0008 1A70     		strb	r2, [r3]
 621:Generated_Source\PSoC5/TEST.c **** 
 622:Generated_Source\PSoC5/TEST.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/TEST.c ****             #if(TEST_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/TEST.c ****                 TEST_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << TEST_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/TEST.c ****                                                     TEST_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/TEST.c ****             #else
 627:Generated_Source\PSoC5/TEST.c ****                 TEST_DEADBAND_COUNT |= deadtime & TEST_DEADBAND_COUNT_MASK;
 221              		.loc 1 627 0
 222 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 223 000c 00F00300 		and	r0, r0, #3
 224              	.LVL5:
 225 0010 1043     		orrs	r0, r0, r2
 226 0012 1870     		strb	r0, [r3]
 227 0014 7047     		bx	lr
 228              	.L24:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 16


 229 0016 00BF     		.align	2
 230              	.L23:
 231 0018 7D640040 		.word	1073767549
 232              		.cfi_endproc
 233              	.LFE10:
 234              		.size	TEST_WriteDeadTime, .-TEST_WriteDeadTime
 235              		.section	.text.TEST_ReadDeadTime,"ax",%progbits
 236              		.align	2
 237              		.global	TEST_ReadDeadTime
 238              		.thumb
 239              		.thumb_func
 240              		.type	TEST_ReadDeadTime, %function
 241              	TEST_ReadDeadTime:
 242              	.LFB11:
 628:Generated_Source\PSoC5/TEST.c ****             #endif /* (TEST_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/TEST.c **** 
 630:Generated_Source\PSoC5/TEST.c ****         #endif /* (!TEST_DeadBand2_4) */
 631:Generated_Source\PSoC5/TEST.c ****     }
 632:Generated_Source\PSoC5/TEST.c **** 
 633:Generated_Source\PSoC5/TEST.c **** 
 634:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadDeadTime
 636:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/TEST.c ****     *
 638:Generated_Source\PSoC5/TEST.c ****     * Summary:
 639:Generated_Source\PSoC5/TEST.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/TEST.c ****     *
 641:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 642:Generated_Source\PSoC5/TEST.c ****     *  None
 643:Generated_Source\PSoC5/TEST.c ****     *
 644:Generated_Source\PSoC5/TEST.c ****     * Return:
 645:Generated_Source\PSoC5/TEST.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/TEST.c ****     *
 647:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/TEST.c ****     uint8 TEST_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/TEST.c ****     {
 243              		.loc 1 649 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 650:Generated_Source\PSoC5/TEST.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/TEST.c ****         #if(!TEST_DeadBand2_4)
 652:Generated_Source\PSoC5/TEST.c ****             return (CY_GET_REG8(TEST_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/TEST.c ****         #else
 654:Generated_Source\PSoC5/TEST.c **** 
 655:Generated_Source\PSoC5/TEST.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/TEST.c ****             #if(TEST_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/TEST.c ****                 return ((uint8)(((uint8)(TEST_DEADBAND_COUNT & TEST_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/TEST.c ****                                                                            TEST_DEADBAND_COUNT_SHIF
 659:Generated_Source\PSoC5/TEST.c ****             #else
 660:Generated_Source\PSoC5/TEST.c ****                 return (TEST_DEADBAND_COUNT & TEST_DEADBAND_COUNT_MASK);
 248              		.loc 1 660 0
 249 0000 024B     		ldr	r3, .L26
 250 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 661:Generated_Source\PSoC5/TEST.c ****             #endif /* (TEST_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/TEST.c ****         #endif /* (!TEST_DeadBand2_4) */
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 17


 663:Generated_Source\PSoC5/TEST.c ****     }
 251              		.loc 1 663 0
 252 0004 00F00300 		and	r0, r0, #3
 253 0008 7047     		bx	lr
 254              	.L27:
 255 000a 00BF     		.align	2
 256              	.L26:
 257 000c 7D640040 		.word	1073767549
 258              		.cfi_endproc
 259              	.LFE11:
 260              		.size	TEST_ReadDeadTime, .-TEST_ReadDeadTime
 261              		.section	.text.TEST_SetInterruptMode,"ax",%progbits
 262              		.align	2
 263              		.global	TEST_SetInterruptMode
 264              		.thumb
 265              		.thumb_func
 266              		.type	TEST_SetInterruptMode, %function
 267              	TEST_SetInterruptMode:
 268              	.LFB12:
 664:Generated_Source\PSoC5/TEST.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/TEST.c **** 
 666:Generated_Source\PSoC5/TEST.c **** #if (TEST_UseStatus || TEST_UsingFixedFunction)
 667:Generated_Source\PSoC5/TEST.c **** 
 668:Generated_Source\PSoC5/TEST.c **** 
 669:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_SetInterruptMode
 671:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/TEST.c ****     *
 673:Generated_Source\PSoC5/TEST.c ****     * Summary:
 674:Generated_Source\PSoC5/TEST.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/TEST.c ****     *  source status register.
 676:Generated_Source\PSoC5/TEST.c ****     *
 677:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 678:Generated_Source\PSoC5/TEST.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/TEST.c ****     *
 680:Generated_Source\PSoC5/TEST.c ****     * Return:
 681:Generated_Source\PSoC5/TEST.c ****     *  None
 682:Generated_Source\PSoC5/TEST.c ****     *
 683:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/TEST.c ****     void TEST_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/TEST.c ****     {
 269              		.loc 1 685 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL6:
 686:Generated_Source\PSoC5/TEST.c ****         CY_SET_REG8(TEST_STATUS_MASK_PTR, interruptMode);
 275              		.loc 1 686 0
 276 0000 014B     		ldr	r3, .L29
 277 0002 1870     		strb	r0, [r3]
 278 0004 7047     		bx	lr
 279              	.L30:
 280 0006 00BF     		.align	2
 281              	.L29:
 282 0008 83640040 		.word	1073767555
 283              		.cfi_endproc
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 18


 284              	.LFE12:
 285              		.size	TEST_SetInterruptMode, .-TEST_SetInterruptMode
 286              		.section	.text.TEST_ReadStatusRegister,"ax",%progbits
 287              		.align	2
 288              		.global	TEST_ReadStatusRegister
 289              		.thumb
 290              		.thumb_func
 291              		.type	TEST_ReadStatusRegister, %function
 292              	TEST_ReadStatusRegister:
 293              	.LFB13:
 687:Generated_Source\PSoC5/TEST.c ****     }
 688:Generated_Source\PSoC5/TEST.c **** 
 689:Generated_Source\PSoC5/TEST.c **** 
 690:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadStatusRegister
 692:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/TEST.c ****     *
 694:Generated_Source\PSoC5/TEST.c ****     * Summary:
 695:Generated_Source\PSoC5/TEST.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/TEST.c ****     *
 697:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 698:Generated_Source\PSoC5/TEST.c ****     *  None
 699:Generated_Source\PSoC5/TEST.c ****     *
 700:Generated_Source\PSoC5/TEST.c ****     * Return:
 701:Generated_Source\PSoC5/TEST.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/TEST.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/TEST.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/TEST.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/TEST.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/TEST.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/TEST.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/TEST.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/TEST.c ****     *
 710:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/TEST.c ****     uint8 TEST_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/TEST.c ****     {
 294              		.loc 1 712 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 713:Generated_Source\PSoC5/TEST.c ****         return (CY_GET_REG8(TEST_STATUS_PTR));
 299              		.loc 1 713 0
 300 0000 014B     		ldr	r3, .L32
 301 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/TEST.c ****     }
 302              		.loc 1 714 0
 303 0004 7047     		bx	lr
 304              	.L33:
 305 0006 00BF     		.align	2
 306              	.L32:
 307 0008 63640040 		.word	1073767523
 308              		.cfi_endproc
 309              	.LFE13:
 310              		.size	TEST_ReadStatusRegister, .-TEST_ReadStatusRegister
 311              		.section	.text.TEST_ReadControlRegister,"ax",%progbits
 312              		.align	2
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 19


 313              		.global	TEST_ReadControlRegister
 314              		.thumb
 315              		.thumb_func
 316              		.type	TEST_ReadControlRegister, %function
 317              	TEST_ReadControlRegister:
 318              	.LFB14:
 715:Generated_Source\PSoC5/TEST.c **** 
 716:Generated_Source\PSoC5/TEST.c **** #endif /* (TEST_UseStatus || TEST_UsingFixedFunction) */
 717:Generated_Source\PSoC5/TEST.c **** 
 718:Generated_Source\PSoC5/TEST.c **** 
 719:Generated_Source\PSoC5/TEST.c **** #if (TEST_UseControl)
 720:Generated_Source\PSoC5/TEST.c **** 
 721:Generated_Source\PSoC5/TEST.c **** 
 722:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadControlRegister
 724:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/TEST.c ****     *
 726:Generated_Source\PSoC5/TEST.c ****     * Summary:
 727:Generated_Source\PSoC5/TEST.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/TEST.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/TEST.c ****     *
 730:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 731:Generated_Source\PSoC5/TEST.c ****     *  None
 732:Generated_Source\PSoC5/TEST.c ****     *
 733:Generated_Source\PSoC5/TEST.c ****     * Return:
 734:Generated_Source\PSoC5/TEST.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/TEST.c ****     *
 736:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/TEST.c ****     uint8 TEST_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/TEST.c ****     {
 319              		.loc 1 738 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 739:Generated_Source\PSoC5/TEST.c ****         uint8 result;
 740:Generated_Source\PSoC5/TEST.c **** 
 741:Generated_Source\PSoC5/TEST.c ****         result = CY_GET_REG8(TEST_CONTROL_PTR);
 324              		.loc 1 741 0
 325 0000 014B     		ldr	r3, .L35
 326 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 327              	.LVL7:
 742:Generated_Source\PSoC5/TEST.c ****         return (result);
 743:Generated_Source\PSoC5/TEST.c ****     }
 328              		.loc 1 743 0
 329 0004 7047     		bx	lr
 330              	.L36:
 331 0006 00BF     		.align	2
 332              	.L35:
 333 0008 73640040 		.word	1073767539
 334              		.cfi_endproc
 335              	.LFE14:
 336              		.size	TEST_ReadControlRegister, .-TEST_ReadControlRegister
 337              		.section	.text.TEST_WriteControlRegister,"ax",%progbits
 338              		.align	2
 339              		.global	TEST_WriteControlRegister
 340              		.thumb
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 20


 341              		.thumb_func
 342              		.type	TEST_WriteControlRegister, %function
 343              	TEST_WriteControlRegister:
 344              	.LFB15:
 744:Generated_Source\PSoC5/TEST.c **** 
 745:Generated_Source\PSoC5/TEST.c **** 
 746:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_WriteControlRegister
 748:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/TEST.c ****     *
 750:Generated_Source\PSoC5/TEST.c ****     * Summary:
 751:Generated_Source\PSoC5/TEST.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/TEST.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/TEST.c ****     *
 754:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 755:Generated_Source\PSoC5/TEST.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/TEST.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/TEST.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/TEST.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/TEST.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/TEST.c ****     *
 761:Generated_Source\PSoC5/TEST.c ****     * Return:
 762:Generated_Source\PSoC5/TEST.c ****     *  None
 763:Generated_Source\PSoC5/TEST.c ****     *
 764:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/TEST.c ****     void TEST_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/TEST.c ****     {
 345              		.loc 1 766 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.LVL8:
 767:Generated_Source\PSoC5/TEST.c ****         CY_SET_REG8(TEST_CONTROL_PTR, control);
 351              		.loc 1 767 0
 352 0000 014B     		ldr	r3, .L38
 353 0002 1870     		strb	r0, [r3]
 354 0004 7047     		bx	lr
 355              	.L39:
 356 0006 00BF     		.align	2
 357              	.L38:
 358 0008 73640040 		.word	1073767539
 359              		.cfi_endproc
 360              	.LFE15:
 361              		.size	TEST_WriteControlRegister, .-TEST_WriteControlRegister
 362              		.section	.text.TEST_ReadCapture,"ax",%progbits
 363              		.align	2
 364              		.global	TEST_ReadCapture
 365              		.thumb
 366              		.thumb_func
 367              		.type	TEST_ReadCapture, %function
 368              	TEST_ReadCapture:
 369              	.LFB16:
 768:Generated_Source\PSoC5/TEST.c ****     }
 769:Generated_Source\PSoC5/TEST.c **** 
 770:Generated_Source\PSoC5/TEST.c **** #endif /* (TEST_UseControl) */
 771:Generated_Source\PSoC5/TEST.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 21


 772:Generated_Source\PSoC5/TEST.c **** 
 773:Generated_Source\PSoC5/TEST.c **** #if (!TEST_UsingFixedFunction)
 774:Generated_Source\PSoC5/TEST.c **** 
 775:Generated_Source\PSoC5/TEST.c **** 
 776:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadCapture
 778:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/TEST.c ****     *
 780:Generated_Source\PSoC5/TEST.c ****     * Summary:
 781:Generated_Source\PSoC5/TEST.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/TEST.c ****     *
 783:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 784:Generated_Source\PSoC5/TEST.c ****     *  None
 785:Generated_Source\PSoC5/TEST.c ****     *
 786:Generated_Source\PSoC5/TEST.c ****     * Return:
 787:Generated_Source\PSoC5/TEST.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/TEST.c ****     *
 789:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/TEST.c ****     uint16 TEST_ReadCapture(void) 
 791:Generated_Source\PSoC5/TEST.c ****     {
 370              		.loc 1 791 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 792:Generated_Source\PSoC5/TEST.c ****         return (CY_GET_REG16(TEST_CAPTURE_LSB_PTR));
 375              		.loc 1 792 0
 376 0000 014B     		ldr	r3, .L41
 377 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/TEST.c ****     }
 378              		.loc 1 793 0
 379 0004 80B2     		uxth	r0, r0
 380 0006 7047     		bx	lr
 381              	.L42:
 382              		.align	2
 383              	.L41:
 384 0008 AC680040 		.word	1073768620
 385              		.cfi_endproc
 386              	.LFE16:
 387              		.size	TEST_ReadCapture, .-TEST_ReadCapture
 388              		.section	.text.TEST_ClearFIFO,"ax",%progbits
 389              		.align	2
 390              		.global	TEST_ClearFIFO
 391              		.thumb
 392              		.thumb_func
 393              		.type	TEST_ClearFIFO, %function
 394              	TEST_ClearFIFO:
 395              	.LFB6:
 454:Generated_Source\PSoC5/TEST.c ****             while(0u != (TEST_ReadStatusRegister() & TEST_STATUS_FIFONEMPTY))
 396              		.loc 1 454 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 22


 455:Generated_Source\PSoC5/TEST.c ****             {
 404              		.loc 1 455 0
 405 0002 01E0     		b	.L44
 406              	.L45:
 457:Generated_Source\PSoC5/TEST.c ****             }
 407              		.loc 1 457 0
 408 0004 FFF7FEFF 		bl	TEST_ReadCapture
 409              	.LVL9:
 410              	.L44:
 455:Generated_Source\PSoC5/TEST.c ****             {
 411              		.loc 1 455 0
 412 0008 FFF7FEFF 		bl	TEST_ReadStatusRegister
 413              	.LVL10:
 414 000c 10F0100F 		tst	r0, #16
 415 0010 F8D1     		bne	.L45
 459:Generated_Source\PSoC5/TEST.c **** 
 416              		.loc 1 459 0
 417 0012 08BD     		pop	{r3, pc}
 418              		.cfi_endproc
 419              	.LFE6:
 420              		.size	TEST_ClearFIFO, .-TEST_ClearFIFO
 421              		.section	.text.TEST_Init,"ax",%progbits
 422              		.align	2
 423              		.global	TEST_Init
 424              		.thumb
 425              		.thumb_func
 426              		.type	TEST_Init, %function
 427              	TEST_Init:
 428              	.LFB1:
  85:Generated_Source\PSoC5/TEST.c ****     #if (TEST_UsingFixedFunction || TEST_UseControl)
 429              		.loc 1 85 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 08B5     		push	{r3, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/TEST.c ****                 ((uint8)(~TEST_CTRL_CMPMODE1_MASK));
 437              		.loc 1 117 0
 438 0002 184A     		ldr	r2, .L49
 439 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 440 0006 03F0C003 		and	r3, r3, #192
 441              	.LVL11:
 119:Generated_Source\PSoC5/TEST.c ****                                    TEST_DEFAULT_COMPARE1_MODE;
 442              		.loc 1 119 0
 443 000a 43F01903 		orr	r3, r3, #25
 444              	.LVL12:
 445 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/TEST.c ****             TEST_AUX_CONTROLDP1 |= (TEST_AUX_CTRL_FIFO0_CLR);
 446              		.loc 1 129 0
 447 0010 2332     		adds	r2, r2, #35
 448 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 449 0014 43F00103 		orr	r3, r3, #1
 450 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_Resolution == 8) */
 451              		.loc 1 130 0
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 23


 452 001a 0132     		adds	r2, r2, #1
 453 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 454 001e 43F00103 		orr	r3, r3, #1
 455 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/TEST.c ****     #endif /* (!TEST_UsingFixedFunction) */
 456              		.loc 1 133 0
 457 0024 40F2FF10 		movw	r0, #511
 458 0028 FFF7FEFF 		bl	TEST_WriteCounter
 459              	.LVL13:
 136:Generated_Source\PSoC5/TEST.c **** 
 460              		.loc 1 136 0
 461 002c 40F2FF10 		movw	r0, #511
 462 0030 FFF7FEFF 		bl	TEST_WritePeriod
 463              	.LVL14:
 141:Generated_Source\PSoC5/TEST.c ****             TEST_WriteCompare2(TEST_INIT_COMPARE_VALUE2);
 464              		.loc 1 141 0
 465 0034 FF20     		movs	r0, #255
 466 0036 FFF7FEFF 		bl	TEST_WriteCompare1
 467              	.LVL15:
 142:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UseOneCompareMode) */
 468              		.loc 1 142 0
 469 003a FF20     		movs	r0, #255
 470 003c FFF7FEFF 		bl	TEST_WriteCompare2
 471              	.LVL16:
 150:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_DeadBandUsed) */
 472              		.loc 1 150 0
 473 0040 0120     		movs	r0, #1
 474 0042 FFF7FEFF 		bl	TEST_WriteDeadTime
 475              	.LVL17:
 154:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UseStatus || TEST_UsingFixedFunction) */
 476              		.loc 1 154 0
 477 0046 0020     		movs	r0, #0
 478 0048 FFF7FEFF 		bl	TEST_SetInterruptMode
 479              	.LVL18:
 167:Generated_Source\PSoC5/TEST.c ****             /* Use the interrupt output of the status register for IRQ output */
 480              		.loc 1 167 0
 481 004c FFF7FEFF 		bl	CyEnterCriticalSection
 482              	.LVL19:
 169:Generated_Source\PSoC5/TEST.c **** 
 483              		.loc 1 169 0
 484 0050 054A     		ldr	r2, .L49+4
 485 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 486 0054 43F01003 		orr	r3, r3, #16
 487 0058 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/TEST.c **** 
 488              		.loc 1 172 0
 489 005a FFF7FEFF 		bl	CyExitCriticalSection
 490              	.LVL20:
 176:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UseStatus) */
 491              		.loc 1 176 0
 492 005e FFF7FEFF 		bl	TEST_ClearFIFO
 493              	.LVL21:
 494 0062 08BD     		pop	{r3, pc}
 495              	.L50:
 496              		.align	2
 497              	.L49:
 498 0064 73640040 		.word	1073767539
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 24


 499 0068 93640040 		.word	1073767571
 500              		.cfi_endproc
 501              	.LFE1:
 502              		.size	TEST_Init, .-TEST_Init
 503              		.section	.text.TEST_Start,"ax",%progbits
 504              		.align	2
 505              		.global	TEST_Start
 506              		.thumb
 507              		.thumb_func
 508              		.type	TEST_Start, %function
 509              	TEST_Start:
 510              	.LFB0:
  56:Generated_Source\PSoC5/TEST.c ****     /* If not Initialized then initialize all required hardware and software */
 511              		.loc 1 56 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 08B5     		push	{r3, lr}
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 3, -8
 518              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/TEST.c ****     {
 519              		.loc 1 58 0
 520 0002 054B     		ldr	r3, .L54
 521 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 522 0006 23B9     		cbnz	r3, .L52
  60:Generated_Source\PSoC5/TEST.c ****         TEST_initVar = 1u;
 523              		.loc 1 60 0
 524 0008 FFF7FEFF 		bl	TEST_Init
 525              	.LVL22:
  61:Generated_Source\PSoC5/TEST.c ****     }
 526              		.loc 1 61 0
 527 000c 0122     		movs	r2, #1
 528 000e 024B     		ldr	r3, .L54
 529 0010 1A70     		strb	r2, [r3]
 530              	.L52:
  63:Generated_Source\PSoC5/TEST.c **** 
 531              		.loc 1 63 0
 532 0012 FFF7FEFF 		bl	TEST_Enable
 533              	.LVL23:
 534 0016 08BD     		pop	{r3, pc}
 535              	.L55:
 536              		.align	2
 537              	.L54:
 538 0018 00000000 		.word	.LANCHOR0
 539              		.cfi_endproc
 540              	.LFE0:
 541              		.size	TEST_Start, .-TEST_Start
 542              		.section	.text.TEST_ReadCompare1,"ax",%progbits
 543              		.align	2
 544              		.global	TEST_ReadCompare1
 545              		.thumb
 546              		.thumb_func
 547              		.type	TEST_ReadCompare1, %function
 548              	TEST_ReadCompare1:
 549              	.LFB17:
 794:Generated_Source\PSoC5/TEST.c **** 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 25


 795:Generated_Source\PSoC5/TEST.c **** #endif /* (!TEST_UsingFixedFunction) */
 796:Generated_Source\PSoC5/TEST.c **** 
 797:Generated_Source\PSoC5/TEST.c **** 
 798:Generated_Source\PSoC5/TEST.c **** #if (TEST_UseOneCompareMode)
 799:Generated_Source\PSoC5/TEST.c **** 
 800:Generated_Source\PSoC5/TEST.c **** 
 801:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadCompare
 803:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/TEST.c ****     *
 805:Generated_Source\PSoC5/TEST.c ****     * Summary:
 806:Generated_Source\PSoC5/TEST.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/TEST.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/TEST.c ****     *
 809:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 810:Generated_Source\PSoC5/TEST.c ****     *  None
 811:Generated_Source\PSoC5/TEST.c ****     *
 812:Generated_Source\PSoC5/TEST.c ****     * Return:
 813:Generated_Source\PSoC5/TEST.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/TEST.c ****     *
 815:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/TEST.c ****     uint16 TEST_ReadCompare(void) 
 817:Generated_Source\PSoC5/TEST.c ****     {
 818:Generated_Source\PSoC5/TEST.c ****         #if(TEST_UsingFixedFunction)
 819:Generated_Source\PSoC5/TEST.c ****             return ((uint16)CY_GET_REG16(TEST_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/TEST.c ****         #else
 821:Generated_Source\PSoC5/TEST.c ****             return (CY_GET_REG16(TEST_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/TEST.c ****         #endif /* (TEST_UsingFixedFunction) */
 823:Generated_Source\PSoC5/TEST.c ****     }
 824:Generated_Source\PSoC5/TEST.c **** 
 825:Generated_Source\PSoC5/TEST.c **** #else
 826:Generated_Source\PSoC5/TEST.c **** 
 827:Generated_Source\PSoC5/TEST.c **** 
 828:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadCompare1
 830:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/TEST.c ****     *
 832:Generated_Source\PSoC5/TEST.c ****     * Summary:
 833:Generated_Source\PSoC5/TEST.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/TEST.c ****     *
 835:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 836:Generated_Source\PSoC5/TEST.c ****     *  None
 837:Generated_Source\PSoC5/TEST.c ****     *
 838:Generated_Source\PSoC5/TEST.c ****     * Return:
 839:Generated_Source\PSoC5/TEST.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/TEST.c ****     *
 841:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/TEST.c ****     uint16 TEST_ReadCompare1(void) 
 843:Generated_Source\PSoC5/TEST.c ****     {
 550              		.loc 1 843 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 844:Generated_Source\PSoC5/TEST.c ****         return (CY_GET_REG16(TEST_COMPARE1_LSB_PTR));
 555              		.loc 1 844 0
 556 0000 014B     		ldr	r3, .L57
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 26


 557 0002 1888     		ldrh	r0, [r3]
 845:Generated_Source\PSoC5/TEST.c ****     }
 558              		.loc 1 845 0
 559 0004 80B2     		uxth	r0, r0
 560 0006 7047     		bx	lr
 561              	.L58:
 562              		.align	2
 563              	.L57:
 564 0008 4C680040 		.word	1073768524
 565              		.cfi_endproc
 566              	.LFE17:
 567              		.size	TEST_ReadCompare1, .-TEST_ReadCompare1
 568              		.section	.text.TEST_ReadCompare2,"ax",%progbits
 569              		.align	2
 570              		.global	TEST_ReadCompare2
 571              		.thumb
 572              		.thumb_func
 573              		.type	TEST_ReadCompare2, %function
 574              	TEST_ReadCompare2:
 575              	.LFB18:
 846:Generated_Source\PSoC5/TEST.c **** 
 847:Generated_Source\PSoC5/TEST.c **** 
 848:Generated_Source\PSoC5/TEST.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/TEST.c ****     * Function Name: TEST_ReadCompare2
 850:Generated_Source\PSoC5/TEST.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/TEST.c ****     *
 852:Generated_Source\PSoC5/TEST.c ****     * Summary:
 853:Generated_Source\PSoC5/TEST.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/TEST.c ****     *
 855:Generated_Source\PSoC5/TEST.c ****     * Parameters:
 856:Generated_Source\PSoC5/TEST.c ****     *  None
 857:Generated_Source\PSoC5/TEST.c ****     *
 858:Generated_Source\PSoC5/TEST.c ****     * Return:
 859:Generated_Source\PSoC5/TEST.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/TEST.c ****     *
 861:Generated_Source\PSoC5/TEST.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/TEST.c ****     uint16 TEST_ReadCompare2(void) 
 863:Generated_Source\PSoC5/TEST.c ****     {
 576              		.loc 1 863 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 864:Generated_Source\PSoC5/TEST.c ****         return (CY_GET_REG16(TEST_COMPARE2_LSB_PTR));
 581              		.loc 1 864 0
 582 0000 014B     		ldr	r3, .L60
 583 0002 1888     		ldrh	r0, [r3]
 865:Generated_Source\PSoC5/TEST.c ****     }
 584              		.loc 1 865 0
 585 0004 80B2     		uxth	r0, r0
 586 0006 7047     		bx	lr
 587              	.L61:
 588              		.align	2
 589              	.L60:
 590 0008 6C680040 		.word	1073768556
 591              		.cfi_endproc
 592              	.LFE18:
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 27


 593              		.size	TEST_ReadCompare2, .-TEST_ReadCompare2
 594              		.section	.text.TEST_ReadPeriod,"ax",%progbits
 595              		.align	2
 596              		.global	TEST_ReadPeriod
 597              		.thumb
 598              		.thumb_func
 599              		.type	TEST_ReadPeriod, %function
 600              	TEST_ReadPeriod:
 601              	.LFB19:
 866:Generated_Source\PSoC5/TEST.c **** 
 867:Generated_Source\PSoC5/TEST.c **** #endif /* (TEST_UseOneCompareMode) */
 868:Generated_Source\PSoC5/TEST.c **** 
 869:Generated_Source\PSoC5/TEST.c **** 
 870:Generated_Source\PSoC5/TEST.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/TEST.c **** * Function Name: TEST_ReadPeriod
 872:Generated_Source\PSoC5/TEST.c **** ********************************************************************************
 873:Generated_Source\PSoC5/TEST.c **** *
 874:Generated_Source\PSoC5/TEST.c **** * Summary:
 875:Generated_Source\PSoC5/TEST.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/TEST.c **** *
 877:Generated_Source\PSoC5/TEST.c **** * Parameters:
 878:Generated_Source\PSoC5/TEST.c **** *  None
 879:Generated_Source\PSoC5/TEST.c **** *
 880:Generated_Source\PSoC5/TEST.c **** * Return:
 881:Generated_Source\PSoC5/TEST.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/TEST.c **** *
 883:Generated_Source\PSoC5/TEST.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/TEST.c **** uint16 TEST_ReadPeriod(void) 
 885:Generated_Source\PSoC5/TEST.c **** {
 602              		.loc 1 885 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 886:Generated_Source\PSoC5/TEST.c ****     #if(TEST_UsingFixedFunction)
 887:Generated_Source\PSoC5/TEST.c ****         return ((uint16)CY_GET_REG16(TEST_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/TEST.c ****     #else
 889:Generated_Source\PSoC5/TEST.c ****         return (CY_GET_REG16(TEST_PERIOD_LSB_PTR));
 607              		.loc 1 889 0
 608 0000 014B     		ldr	r3, .L63
 609 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/TEST.c ****     #endif /* (TEST_UsingFixedFunction) */
 891:Generated_Source\PSoC5/TEST.c **** }
 610              		.loc 1 891 0
 611 0004 80B2     		uxth	r0, r0
 612 0006 7047     		bx	lr
 613              	.L64:
 614              		.align	2
 615              	.L63:
 616 0008 8C680040 		.word	1073768588
 617              		.cfi_endproc
 618              	.LFE19:
 619              		.size	TEST_ReadPeriod, .-TEST_ReadPeriod
 620              		.global	TEST_initVar
 621              		.bss
 622              		.set	.LANCHOR0,. + 0
 623              		.type	TEST_initVar, %object
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 28


 624              		.size	TEST_initVar, 1
 625              	TEST_initVar:
 626 0000 00       		.space	1
 627              		.text
 628              	.Letext0:
 629              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 630              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 631              		.section	.debug_info,"",%progbits
 632              	.Ldebug_info0:
 633 0000 EE030000 		.4byte	0x3ee
 634 0004 0400     		.2byte	0x4
 635 0006 00000000 		.4byte	.Ldebug_abbrev0
 636 000a 04       		.byte	0x4
 637 000b 01       		.uleb128 0x1
 638 000c 58010000 		.4byte	.LASF48
 639 0010 0C       		.byte	0xc
 640 0011 3A010000 		.4byte	.LASF49
 641 0015 63000000 		.4byte	.LASF50
 642 0019 00000000 		.4byte	.Ldebug_ranges0+0
 643 001d 00000000 		.4byte	0
 644 0021 00000000 		.4byte	.Ldebug_line0
 645 0025 02       		.uleb128 0x2
 646 0026 01       		.byte	0x1
 647 0027 06       		.byte	0x6
 648 0028 60030000 		.4byte	.LASF0
 649 002c 02       		.uleb128 0x2
 650 002d 01       		.byte	0x1
 651 002e 08       		.byte	0x8
 652 002f 40020000 		.4byte	.LASF1
 653 0033 02       		.uleb128 0x2
 654 0034 02       		.byte	0x2
 655 0035 05       		.byte	0x5
 656 0036 0C030000 		.4byte	.LASF2
 657 003a 02       		.uleb128 0x2
 658 003b 02       		.byte	0x2
 659 003c 07       		.byte	0x7
 660 003d B2000000 		.4byte	.LASF3
 661 0041 02       		.uleb128 0x2
 662 0042 04       		.byte	0x4
 663 0043 05       		.byte	0x5
 664 0044 47030000 		.4byte	.LASF4
 665 0048 02       		.uleb128 0x2
 666 0049 04       		.byte	0x4
 667 004a 07       		.byte	0x7
 668 004b 0F020000 		.4byte	.LASF5
 669 004f 02       		.uleb128 0x2
 670 0050 08       		.byte	0x8
 671 0051 05       		.byte	0x5
 672 0052 DE020000 		.4byte	.LASF6
 673 0056 02       		.uleb128 0x2
 674 0057 08       		.byte	0x8
 675 0058 07       		.byte	0x7
 676 0059 23010000 		.4byte	.LASF7
 677 005d 03       		.uleb128 0x3
 678 005e 04       		.byte	0x4
 679 005f 05       		.byte	0x5
 680 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 29


 681 0064 02       		.uleb128 0x2
 682 0065 04       		.byte	0x4
 683 0066 07       		.byte	0x7
 684 0067 7F020000 		.4byte	.LASF8
 685 006b 04       		.uleb128 0x4
 686 006c 21020000 		.4byte	.LASF9
 687 0070 02       		.byte	0x2
 688 0071 E401     		.2byte	0x1e4
 689 0073 2C000000 		.4byte	0x2c
 690 0077 04       		.uleb128 0x4
 691 0078 61020000 		.4byte	.LASF10
 692 007c 02       		.byte	0x2
 693 007d E501     		.2byte	0x1e5
 694 007f 3A000000 		.4byte	0x3a
 695 0083 02       		.uleb128 0x2
 696 0084 04       		.byte	0x4
 697 0085 04       		.byte	0x4
 698 0086 3E000000 		.4byte	.LASF11
 699 008a 02       		.uleb128 0x2
 700 008b 08       		.byte	0x8
 701 008c 04       		.byte	0x4
 702 008d 4E020000 		.4byte	.LASF12
 703 0091 02       		.uleb128 0x2
 704 0092 01       		.byte	0x1
 705 0093 08       		.byte	0x8
 706 0094 50030000 		.4byte	.LASF13
 707 0098 04       		.uleb128 0x4
 708 0099 B3020000 		.4byte	.LASF14
 709 009d 02       		.byte	0x2
 710 009e 8E02     		.2byte	0x28e
 711 00a0 A4000000 		.4byte	0xa4
 712 00a4 05       		.uleb128 0x5
 713 00a5 6B000000 		.4byte	0x6b
 714 00a9 04       		.uleb128 0x4
 715 00aa 00000000 		.4byte	.LASF15
 716 00ae 02       		.byte	0x2
 717 00af 8F02     		.2byte	0x28f
 718 00b1 B5000000 		.4byte	0xb5
 719 00b5 05       		.uleb128 0x5
 720 00b6 77000000 		.4byte	0x77
 721 00ba 02       		.uleb128 0x2
 722 00bb 08       		.byte	0x8
 723 00bc 04       		.byte	0x4
 724 00bd B8020000 		.4byte	.LASF16
 725 00c1 02       		.uleb128 0x2
 726 00c2 04       		.byte	0x4
 727 00c3 07       		.byte	0x7
 728 00c4 C4020000 		.4byte	.LASF17
 729 00c8 06       		.uleb128 0x6
 730 00c9 55020000 		.4byte	.LASF18
 731 00cd 01       		.byte	0x1
 732 00ce C7       		.byte	0xc7
 733 00cf 00000000 		.4byte	.LFB2
 734 00d3 10000000 		.4byte	.LFE2-.LFB2
 735 00d7 01       		.uleb128 0x1
 736 00d8 9C       		.byte	0x9c
 737 00d9 06       		.uleb128 0x6
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 30


 738 00da A9020000 		.4byte	.LASF19
 739 00de 01       		.byte	0x1
 740 00df E9       		.byte	0xe9
 741 00e0 00000000 		.4byte	.LFB3
 742 00e4 10000000 		.4byte	.LFE3-.LFB3
 743 00e8 01       		.uleb128 0x1
 744 00e9 9C       		.byte	0x9c
 745 00ea 07       		.uleb128 0x7
 746 00eb FA020000 		.4byte	.LASF20
 747 00ef 01       		.byte	0x1
 748 00f0 9301     		.2byte	0x193
 749 00f2 00000000 		.4byte	.LFB4
 750 00f6 0C000000 		.4byte	.LFE4-.LFB4
 751 00fa 01       		.uleb128 0x1
 752 00fb 9C       		.byte	0x9c
 753 00fc 0F010000 		.4byte	0x10f
 754 0100 08       		.uleb128 0x8
 755 0101 1B010000 		.4byte	.LASF22
 756 0105 01       		.byte	0x1
 757 0106 9301     		.2byte	0x193
 758 0108 77000000 		.4byte	0x77
 759 010c 01       		.uleb128 0x1
 760 010d 50       		.byte	0x50
 761 010e 00       		.byte	0
 762 010f 09       		.uleb128 0x9
 763 0110 F6000000 		.4byte	.LASF29
 764 0114 01       		.byte	0x1
 765 0115 A901     		.2byte	0x1a9
 766 0117 77000000 		.4byte	0x77
 767 011b 00000000 		.4byte	.LFB5
 768 011f 14000000 		.4byte	.LFE5-.LFB5
 769 0123 01       		.uleb128 0x1
 770 0124 9C       		.byte	0x9c
 771 0125 07       		.uleb128 0x7
 772 0126 2F020000 		.4byte	.LASF21
 773 012a 01       		.byte	0x1
 774 012b E201     		.2byte	0x1e2
 775 012d 00000000 		.4byte	.LFB7
 776 0131 0C000000 		.4byte	.LFE7-.LFB7
 777 0135 01       		.uleb128 0x1
 778 0136 9C       		.byte	0x9c
 779 0137 4A010000 		.4byte	0x14a
 780 013b 08       		.uleb128 0x8
 781 013c AB000000 		.4byte	.LASF23
 782 0140 01       		.byte	0x1
 783 0141 E201     		.2byte	0x1e2
 784 0143 77000000 		.4byte	0x77
 785 0147 01       		.uleb128 0x1
 786 0148 50       		.byte	0x50
 787 0149 00       		.byte	0
 788 014a 07       		.uleb128 0x7
 789 014b 06000000 		.4byte	.LASF24
 790 014f 01       		.byte	0x1
 791 0150 2B02     		.2byte	0x22b
 792 0152 00000000 		.4byte	.LFB8
 793 0156 0C000000 		.4byte	.LFE8-.LFB8
 794 015a 01       		.uleb128 0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 31


 795 015b 9C       		.byte	0x9c
 796 015c 6F010000 		.4byte	0x16f
 797 0160 08       		.uleb128 0x8
 798 0161 6C030000 		.4byte	.LASF25
 799 0165 01       		.byte	0x1
 800 0166 2B02     		.2byte	0x22b
 801 0168 77000000 		.4byte	0x77
 802 016c 01       		.uleb128 0x1
 803 016d 50       		.byte	0x50
 804 016e 00       		.byte	0
 805 016f 07       		.uleb128 0x7
 806 0170 19000000 		.4byte	.LASF26
 807 0174 01       		.byte	0x1
 808 0175 4802     		.2byte	0x248
 809 0177 00000000 		.4byte	.LFB9
 810 017b 0C000000 		.4byte	.LFE9-.LFB9
 811 017f 01       		.uleb128 0x1
 812 0180 9C       		.byte	0x9c
 813 0181 94010000 		.4byte	0x194
 814 0185 08       		.uleb128 0x8
 815 0186 6C030000 		.4byte	.LASF25
 816 018a 01       		.byte	0x1
 817 018b 4802     		.2byte	0x248
 818 018d 77000000 		.4byte	0x77
 819 0191 01       		.uleb128 0x1
 820 0192 50       		.byte	0x50
 821 0193 00       		.byte	0
 822 0194 07       		.uleb128 0x7
 823 0195 93030000 		.4byte	.LASF27
 824 0199 01       		.byte	0x1
 825 019a 6402     		.2byte	0x264
 826 019c 00000000 		.4byte	.LFB10
 827 01a0 1C000000 		.4byte	.LFE10-.LFB10
 828 01a4 01       		.uleb128 0x1
 829 01a5 9C       		.byte	0x9c
 830 01a6 BB010000 		.4byte	0x1bb
 831 01aa 0A       		.uleb128 0xa
 832 01ab 8A030000 		.4byte	.LASF28
 833 01af 01       		.byte	0x1
 834 01b0 6402     		.2byte	0x264
 835 01b2 6B000000 		.4byte	0x6b
 836 01b6 00000000 		.4byte	.LLST0
 837 01ba 00       		.byte	0
 838 01bb 09       		.uleb128 0x9
 839 01bc E6010000 		.4byte	.LASF30
 840 01c0 01       		.byte	0x1
 841 01c1 8802     		.2byte	0x288
 842 01c3 6B000000 		.4byte	0x6b
 843 01c7 00000000 		.4byte	.LFB11
 844 01cb 10000000 		.4byte	.LFE11-.LFB11
 845 01cf 01       		.uleb128 0x1
 846 01d0 9C       		.byte	0x9c
 847 01d1 07       		.uleb128 0x7
 848 01d2 74030000 		.4byte	.LASF31
 849 01d6 01       		.byte	0x1
 850 01d7 AC02     		.2byte	0x2ac
 851 01d9 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 32


 852 01dd 0C000000 		.4byte	.LFE12-.LFB12
 853 01e1 01       		.uleb128 0x1
 854 01e2 9C       		.byte	0x9c
 855 01e3 F6010000 		.4byte	0x1f6
 856 01e7 08       		.uleb128 0x8
 857 01e8 EC020000 		.4byte	.LASF32
 858 01ec 01       		.byte	0x1
 859 01ed AC02     		.2byte	0x2ac
 860 01ef 6B000000 		.4byte	0x6b
 861 01f3 01       		.uleb128 0x1
 862 01f4 50       		.byte	0x50
 863 01f5 00       		.byte	0
 864 01f6 09       		.uleb128 0x9
 865 01f7 C5000000 		.4byte	.LASF33
 866 01fb 01       		.byte	0x1
 867 01fc C702     		.2byte	0x2c7
 868 01fe 6B000000 		.4byte	0x6b
 869 0202 00000000 		.4byte	.LFB13
 870 0206 0C000000 		.4byte	.LFE13-.LFB13
 871 020a 01       		.uleb128 0x1
 872 020b 9C       		.byte	0x9c
 873 020c 0B       		.uleb128 0xb
 874 020d DD000000 		.4byte	.LASF51
 875 0211 01       		.byte	0x1
 876 0212 E102     		.2byte	0x2e1
 877 0214 6B000000 		.4byte	0x6b
 878 0218 00000000 		.4byte	.LFB14
 879 021c 0C000000 		.4byte	.LFE14-.LFB14
 880 0220 01       		.uleb128 0x1
 881 0221 9C       		.byte	0x9c
 882 0222 35020000 		.4byte	0x235
 883 0226 0C       		.uleb128 0xc
 884 0227 A2020000 		.4byte	.LASF39
 885 022b 01       		.byte	0x1
 886 022c E302     		.2byte	0x2e3
 887 022e 6B000000 		.4byte	0x6b
 888 0232 01       		.uleb128 0x1
 889 0233 50       		.byte	0x50
 890 0234 00       		.byte	0
 891 0235 07       		.uleb128 0x7
 892 0236 1B030000 		.4byte	.LASF34
 893 023a 01       		.byte	0x1
 894 023b FD02     		.2byte	0x2fd
 895 023d 00000000 		.4byte	.LFB15
 896 0241 0C000000 		.4byte	.LFE15-.LFB15
 897 0245 01       		.uleb128 0x1
 898 0246 9C       		.byte	0x9c
 899 0247 5A020000 		.4byte	0x25a
 900 024b 08       		.uleb128 0x8
 901 024c 27020000 		.4byte	.LASF35
 902 0250 01       		.byte	0x1
 903 0251 FD02     		.2byte	0x2fd
 904 0253 6B000000 		.4byte	0x6b
 905 0257 01       		.uleb128 0x1
 906 0258 50       		.byte	0x50
 907 0259 00       		.byte	0
 908 025a 09       		.uleb128 0x9
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 33


 909 025b CD020000 		.4byte	.LASF36
 910 025f 01       		.byte	0x1
 911 0260 1603     		.2byte	0x316
 912 0262 77000000 		.4byte	0x77
 913 0266 00000000 		.4byte	.LFB16
 914 026a 0C000000 		.4byte	.LFE16-.LFB16
 915 026e 01       		.uleb128 0x1
 916 026f 9C       		.byte	0x9c
 917 0270 07       		.uleb128 0x7
 918 0271 44000000 		.4byte	.LASF37
 919 0275 01       		.byte	0x1
 920 0276 C501     		.2byte	0x1c5
 921 0278 00000000 		.4byte	.LFB6
 922 027c 14000000 		.4byte	.LFE6-.LFB6
 923 0280 01       		.uleb128 0x1
 924 0281 9C       		.byte	0x9c
 925 0282 99020000 		.4byte	0x299
 926 0286 0D       		.uleb128 0xd
 927 0287 08000000 		.4byte	.LVL9
 928 028b 5A020000 		.4byte	0x25a
 929 028f 0D       		.uleb128 0xd
 930 0290 0C000000 		.4byte	.LVL10
 931 0294 F6010000 		.4byte	0x1f6
 932 0298 00       		.byte	0
 933 0299 0E       		.uleb128 0xe
 934 029a F8010000 		.4byte	.LASF38
 935 029e 01       		.byte	0x1
 936 029f 54       		.byte	0x54
 937 02a0 00000000 		.4byte	.LFB1
 938 02a4 6C000000 		.4byte	.LFE1-.LFB1
 939 02a8 01       		.uleb128 0x1
 940 02a9 9C       		.byte	0x9c
 941 02aa 60030000 		.4byte	0x360
 942 02ae 0F       		.uleb128 0xf
 943 02af 16030000 		.4byte	.LASF40
 944 02b3 01       		.byte	0x1
 945 02b4 57       		.byte	0x57
 946 02b5 6B000000 		.4byte	0x6b
 947 02b9 21000000 		.4byte	.LLST1
 948 02bd 0F       		.uleb128 0xf
 949 02be 07010000 		.4byte	.LASF41
 950 02c2 01       		.byte	0x1
 951 02c3 5D       		.byte	0x5d
 952 02c4 6B000000 		.4byte	0x6b
 953 02c8 34000000 		.4byte	.LLST2
 954 02cc 10       		.uleb128 0x10
 955 02cd 2C000000 		.4byte	.LVL13
 956 02d1 EA000000 		.4byte	0xea
 957 02d5 E1020000 		.4byte	0x2e1
 958 02d9 11       		.uleb128 0x11
 959 02da 01       		.uleb128 0x1
 960 02db 50       		.byte	0x50
 961 02dc 03       		.uleb128 0x3
 962 02dd 0A       		.byte	0xa
 963 02de FF01     		.2byte	0x1ff
 964 02e0 00       		.byte	0
 965 02e1 10       		.uleb128 0x10
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 34


 966 02e2 34000000 		.4byte	.LVL14
 967 02e6 25010000 		.4byte	0x125
 968 02ea F6020000 		.4byte	0x2f6
 969 02ee 11       		.uleb128 0x11
 970 02ef 01       		.uleb128 0x1
 971 02f0 50       		.byte	0x50
 972 02f1 03       		.uleb128 0x3
 973 02f2 0A       		.byte	0xa
 974 02f3 FF01     		.2byte	0x1ff
 975 02f5 00       		.byte	0
 976 02f6 10       		.uleb128 0x10
 977 02f7 3A000000 		.4byte	.LVL15
 978 02fb 4A010000 		.4byte	0x14a
 979 02ff 0A030000 		.4byte	0x30a
 980 0303 11       		.uleb128 0x11
 981 0304 01       		.uleb128 0x1
 982 0305 50       		.byte	0x50
 983 0306 02       		.uleb128 0x2
 984 0307 08       		.byte	0x8
 985 0308 FF       		.byte	0xff
 986 0309 00       		.byte	0
 987 030a 10       		.uleb128 0x10
 988 030b 40000000 		.4byte	.LVL16
 989 030f 6F010000 		.4byte	0x16f
 990 0313 1E030000 		.4byte	0x31e
 991 0317 11       		.uleb128 0x11
 992 0318 01       		.uleb128 0x1
 993 0319 50       		.byte	0x50
 994 031a 02       		.uleb128 0x2
 995 031b 08       		.byte	0x8
 996 031c FF       		.byte	0xff
 997 031d 00       		.byte	0
 998 031e 10       		.uleb128 0x10
 999 031f 46000000 		.4byte	.LVL17
 1000 0323 94010000 		.4byte	0x194
 1001 0327 31030000 		.4byte	0x331
 1002 032b 11       		.uleb128 0x11
 1003 032c 01       		.uleb128 0x1
 1004 032d 50       		.byte	0x50
 1005 032e 01       		.uleb128 0x1
 1006 032f 31       		.byte	0x31
 1007 0330 00       		.byte	0
 1008 0331 10       		.uleb128 0x10
 1009 0332 4C000000 		.4byte	.LVL18
 1010 0336 D1010000 		.4byte	0x1d1
 1011 033a 44030000 		.4byte	0x344
 1012 033e 11       		.uleb128 0x11
 1013 033f 01       		.uleb128 0x1
 1014 0340 50       		.byte	0x50
 1015 0341 01       		.uleb128 0x1
 1016 0342 30       		.byte	0x30
 1017 0343 00       		.byte	0
 1018 0344 0D       		.uleb128 0xd
 1019 0345 50000000 		.4byte	.LVL19
 1020 0349 DB030000 		.4byte	0x3db
 1021 034d 0D       		.uleb128 0xd
 1022 034e 5E000000 		.4byte	.LVL20
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 35


 1023 0352 E6030000 		.4byte	0x3e6
 1024 0356 0D       		.uleb128 0xd
 1025 0357 62000000 		.4byte	.LVL21
 1026 035b 70020000 		.4byte	0x270
 1027 035f 00       		.byte	0
 1028 0360 0E       		.uleb128 0xe
 1029 0361 55030000 		.4byte	.LASF42
 1030 0365 01       		.byte	0x1
 1031 0366 37       		.byte	0x37
 1032 0367 00000000 		.4byte	.LFB0
 1033 036b 1C000000 		.4byte	.LFE0-.LFB0
 1034 036f 01       		.uleb128 0x1
 1035 0370 9C       		.byte	0x9c
 1036 0371 88030000 		.4byte	0x388
 1037 0375 0D       		.uleb128 0xd
 1038 0376 0C000000 		.4byte	.LVL22
 1039 037a 99020000 		.4byte	0x299
 1040 037e 0D       		.uleb128 0xd
 1041 037f 16000000 		.4byte	.LVL23
 1042 0383 C8000000 		.4byte	0xc8
 1043 0387 00       		.byte	0
 1044 0388 09       		.uleb128 0x9
 1045 0389 35030000 		.4byte	.LASF43
 1046 038d 01       		.byte	0x1
 1047 038e 4A03     		.2byte	0x34a
 1048 0390 77000000 		.4byte	0x77
 1049 0394 00000000 		.4byte	.LFB17
 1050 0398 0C000000 		.4byte	.LFE17-.LFB17
 1051 039c 01       		.uleb128 0x1
 1052 039d 9C       		.byte	0x9c
 1053 039e 09       		.uleb128 0x9
 1054 039f 2C000000 		.4byte	.LASF44
 1055 03a3 01       		.byte	0x1
 1056 03a4 5E03     		.2byte	0x35e
 1057 03a6 77000000 		.4byte	0x77
 1058 03aa 00000000 		.4byte	.LFB18
 1059 03ae 0C000000 		.4byte	.LFE18-.LFB18
 1060 03b2 01       		.uleb128 0x1
 1061 03b3 9C       		.byte	0x9c
 1062 03b4 09       		.uleb128 0x9
 1063 03b5 53000000 		.4byte	.LASF45
 1064 03b9 01       		.byte	0x1
 1065 03ba 7403     		.2byte	0x374
 1066 03bc 77000000 		.4byte	0x77
 1067 03c0 00000000 		.4byte	.LFB19
 1068 03c4 0C000000 		.4byte	.LFE19-.LFB19
 1069 03c8 01       		.uleb128 0x1
 1070 03c9 9C       		.byte	0x9c
 1071 03ca 12       		.uleb128 0x12
 1072 03cb 02020000 		.4byte	.LASF52
 1073 03cf 01       		.byte	0x1
 1074 03d0 20       		.byte	0x20
 1075 03d1 6B000000 		.4byte	0x6b
 1076 03d5 05       		.uleb128 0x5
 1077 03d6 03       		.byte	0x3
 1078 03d7 00000000 		.4byte	TEST_initVar
 1079 03db 13       		.uleb128 0x13
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 36


 1080 03dc 68020000 		.4byte	.LASF46
 1081 03e0 68020000 		.4byte	.LASF46
 1082 03e4 03       		.byte	0x3
 1083 03e5 7D       		.byte	0x7d
 1084 03e6 13       		.uleb128 0x13
 1085 03e7 8C020000 		.4byte	.LASF47
 1086 03eb 8C020000 		.4byte	.LASF47
 1087 03ef 03       		.byte	0x3
 1088 03f0 7E       		.byte	0x7e
 1089 03f1 00       		.byte	0
 1090              		.section	.debug_abbrev,"",%progbits
 1091              	.Ldebug_abbrev0:
 1092 0000 01       		.uleb128 0x1
 1093 0001 11       		.uleb128 0x11
 1094 0002 01       		.byte	0x1
 1095 0003 25       		.uleb128 0x25
 1096 0004 0E       		.uleb128 0xe
 1097 0005 13       		.uleb128 0x13
 1098 0006 0B       		.uleb128 0xb
 1099 0007 03       		.uleb128 0x3
 1100 0008 0E       		.uleb128 0xe
 1101 0009 1B       		.uleb128 0x1b
 1102 000a 0E       		.uleb128 0xe
 1103 000b 55       		.uleb128 0x55
 1104 000c 17       		.uleb128 0x17
 1105 000d 11       		.uleb128 0x11
 1106 000e 01       		.uleb128 0x1
 1107 000f 10       		.uleb128 0x10
 1108 0010 17       		.uleb128 0x17
 1109 0011 00       		.byte	0
 1110 0012 00       		.byte	0
 1111 0013 02       		.uleb128 0x2
 1112 0014 24       		.uleb128 0x24
 1113 0015 00       		.byte	0
 1114 0016 0B       		.uleb128 0xb
 1115 0017 0B       		.uleb128 0xb
 1116 0018 3E       		.uleb128 0x3e
 1117 0019 0B       		.uleb128 0xb
 1118 001a 03       		.uleb128 0x3
 1119 001b 0E       		.uleb128 0xe
 1120 001c 00       		.byte	0
 1121 001d 00       		.byte	0
 1122 001e 03       		.uleb128 0x3
 1123 001f 24       		.uleb128 0x24
 1124 0020 00       		.byte	0
 1125 0021 0B       		.uleb128 0xb
 1126 0022 0B       		.uleb128 0xb
 1127 0023 3E       		.uleb128 0x3e
 1128 0024 0B       		.uleb128 0xb
 1129 0025 03       		.uleb128 0x3
 1130 0026 08       		.uleb128 0x8
 1131 0027 00       		.byte	0
 1132 0028 00       		.byte	0
 1133 0029 04       		.uleb128 0x4
 1134 002a 16       		.uleb128 0x16
 1135 002b 00       		.byte	0
 1136 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 37


 1137 002d 0E       		.uleb128 0xe
 1138 002e 3A       		.uleb128 0x3a
 1139 002f 0B       		.uleb128 0xb
 1140 0030 3B       		.uleb128 0x3b
 1141 0031 05       		.uleb128 0x5
 1142 0032 49       		.uleb128 0x49
 1143 0033 13       		.uleb128 0x13
 1144 0034 00       		.byte	0
 1145 0035 00       		.byte	0
 1146 0036 05       		.uleb128 0x5
 1147 0037 35       		.uleb128 0x35
 1148 0038 00       		.byte	0
 1149 0039 49       		.uleb128 0x49
 1150 003a 13       		.uleb128 0x13
 1151 003b 00       		.byte	0
 1152 003c 00       		.byte	0
 1153 003d 06       		.uleb128 0x6
 1154 003e 2E       		.uleb128 0x2e
 1155 003f 00       		.byte	0
 1156 0040 3F       		.uleb128 0x3f
 1157 0041 19       		.uleb128 0x19
 1158 0042 03       		.uleb128 0x3
 1159 0043 0E       		.uleb128 0xe
 1160 0044 3A       		.uleb128 0x3a
 1161 0045 0B       		.uleb128 0xb
 1162 0046 3B       		.uleb128 0x3b
 1163 0047 0B       		.uleb128 0xb
 1164 0048 27       		.uleb128 0x27
 1165 0049 19       		.uleb128 0x19
 1166 004a 11       		.uleb128 0x11
 1167 004b 01       		.uleb128 0x1
 1168 004c 12       		.uleb128 0x12
 1169 004d 06       		.uleb128 0x6
 1170 004e 40       		.uleb128 0x40
 1171 004f 18       		.uleb128 0x18
 1172 0050 9742     		.uleb128 0x2117
 1173 0052 19       		.uleb128 0x19
 1174 0053 00       		.byte	0
 1175 0054 00       		.byte	0
 1176 0055 07       		.uleb128 0x7
 1177 0056 2E       		.uleb128 0x2e
 1178 0057 01       		.byte	0x1
 1179 0058 3F       		.uleb128 0x3f
 1180 0059 19       		.uleb128 0x19
 1181 005a 03       		.uleb128 0x3
 1182 005b 0E       		.uleb128 0xe
 1183 005c 3A       		.uleb128 0x3a
 1184 005d 0B       		.uleb128 0xb
 1185 005e 3B       		.uleb128 0x3b
 1186 005f 05       		.uleb128 0x5
 1187 0060 27       		.uleb128 0x27
 1188 0061 19       		.uleb128 0x19
 1189 0062 11       		.uleb128 0x11
 1190 0063 01       		.uleb128 0x1
 1191 0064 12       		.uleb128 0x12
 1192 0065 06       		.uleb128 0x6
 1193 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 38


 1194 0067 18       		.uleb128 0x18
 1195 0068 9742     		.uleb128 0x2117
 1196 006a 19       		.uleb128 0x19
 1197 006b 01       		.uleb128 0x1
 1198 006c 13       		.uleb128 0x13
 1199 006d 00       		.byte	0
 1200 006e 00       		.byte	0
 1201 006f 08       		.uleb128 0x8
 1202 0070 05       		.uleb128 0x5
 1203 0071 00       		.byte	0
 1204 0072 03       		.uleb128 0x3
 1205 0073 0E       		.uleb128 0xe
 1206 0074 3A       		.uleb128 0x3a
 1207 0075 0B       		.uleb128 0xb
 1208 0076 3B       		.uleb128 0x3b
 1209 0077 05       		.uleb128 0x5
 1210 0078 49       		.uleb128 0x49
 1211 0079 13       		.uleb128 0x13
 1212 007a 02       		.uleb128 0x2
 1213 007b 18       		.uleb128 0x18
 1214 007c 00       		.byte	0
 1215 007d 00       		.byte	0
 1216 007e 09       		.uleb128 0x9
 1217 007f 2E       		.uleb128 0x2e
 1218 0080 00       		.byte	0
 1219 0081 3F       		.uleb128 0x3f
 1220 0082 19       		.uleb128 0x19
 1221 0083 03       		.uleb128 0x3
 1222 0084 0E       		.uleb128 0xe
 1223 0085 3A       		.uleb128 0x3a
 1224 0086 0B       		.uleb128 0xb
 1225 0087 3B       		.uleb128 0x3b
 1226 0088 05       		.uleb128 0x5
 1227 0089 27       		.uleb128 0x27
 1228 008a 19       		.uleb128 0x19
 1229 008b 49       		.uleb128 0x49
 1230 008c 13       		.uleb128 0x13
 1231 008d 11       		.uleb128 0x11
 1232 008e 01       		.uleb128 0x1
 1233 008f 12       		.uleb128 0x12
 1234 0090 06       		.uleb128 0x6
 1235 0091 40       		.uleb128 0x40
 1236 0092 18       		.uleb128 0x18
 1237 0093 9742     		.uleb128 0x2117
 1238 0095 19       		.uleb128 0x19
 1239 0096 00       		.byte	0
 1240 0097 00       		.byte	0
 1241 0098 0A       		.uleb128 0xa
 1242 0099 05       		.uleb128 0x5
 1243 009a 00       		.byte	0
 1244 009b 03       		.uleb128 0x3
 1245 009c 0E       		.uleb128 0xe
 1246 009d 3A       		.uleb128 0x3a
 1247 009e 0B       		.uleb128 0xb
 1248 009f 3B       		.uleb128 0x3b
 1249 00a0 05       		.uleb128 0x5
 1250 00a1 49       		.uleb128 0x49
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 39


 1251 00a2 13       		.uleb128 0x13
 1252 00a3 02       		.uleb128 0x2
 1253 00a4 17       		.uleb128 0x17
 1254 00a5 00       		.byte	0
 1255 00a6 00       		.byte	0
 1256 00a7 0B       		.uleb128 0xb
 1257 00a8 2E       		.uleb128 0x2e
 1258 00a9 01       		.byte	0x1
 1259 00aa 3F       		.uleb128 0x3f
 1260 00ab 19       		.uleb128 0x19
 1261 00ac 03       		.uleb128 0x3
 1262 00ad 0E       		.uleb128 0xe
 1263 00ae 3A       		.uleb128 0x3a
 1264 00af 0B       		.uleb128 0xb
 1265 00b0 3B       		.uleb128 0x3b
 1266 00b1 05       		.uleb128 0x5
 1267 00b2 27       		.uleb128 0x27
 1268 00b3 19       		.uleb128 0x19
 1269 00b4 49       		.uleb128 0x49
 1270 00b5 13       		.uleb128 0x13
 1271 00b6 11       		.uleb128 0x11
 1272 00b7 01       		.uleb128 0x1
 1273 00b8 12       		.uleb128 0x12
 1274 00b9 06       		.uleb128 0x6
 1275 00ba 40       		.uleb128 0x40
 1276 00bb 18       		.uleb128 0x18
 1277 00bc 9742     		.uleb128 0x2117
 1278 00be 19       		.uleb128 0x19
 1279 00bf 01       		.uleb128 0x1
 1280 00c0 13       		.uleb128 0x13
 1281 00c1 00       		.byte	0
 1282 00c2 00       		.byte	0
 1283 00c3 0C       		.uleb128 0xc
 1284 00c4 34       		.uleb128 0x34
 1285 00c5 00       		.byte	0
 1286 00c6 03       		.uleb128 0x3
 1287 00c7 0E       		.uleb128 0xe
 1288 00c8 3A       		.uleb128 0x3a
 1289 00c9 0B       		.uleb128 0xb
 1290 00ca 3B       		.uleb128 0x3b
 1291 00cb 05       		.uleb128 0x5
 1292 00cc 49       		.uleb128 0x49
 1293 00cd 13       		.uleb128 0x13
 1294 00ce 02       		.uleb128 0x2
 1295 00cf 18       		.uleb128 0x18
 1296 00d0 00       		.byte	0
 1297 00d1 00       		.byte	0
 1298 00d2 0D       		.uleb128 0xd
 1299 00d3 898201   		.uleb128 0x4109
 1300 00d6 00       		.byte	0
 1301 00d7 11       		.uleb128 0x11
 1302 00d8 01       		.uleb128 0x1
 1303 00d9 31       		.uleb128 0x31
 1304 00da 13       		.uleb128 0x13
 1305 00db 00       		.byte	0
 1306 00dc 00       		.byte	0
 1307 00dd 0E       		.uleb128 0xe
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 40


 1308 00de 2E       		.uleb128 0x2e
 1309 00df 01       		.byte	0x1
 1310 00e0 3F       		.uleb128 0x3f
 1311 00e1 19       		.uleb128 0x19
 1312 00e2 03       		.uleb128 0x3
 1313 00e3 0E       		.uleb128 0xe
 1314 00e4 3A       		.uleb128 0x3a
 1315 00e5 0B       		.uleb128 0xb
 1316 00e6 3B       		.uleb128 0x3b
 1317 00e7 0B       		.uleb128 0xb
 1318 00e8 27       		.uleb128 0x27
 1319 00e9 19       		.uleb128 0x19
 1320 00ea 11       		.uleb128 0x11
 1321 00eb 01       		.uleb128 0x1
 1322 00ec 12       		.uleb128 0x12
 1323 00ed 06       		.uleb128 0x6
 1324 00ee 40       		.uleb128 0x40
 1325 00ef 18       		.uleb128 0x18
 1326 00f0 9742     		.uleb128 0x2117
 1327 00f2 19       		.uleb128 0x19
 1328 00f3 01       		.uleb128 0x1
 1329 00f4 13       		.uleb128 0x13
 1330 00f5 00       		.byte	0
 1331 00f6 00       		.byte	0
 1332 00f7 0F       		.uleb128 0xf
 1333 00f8 34       		.uleb128 0x34
 1334 00f9 00       		.byte	0
 1335 00fa 03       		.uleb128 0x3
 1336 00fb 0E       		.uleb128 0xe
 1337 00fc 3A       		.uleb128 0x3a
 1338 00fd 0B       		.uleb128 0xb
 1339 00fe 3B       		.uleb128 0x3b
 1340 00ff 0B       		.uleb128 0xb
 1341 0100 49       		.uleb128 0x49
 1342 0101 13       		.uleb128 0x13
 1343 0102 02       		.uleb128 0x2
 1344 0103 17       		.uleb128 0x17
 1345 0104 00       		.byte	0
 1346 0105 00       		.byte	0
 1347 0106 10       		.uleb128 0x10
 1348 0107 898201   		.uleb128 0x4109
 1349 010a 01       		.byte	0x1
 1350 010b 11       		.uleb128 0x11
 1351 010c 01       		.uleb128 0x1
 1352 010d 31       		.uleb128 0x31
 1353 010e 13       		.uleb128 0x13
 1354 010f 01       		.uleb128 0x1
 1355 0110 13       		.uleb128 0x13
 1356 0111 00       		.byte	0
 1357 0112 00       		.byte	0
 1358 0113 11       		.uleb128 0x11
 1359 0114 8A8201   		.uleb128 0x410a
 1360 0117 00       		.byte	0
 1361 0118 02       		.uleb128 0x2
 1362 0119 18       		.uleb128 0x18
 1363 011a 9142     		.uleb128 0x2111
 1364 011c 18       		.uleb128 0x18
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 41


 1365 011d 00       		.byte	0
 1366 011e 00       		.byte	0
 1367 011f 12       		.uleb128 0x12
 1368 0120 34       		.uleb128 0x34
 1369 0121 00       		.byte	0
 1370 0122 03       		.uleb128 0x3
 1371 0123 0E       		.uleb128 0xe
 1372 0124 3A       		.uleb128 0x3a
 1373 0125 0B       		.uleb128 0xb
 1374 0126 3B       		.uleb128 0x3b
 1375 0127 0B       		.uleb128 0xb
 1376 0128 49       		.uleb128 0x49
 1377 0129 13       		.uleb128 0x13
 1378 012a 3F       		.uleb128 0x3f
 1379 012b 19       		.uleb128 0x19
 1380 012c 02       		.uleb128 0x2
 1381 012d 18       		.uleb128 0x18
 1382 012e 00       		.byte	0
 1383 012f 00       		.byte	0
 1384 0130 13       		.uleb128 0x13
 1385 0131 2E       		.uleb128 0x2e
 1386 0132 00       		.byte	0
 1387 0133 3F       		.uleb128 0x3f
 1388 0134 19       		.uleb128 0x19
 1389 0135 3C       		.uleb128 0x3c
 1390 0136 19       		.uleb128 0x19
 1391 0137 6E       		.uleb128 0x6e
 1392 0138 0E       		.uleb128 0xe
 1393 0139 03       		.uleb128 0x3
 1394 013a 0E       		.uleb128 0xe
 1395 013b 3A       		.uleb128 0x3a
 1396 013c 0B       		.uleb128 0xb
 1397 013d 3B       		.uleb128 0x3b
 1398 013e 0B       		.uleb128 0xb
 1399 013f 00       		.byte	0
 1400 0140 00       		.byte	0
 1401 0141 00       		.byte	0
 1402              		.section	.debug_loc,"",%progbits
 1403              	.Ldebug_loc0:
 1404              	.LLST0:
 1405 0000 00000000 		.4byte	.LVL4
 1406 0004 10000000 		.4byte	.LVL5
 1407 0008 0100     		.2byte	0x1
 1408 000a 50       		.byte	0x50
 1409 000b 10000000 		.4byte	.LVL5
 1410 000f 1C000000 		.4byte	.LFE10
 1411 0013 0400     		.2byte	0x4
 1412 0015 F3       		.byte	0xf3
 1413 0016 01       		.uleb128 0x1
 1414 0017 50       		.byte	0x50
 1415 0018 9F       		.byte	0x9f
 1416 0019 00000000 		.4byte	0
 1417 001d 00000000 		.4byte	0
 1418              	.LLST1:
 1419 0021 0A000000 		.4byte	.LVL11
 1420 0025 0E000000 		.4byte	.LVL12
 1421 0029 0100     		.2byte	0x1
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 42


 1422 002b 53       		.byte	0x53
 1423 002c 00000000 		.4byte	0
 1424 0030 00000000 		.4byte	0
 1425              	.LLST2:
 1426 0034 50000000 		.4byte	.LVL19
 1427 0038 5D000000 		.4byte	.LVL20-1
 1428 003c 0100     		.2byte	0x1
 1429 003e 50       		.byte	0x50
 1430 003f 00000000 		.4byte	0
 1431 0043 00000000 		.4byte	0
 1432              		.section	.debug_aranges,"",%progbits
 1433 0000 B4000000 		.4byte	0xb4
 1434 0004 0200     		.2byte	0x2
 1435 0006 00000000 		.4byte	.Ldebug_info0
 1436 000a 04       		.byte	0x4
 1437 000b 00       		.byte	0
 1438 000c 0000     		.2byte	0
 1439 000e 0000     		.2byte	0
 1440 0010 00000000 		.4byte	.LFB2
 1441 0014 10000000 		.4byte	.LFE2-.LFB2
 1442 0018 00000000 		.4byte	.LFB3
 1443 001c 10000000 		.4byte	.LFE3-.LFB3
 1444 0020 00000000 		.4byte	.LFB4
 1445 0024 0C000000 		.4byte	.LFE4-.LFB4
 1446 0028 00000000 		.4byte	.LFB5
 1447 002c 14000000 		.4byte	.LFE5-.LFB5
 1448 0030 00000000 		.4byte	.LFB7
 1449 0034 0C000000 		.4byte	.LFE7-.LFB7
 1450 0038 00000000 		.4byte	.LFB8
 1451 003c 0C000000 		.4byte	.LFE8-.LFB8
 1452 0040 00000000 		.4byte	.LFB9
 1453 0044 0C000000 		.4byte	.LFE9-.LFB9
 1454 0048 00000000 		.4byte	.LFB10
 1455 004c 1C000000 		.4byte	.LFE10-.LFB10
 1456 0050 00000000 		.4byte	.LFB11
 1457 0054 10000000 		.4byte	.LFE11-.LFB11
 1458 0058 00000000 		.4byte	.LFB12
 1459 005c 0C000000 		.4byte	.LFE12-.LFB12
 1460 0060 00000000 		.4byte	.LFB13
 1461 0064 0C000000 		.4byte	.LFE13-.LFB13
 1462 0068 00000000 		.4byte	.LFB14
 1463 006c 0C000000 		.4byte	.LFE14-.LFB14
 1464 0070 00000000 		.4byte	.LFB15
 1465 0074 0C000000 		.4byte	.LFE15-.LFB15
 1466 0078 00000000 		.4byte	.LFB16
 1467 007c 0C000000 		.4byte	.LFE16-.LFB16
 1468 0080 00000000 		.4byte	.LFB6
 1469 0084 14000000 		.4byte	.LFE6-.LFB6
 1470 0088 00000000 		.4byte	.LFB1
 1471 008c 6C000000 		.4byte	.LFE1-.LFB1
 1472 0090 00000000 		.4byte	.LFB0
 1473 0094 1C000000 		.4byte	.LFE0-.LFB0
 1474 0098 00000000 		.4byte	.LFB17
 1475 009c 0C000000 		.4byte	.LFE17-.LFB17
 1476 00a0 00000000 		.4byte	.LFB18
 1477 00a4 0C000000 		.4byte	.LFE18-.LFB18
 1478 00a8 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 43


 1479 00ac 0C000000 		.4byte	.LFE19-.LFB19
 1480 00b0 00000000 		.4byte	0
 1481 00b4 00000000 		.4byte	0
 1482              		.section	.debug_ranges,"",%progbits
 1483              	.Ldebug_ranges0:
 1484 0000 00000000 		.4byte	.LFB2
 1485 0004 10000000 		.4byte	.LFE2
 1486 0008 00000000 		.4byte	.LFB3
 1487 000c 10000000 		.4byte	.LFE3
 1488 0010 00000000 		.4byte	.LFB4
 1489 0014 0C000000 		.4byte	.LFE4
 1490 0018 00000000 		.4byte	.LFB5
 1491 001c 14000000 		.4byte	.LFE5
 1492 0020 00000000 		.4byte	.LFB7
 1493 0024 0C000000 		.4byte	.LFE7
 1494 0028 00000000 		.4byte	.LFB8
 1495 002c 0C000000 		.4byte	.LFE8
 1496 0030 00000000 		.4byte	.LFB9
 1497 0034 0C000000 		.4byte	.LFE9
 1498 0038 00000000 		.4byte	.LFB10
 1499 003c 1C000000 		.4byte	.LFE10
 1500 0040 00000000 		.4byte	.LFB11
 1501 0044 10000000 		.4byte	.LFE11
 1502 0048 00000000 		.4byte	.LFB12
 1503 004c 0C000000 		.4byte	.LFE12
 1504 0050 00000000 		.4byte	.LFB13
 1505 0054 0C000000 		.4byte	.LFE13
 1506 0058 00000000 		.4byte	.LFB14
 1507 005c 0C000000 		.4byte	.LFE14
 1508 0060 00000000 		.4byte	.LFB15
 1509 0064 0C000000 		.4byte	.LFE15
 1510 0068 00000000 		.4byte	.LFB16
 1511 006c 0C000000 		.4byte	.LFE16
 1512 0070 00000000 		.4byte	.LFB6
 1513 0074 14000000 		.4byte	.LFE6
 1514 0078 00000000 		.4byte	.LFB1
 1515 007c 6C000000 		.4byte	.LFE1
 1516 0080 00000000 		.4byte	.LFB0
 1517 0084 1C000000 		.4byte	.LFE0
 1518 0088 00000000 		.4byte	.LFB17
 1519 008c 0C000000 		.4byte	.LFE17
 1520 0090 00000000 		.4byte	.LFB18
 1521 0094 0C000000 		.4byte	.LFE18
 1522 0098 00000000 		.4byte	.LFB19
 1523 009c 0C000000 		.4byte	.LFE19
 1524 00a0 00000000 		.4byte	0
 1525 00a4 00000000 		.4byte	0
 1526              		.section	.debug_line,"",%progbits
 1527              	.Ldebug_line0:
 1528 0000 CC010000 		.section	.debug_str,"MS",%progbits,1
 1528      02004C00 
 1528      00000201 
 1528      FB0E0D00 
 1528      01010101 
 1529              	.LASF15:
 1530 0000 72656731 		.ascii	"reg16\000"
 1530      3600
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 44


 1531              	.LASF24:
 1532 0006 54455354 		.ascii	"TEST_WriteCompare1\000"
 1532      5F577269 
 1532      7465436F 
 1532      6D706172 
 1532      653100
 1533              	.LASF26:
 1534 0019 54455354 		.ascii	"TEST_WriteCompare2\000"
 1534      5F577269 
 1534      7465436F 
 1534      6D706172 
 1534      653200
 1535              	.LASF44:
 1536 002c 54455354 		.ascii	"TEST_ReadCompare2\000"
 1536      5F526561 
 1536      64436F6D 
 1536      70617265 
 1536      3200
 1537              	.LASF11:
 1538 003e 666C6F61 		.ascii	"float\000"
 1538      7400
 1539              	.LASF37:
 1540 0044 54455354 		.ascii	"TEST_ClearFIFO\000"
 1540      5F436C65 
 1540      61724649 
 1540      464F00
 1541              	.LASF45:
 1542 0053 54455354 		.ascii	"TEST_ReadPeriod\000"
 1542      5F526561 
 1542      64506572 
 1542      696F6400 
 1543              	.LASF50:
 1544 0063 433A5C55 		.ascii	"C:\\Users\\e.ivanov\\Documents\\GitHub\\adc\\Manche"
 1544      73657273 
 1544      5C652E69 
 1544      76616E6F 
 1544      765C446F 
 1545 0090 73746572 		.ascii	"ster encoder-decoder.cydsn\000"
 1545      20656E63 
 1545      6F646572 
 1545      2D646563 
 1545      6F646572 
 1546              	.LASF23:
 1547 00ab 70657269 		.ascii	"period\000"
 1547      6F6400
 1548              	.LASF3:
 1549 00b2 73686F72 		.ascii	"short unsigned int\000"
 1549      7420756E 
 1549      7369676E 
 1549      65642069 
 1549      6E7400
 1550              	.LASF33:
 1551 00c5 54455354 		.ascii	"TEST_ReadStatusRegister\000"
 1551      5F526561 
 1551      64537461 
 1551      74757352 
 1551      65676973 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 45


 1552              	.LASF51:
 1553 00dd 54455354 		.ascii	"TEST_ReadControlRegister\000"
 1553      5F526561 
 1553      64436F6E 
 1553      74726F6C 
 1553      52656769 
 1554              	.LASF29:
 1555 00f6 54455354 		.ascii	"TEST_ReadCounter\000"
 1555      5F526561 
 1555      64436F75 
 1555      6E746572 
 1555      00
 1556              	.LASF41:
 1557 0107 54455354 		.ascii	"TEST_interruptState\000"
 1557      5F696E74 
 1557      65727275 
 1557      70745374 
 1557      61746500 
 1558              	.LASF22:
 1559 011b 636F756E 		.ascii	"counter\000"
 1559      74657200 
 1560              	.LASF7:
 1561 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 1561      206C6F6E 
 1561      6720756E 
 1561      7369676E 
 1561      65642069 
 1562              	.LASF49:
 1563 013a 47656E65 		.ascii	"Generated_Source\\PSoC5\\TEST.c\000"
 1563      72617465 
 1563      645F536F 
 1563      75726365 
 1563      5C50536F 
 1564              	.LASF48:
 1565 0158 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1565      43313120 
 1565      352E342E 
 1565      31203230 
 1565      31363036 
 1566 018b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1566      20726576 
 1566      6973696F 
 1566      6E203233 
 1566      37373135 
 1567 01be 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1567      66756E63 
 1567      74696F6E 
 1567      2D736563 
 1567      74696F6E 
 1568              	.LASF30:
 1569 01e6 54455354 		.ascii	"TEST_ReadDeadTime\000"
 1569      5F526561 
 1569      64446561 
 1569      6454696D 
 1569      6500
 1570              	.LASF38:
 1571 01f8 54455354 		.ascii	"TEST_Init\000"
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 46


 1571      5F496E69 
 1571      7400
 1572              	.LASF52:
 1573 0202 54455354 		.ascii	"TEST_initVar\000"
 1573      5F696E69 
 1573      74566172 
 1573      00
 1574              	.LASF5:
 1575 020f 6C6F6E67 		.ascii	"long unsigned int\000"
 1575      20756E73 
 1575      69676E65 
 1575      6420696E 
 1575      7400
 1576              	.LASF9:
 1577 0221 75696E74 		.ascii	"uint8\000"
 1577      3800
 1578              	.LASF35:
 1579 0227 636F6E74 		.ascii	"control\000"
 1579      726F6C00 
 1580              	.LASF21:
 1581 022f 54455354 		.ascii	"TEST_WritePeriod\000"
 1581      5F577269 
 1581      74655065 
 1581      72696F64 
 1581      00
 1582              	.LASF1:
 1583 0240 756E7369 		.ascii	"unsigned char\000"
 1583      676E6564 
 1583      20636861 
 1583      7200
 1584              	.LASF12:
 1585 024e 646F7562 		.ascii	"double\000"
 1585      6C6500
 1586              	.LASF18:
 1587 0255 54455354 		.ascii	"TEST_Enable\000"
 1587      5F456E61 
 1587      626C6500 
 1588              	.LASF10:
 1589 0261 75696E74 		.ascii	"uint16\000"
 1589      313600
 1590              	.LASF46:
 1591 0268 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1591      74657243 
 1591      72697469 
 1591      63616C53 
 1591      65637469 
 1592              	.LASF8:
 1593 027f 756E7369 		.ascii	"unsigned int\000"
 1593      676E6564 
 1593      20696E74 
 1593      00
 1594              	.LASF47:
 1595 028c 43794578 		.ascii	"CyExitCriticalSection\000"
 1595      69744372 
 1595      69746963 
 1595      616C5365 
 1595      6374696F 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 47


 1596              	.LASF39:
 1597 02a2 72657375 		.ascii	"result\000"
 1597      6C7400
 1598              	.LASF19:
 1599 02a9 54455354 		.ascii	"TEST_Stop\000"
 1599      5F53746F 
 1599      7000
 1600              	.LASF14:
 1601 02b3 72656738 		.ascii	"reg8\000"
 1601      00
 1602              	.LASF16:
 1603 02b8 6C6F6E67 		.ascii	"long double\000"
 1603      20646F75 
 1603      626C6500 
 1604              	.LASF17:
 1605 02c4 73697A65 		.ascii	"sizetype\000"
 1605      74797065 
 1605      00
 1606              	.LASF36:
 1607 02cd 54455354 		.ascii	"TEST_ReadCapture\000"
 1607      5F526561 
 1607      64436170 
 1607      74757265 
 1607      00
 1608              	.LASF6:
 1609 02de 6C6F6E67 		.ascii	"long long int\000"
 1609      206C6F6E 
 1609      6720696E 
 1609      7400
 1610              	.LASF32:
 1611 02ec 696E7465 		.ascii	"interruptMode\000"
 1611      72727570 
 1611      744D6F64 
 1611      6500
 1612              	.LASF20:
 1613 02fa 54455354 		.ascii	"TEST_WriteCounter\000"
 1613      5F577269 
 1613      7465436F 
 1613      756E7465 
 1613      7200
 1614              	.LASF2:
 1615 030c 73686F72 		.ascii	"short int\000"
 1615      7420696E 
 1615      7400
 1616              	.LASF40:
 1617 0316 6374726C 		.ascii	"ctrl\000"
 1617      00
 1618              	.LASF34:
 1619 031b 54455354 		.ascii	"TEST_WriteControlRegister\000"
 1619      5F577269 
 1619      7465436F 
 1619      6E74726F 
 1619      6C526567 
 1620              	.LASF43:
 1621 0335 54455354 		.ascii	"TEST_ReadCompare1\000"
 1621      5F526561 
 1621      64436F6D 
ARM GAS  C:\Users\EA527~1.IVA\AppData\Local\Temp\ccRIZlvO.s 			page 48


 1621      70617265 
 1621      3100
 1622              	.LASF4:
 1623 0347 6C6F6E67 		.ascii	"long int\000"
 1623      20696E74 
 1623      00
 1624              	.LASF13:
 1625 0350 63686172 		.ascii	"char\000"
 1625      00
 1626              	.LASF42:
 1627 0355 54455354 		.ascii	"TEST_Start\000"
 1627      5F537461 
 1627      727400
 1628              	.LASF0:
 1629 0360 7369676E 		.ascii	"signed char\000"
 1629      65642063 
 1629      68617200 
 1630              	.LASF25:
 1631 036c 636F6D70 		.ascii	"compare\000"
 1631      61726500 
 1632              	.LASF31:
 1633 0374 54455354 		.ascii	"TEST_SetInterruptMode\000"
 1633      5F536574 
 1633      496E7465 
 1633      72727570 
 1633      744D6F64 
 1634              	.LASF28:
 1635 038a 64656164 		.ascii	"deadtime\000"
 1635      74696D65 
 1635      00
 1636              	.LASF27:
 1637 0393 54455354 		.ascii	"TEST_WriteDeadTime\000"
 1637      5F577269 
 1637      74654465 
 1637      61645469 
 1637      6D6500
 1638              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
